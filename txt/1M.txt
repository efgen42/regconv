2020-02-06 03:18:06.750797 D system Th{6327} [corba/pay_service_impl.cpp:701] run() Before NCTService ping ...
2020-02-06 03:18:06.751797 D system Th{6327} [corba/pay_service_impl.cpp:719] run() NCTService ping ok
2020-02-06 03:18:07.001797 D trk Th{6366} [io/src/timer_wrap.cpp:272] handleEvent()  ptr: 0x00007FFA0C009220 fired
2020-02-06 03:18:07.001797 D trk Th{6366} [doms/src/trk_driver/apc.cpp:118] sendMessage() Doms. Sending heartbeat message
2020-02-06 03:18:07.001797 D trk Th{6366} [io/src/timer_wrap.cpp:245] setSingleShot()  ptr: 0x00007FFA0C009220 10000 ms
2020-02-06 03:18:07.236797 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:18:07.236797 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:18:07.236797 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:18:07.341797 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:18:07.341797 I sale Th{6306} [corba/fr_service_callback.cpp:52] call_allowed() callback for fr_key_id = 2 & sessionid = 1729223296538875683 allowed seller_place = operator_UI tmp= 2 is_cash=0is_really_op_wp=1
2020-02-06 03:18:07.341797 I sale Th{6306} [corba/fr_service_callback.cpp:52] call_allowed() callback for fr_key_id = 2 & sessionid = 9081255113048536069 not allowed seller_place = operator_UI tmp= 1 is_cash=0is_really_op_wp=1
2020-02-06 03:18:07.373797 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:18:07.373797 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:18:07.373797 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:18:07.390797 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:18:07.390797 I sale Th{6305} [corba/fr_service_callback.cpp:52] call_allowed() callback for fr_key_id = 1 & sessionid = 1729223296538875683 not allowed seller_place = operator_UI tmp= 2 is_cash=0is_really_op_wp=1
2020-02-06 03:18:07.390797 I sale Th{6305} [corba/fr_service_callback.cpp:52] call_allowed() callback for fr_key_id = 1 & sessionid = 9081255113048536069 allowed seller_place = operator_UI tmp= 1 is_cash=0is_really_op_wp=1
2020-02-06 03:18:08.524797 D trk Th{6297} [doms/src/trk_driver/apc.cpp:115] sendMessage() Doms. Sending a message: FpStatus3::Req: { fpId: 0 }
2020-02-06 03:18:08.524797 D trk Th{6297} [doms/src/trk_driver/apc.cpp:116] sendMessage() Doms. Message dump: 01 15 03 00
2020-02-06 03:18:08.555797 D trk Th{6297} [doms/src/trk_driver/apc.cpp:184] readAnswer() Doms. Message decoded: 01 FE 00 95 03 08 1F 01 23 02 56 00 00 06 01 01 01 02 02 01 23 03 06 05 01 02 03 04 05 10 01 01 11 01 01 16 01 00 1F 02 23 02 56 00 00 06 01 01 01 02 02 01 23 03 06 05 01 02 03 04 05 10 01 01 11 01 01 16 01 00 1F 03 23 02 56 00 00 06 01 01 01 02 02 01 23 03 06 05 01 02 03 04 05 10 01 01 11 01 01 16 01 00 1F 04 23 02 56 00 00 06 01 01 01 02 02 01 23 03 06 05 01 02 03 04 05 10 01 01 11 01 01 16 01 00 1F 05 23 02 56 00 00 06 01 01 01 02 02 01 23 03 06 05 01 02 03 04 05 10 01 01 11 01 01 16 01 00 1F 06 23 02 56 00 00 06 01 01 01 02 02 01 23 03 06 05 01 02 03 04 05 10 01 01 11 01 01 16 01 00 1B 07 23 02 56 00 00 06 01 01 01 02 02 01 23 03 02 01 05 10 01 01 11 01 01 16 01 00 1C 08 23 02 56 00 00 06 01 01 01 02 02 01 23 03 03 02 05 05 10 01 01 11 01 01 16 01 00
2020-02-06 03:18:08.555797 D trk Th{6297} [doms/src/trk_driver/apc.cpp:91] createMessage() Doms. Message recv: MultiMessage::Reply: { 
                                ..m_repExtMsgCode: 0x0095
                                ..m_repMsgSubc: 0x03
                                ..m_list (8pcs): [
                                ....FpStatus3::Reply: { 
                                ......fpId: 1
                                ......activeSmId: 23
                                ......mainState: FMS_Idle(2)
                                ......subStates: lVOsBeAp
                                ......lockId: 0
                                ......gradeId: 0
                                ......supStPars: FpSupStatusPars(6pcs): [ 
                                ........SubStates2(1): [T__ml__s],
                                ........AvailSms(2): [List(1pcs): [ 23]],
                                ........AvailGrades(3): [List(5pcs): [ 1, 2, 3, 4, 5]],
                                ........OpMode(10): [1],
                                ........PgId(11): [1],
                                ........SubStates4(16): [pn]
                                ......]
                                ....},
                                ....FpStatus3::Reply: { 
                                ......fpId: 2
                                ......activeSmId: 23
                                ......mainState: FMS_Idle(2)
                                ......subStates: lVOsBeAp
                                ......lockId: 0
                                ......gradeId: 0
                                ......supStPars: FpSupStatusPars(6pcs): [ 
                                ........SubStates2(1): [T__ml__s],
                                ........AvailSms(2): [List(1pcs): [ 23]],
                                ........AvailGrades(3): [List(5pcs): [ 1, 2, 3, 4, 5]],
                                ........OpMode(10): [1],
                                ........PgId(11): [1],
                                ........SubStates4(16): [pn]
                                ......]
                                ....},
                                ....FpStatus3::Reply: { 
                                ......fpId: 3
                                ......activeSmId: 23
                                ......mainState: FMS_Idle(2)
                                ......subStates: lVOsBeAp
                                ......lockId: 0
                                ......gradeId: 0
                                ......supStPars: FpSupStatusPars(6pcs): [ 
                                ........SubStates2(1): [T__ml__s],
                                ........AvailSms(2): [List(1pcs): [ 23]],
                                ........AvailGrades(3): [List(5pcs): [ 1, 2, 3, 4, 5]],
                                ........OpMode(10): [1],
                                ........PgId(11): [1],
                                ........SubStates4(16): [pn]
                                ......]
                                ....},
                                ....FpStatus3::Reply: { 
                                ......fpId: 4
                                ......activeSmId: 23
                                ......mainState: FMS_Idle(2)
                                ......subStates: lVOsBeAp
                                ......lockId: 0
                                ......gradeId: 0
                                ......supStPars: FpSupStatusPars(6pcs): [ 
                                ........SubStates2(1): [T__ml__s],
                                ........AvailSms(2): [List(1pcs): [ 23]],
                                ........AvailGrades(3): [List(5pcs): [ 1, 2, 3, 4, 5]],
                                ........OpMode(10): [1],
                                ........PgId(11): [1],
                                ........SubStates4(16): [pn]
                                ......]
                                ....},
                                ....FpStatus3::Reply: { 
                                ......fpId: 5
                                ......activeSmId: 23
                                ......mainState: FMS_Idle(2)
                                ......subStates: lVOsBeAp
                                ......lockId: 0
                                ......gradeId: 0
                                ......supStPars: FpSupStatusPars(6pcs): [ 
                                ........SubStates2(1): [T__ml__s],
                                ........AvailSms(2): [List(1pcs): [ 23]],
                                ........AvailGrades(3): [List(5pcs): [ 1, 2, 3, 4, 5]],
                                ........OpMode(10): [1],
                                ........PgId(11): [1],
                                ........SubStates4(16): [pn]
                                ......]
                                ....},
                                ....FpStatus3::Reply: { 
                                ......fpId: 6
                                ......activeSmId: 23
                                ......mainState: FMS_Idle(2)
                                ......subStates: lVOsBeAp
                                ......lockId: 0
                                ......gradeId: 0
                                ......supStPars: FpSupStatusPars(6pcs): [ 
                                ........SubStates2(1): [T__ml__s],
                                ........AvailSms(2): [List(1pcs): [ 23]],
                                ........AvailGrades(3): [List(5pcs): [ 1, 2, 3, 4, 5]],
                                ........OpMode(10): [1],
                                ........PgId(11): [1],
                                ........SubStates4(16): [pn]
                                ......]
                                ....},
                                ....FpStatus3::Reply: { 
                                ......fpId: 7
                                ......activeSmId: 23
                                ......mainState: FMS_Idle(2)
                                ......subStates: lVOsBeAp
                                ......lockId: 0
                                ......gradeId: 0
                                ......supStPars: FpSupStatusPars(6pcs): [ 
                                ........SubStates2(1): [T__ml__s],
                                ........AvailSms(2): [List(1pcs): [ 23]],
                                ........AvailGrades(3): [List(1pcs): [ 5]],
                                ........OpMode(10): [1],
                                ........PgId(11): [1],
                                ........SubStates4(16): [pn]
                                ......]
                                ....},
                                ....FpStatus3::Reply: { 
                                ......fpId: 8
                                ......activeSmId: 23
                                ......mainState: FMS_Idle(2)
                                ......subStates: lVOsBeAp
                                ......lockId: 0
                                ......gradeId: 0
                                ......supStPars: FpSupStatusPars(6pcs): [ 
                                ........SubStates2(1): [T__ml__s],
                                ........AvailSms(2): [List(1pcs): [ 23]],
                                ........AvailGrades(3): [List(2pcs): [ 5, 5]],
                                ........OpMode(10): [1],
                                ........PgId(11): [1],
                                ........SubStates4(16): [pn]
                                ......]
                                ....}
                                ..]
                                }
2020-02-06 03:18:09.155797 D trk Th{6297} [doms/src/trk_driver/apc.cpp:118] sendMessage() Doms. Sending heartbeat message
2020-02-06 03:18:09.341797 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:18:09.341797 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:18:09.341797 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:18:09.350797 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:18:09.350797 I sale Th{6306} [corba/fr_service_callback.cpp:52] call_allowed() callback for fr_key_id = 2 & sessionid = 1729223296538875683 allowed seller_place = operator_UI tmp= 2 is_cash=0is_really_op_wp=1
2020-02-06 03:18:09.350797 I sale Th{6306} [corba/fr_service_callback.cpp:52] call_allowed() callback for fr_key_id = 2 & sessionid = 9081255113048536069 not allowed seller_place = operator_UI tmp= 1 is_cash=0is_really_op_wp=1
2020-02-06 03:18:09.390797 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:18:09.390797 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:18:09.390797 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:18:09.397797 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:18:09.397797 I sale Th{6305} [corba/fr_service_callback.cpp:52] call_allowed() callback for fr_key_id = 1 & sessionid = 1729223296538875683 not allowed seller_place = operator_UI tmp= 2 is_cash=0is_really_op_wp=1
2020-02-06 03:18:09.397797 I sale Th{6305} [corba/fr_service_callback.cpp:52] call_allowed() callback for fr_key_id = 1 & sessionid = 9081255113048536069 allowed seller_place = operator_UI tmp= 1 is_cash=0is_really_op_wp=1
2020-02-06 03:18:09.481797 D system Th{6304} [corba/cbmodule_srv_impl.cpp:955] ping_clients() Begin pinging session: 3458430551181654012
2020-02-06 03:18:09.481797 D system Th{6304} [corba/cbmodule_srv_impl.cpp:957] ping_clients() Session: 3458430551181654012ping ok
2020-02-06 03:18:09.482797 D system Th{6304} [corba/cbmodule_srv_impl.cpp:955] ping_clients() Begin pinging session: 1729223296538875683
2020-02-06 03:18:09.482797 D system Th{6304} [corba/cbmodule_srv_impl.cpp:957] ping_clients() Session: 1729223296538875683ping ok
2020-02-06 03:18:09.482797 D system Th{6304} [corba/cbmodule_srv_impl.cpp:955] ping_clients() Begin pinging session: 9081255113048536069
2020-02-06 03:18:09.482797 D system Th{6304} [corba/cbmodule_srv_impl.cpp:957] ping_clients() Session: 9081255113048536069ping ok
2020-02-06 03:18:09.482797 I system Th{6304} [corba/cbmodule_srv_impl.cpp:966] ping_clients() rc=0
2020-02-06 03:18:10.187797 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC015230
2020-02-06 03:18:10.189797 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9B4182190
2020-02-06 03:18:10.190797 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC0069F0
2020-02-06 03:18:10.191797 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC010530
2020-02-06 03:18:10.193797 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC011400
2020-02-06 03:18:10.194797 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC006CC0
2020-02-06 03:18:11.350797 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:18:11.350797 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:18:11.350797 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:18:11.358797 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:18:11.358797 I sale Th{6306} [corba/fr_service_callback.cpp:52] call_allowed() callback for fr_key_id = 2 & sessionid = 1729223296538875683 allowed seller_place = operator_UI tmp= 2 is_cash=0is_really_op_wp=1
2020-02-06 03:18:11.358797 I sale Th{6306} [corba/fr_service_callback.cpp:52] call_allowed() callback for fr_key_id = 2 & sessionid = 9081255113048536069 not allowed seller_place = operator_UI tmp= 1 is_cash=0is_really_op_wp=1
2020-02-06 03:18:11.397797 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:18:11.397797 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:18:11.397797 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:18:11.404797 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:18:11.404797 I sale Th{6305} [corba/fr_service_callback.cpp:52] call_allowed() callback for fr_key_id = 1 & sessionid = 1729223296538875683 not allowed seller_place = operator_UI tmp= 2 is_cash=0is_really_op_wp=1
2020-02-06 03:18:11.404797 I sale Th{6305} [corba/fr_service_callback.cpp:52] call_allowed() callback for fr_key_id = 1 & sessionid = 9081255113048536069 allowed seller_place = operator_UI tmp= 1 is_cash=0is_really_op_wp=1
2020-02-06 03:18:11.751797 D system Th{6327} [corba/pay_service_impl.cpp:701] run() Before NCTService ping ...
2020-02-06 03:18:11.751797 D system Th{6327} [corba/pay_service_impl.cpp:719] run() NCTService ping ok
2020-02-06 03:18:12.483797 D system Th{6304} [corba/cbmodule_srv_impl.cpp:955] ping_clients() Begin pinging session: 3458430551181654012
2020-02-06 03:18:12.483797 D system Th{6304} [corba/cbmodule_srv_impl.cpp:957] ping_clients() Session: 3458430551181654012ping ok
2020-02-06 03:18:12.483797 D system Th{6304} [corba/cbmodule_srv_impl.cpp:955] ping_clients() Begin pinging session: 1729223296538875683
2020-02-06 03:18:12.484797 I system Th{6304} [corba/cbmodule_srv_impl.cpp:959] ping_clients() dead client found
2020-02-06 03:18:12.484797 D system Th{6304} [corba/cbmodule_srv_impl.cpp:955] ping_clients() Begin pinging session: 9081255113048536069
2020-02-06 03:18:12.485797 D system Th{6304} [corba/cbmodule_srv_impl.cpp:957] ping_clients() Session: 9081255113048536069ping ok
2020-02-06 03:18:12.485797 I system Th{6304} [corba/cbmodule_srv_impl.cpp:966] ping_clients() rc=1
2020-02-06 03:18:12.485797 I system Th{21848} [corba/cbmodule_srv_impl.cpp:272] run() Invalid session 1729223296538875683 found. Added to dead list
2020-02-06 03:18:12.485797 I system Th{21848} [corba/cbmodule_srv_impl.cpp:319] run() Removeing orphaned trans for session cans= ToCancel{ sid=1729223296538875683 nct=[], sct=[552] }
2020-02-06 03:18:12.485797 I sale Th{21848} [mcs/sale_service.cpp:1821] release_resources_by_session() session = 1729223296538875683 
2020-02-06 03:18:12.485797 I system Th{21848} [corba/cash_account_service.cpp:1831] release_resources_by_session()  lsid=NIL sid=1729223296538875683
2020-02-06 03:18:12.485797 I user Th{21848} [corba/cbmodule_srv_impl.cpp:344] run() send cancel to=552>
2020-02-06 03:18:12.485797 I system Th{21849} [corba/corba_utils.cpp:287] getObjectReference() getObjectReference: client try to do rir
2020-02-06 03:18:12.485797 I system Th{21850} [corba/corba_utils.cpp:287] getObjectReference() getObjectReference: client try to do rir
2020-02-06 03:18:12.486797 W system Th{21852} [corba/trk_monitor_adapter2.cpp:553] sessions_halted() Unsubscribe halted client (key, sid): (25, 1729223296538875683)
2020-02-06 03:18:12.486797 W system Th{21853} [corba/sale_server.cpp:310] sessions_halted() Unsubscribe halted shiftstate client (key, sid): (24, 1729223296538875683)
2020-02-06 03:18:12.486797 I system Th{21849} [corba/corba_utils.cpp:319] getObjectReference() getObjectReference: resolved
2020-02-06 03:18:12.486797 I system Th{21850} [corba/corba_utils.cpp:319] getObjectReference() getObjectReference: resolved
2020-02-06 03:18:12.486797 E system Th{21849} [corba/corba_utils.cpp:323] getObjectReference() Context not found.
2020-02-06 03:18:13.358797 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:18:13.358797 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:18:13.358797 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:18:13.367797 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:18:13.367797 I sale Th{6306} [corba/fr_service_callback.cpp:52] call_allowed() callback for fr_key_id = 2 & sessionid = 9081255113048536069 not allowed seller_place = operator_UI tmp= 1 is_cash=0is_really_op_wp=1
2020-02-06 03:18:13.405797 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:18:13.405797 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:18:13.405797 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:18:13.412797 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:18:13.412797 I sale Th{6305} [corba/fr_service_callback.cpp:52] call_allowed() callback for fr_key_id = 1 & sessionid = 9081255113048536069 allowed seller_place = operator_UI tmp= 1 is_cash=0is_really_op_wp=1
2020-02-06 03:18:15.367797 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:18:15.368797 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:18:15.368797 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:18:15.376797 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:18:15.376797 I sale Th{6306} [corba/fr_service_callback.cpp:52] call_allowed() callback for fr_key_id = 2 & sessionid = 9081255113048536069 not allowed seller_place = operator_UI tmp= 1 is_cash=0is_really_op_wp=1
2020-02-06 03:18:15.412797 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:18:15.412797 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:18:15.412797 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:18:15.418797 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:18:15.418797 I sale Th{6305} [corba/fr_service_callback.cpp:52] call_allowed() callback for fr_key_id = 1 & sessionid = 9081255113048536069 allowed seller_place = operator_UI tmp= 1 is_cash=0is_really_op_wp=1
2020-02-06 03:18:15.485797 D system Th{6304} [corba/cbmodule_srv_impl.cpp:955] ping_clients() Begin pinging session: 3458430551181654012
2020-02-06 03:18:15.485797 D system Th{6304} [corba/cbmodule_srv_impl.cpp:957] ping_clients() Session: 3458430551181654012ping ok
2020-02-06 03:18:15.485797 D system Th{6304} [corba/cbmodule_srv_impl.cpp:955] ping_clients() Begin pinging session: 9081255113048536069
2020-02-06 03:18:15.486797 D system Th{6304} [corba/cbmodule_srv_impl.cpp:957] ping_clients() Session: 9081255113048536069ping ok
2020-02-06 03:18:15.486797 I system Th{6304} [corba/cbmodule_srv_impl.cpp:966] ping_clients() rc=0
2020-02-06 03:18:16.751798 D system Th{6327} [corba/pay_service_impl.cpp:701] run() Before NCTService ping ...
2020-02-06 03:18:16.751798 D system Th{6327} [corba/pay_service_impl.cpp:719] run() NCTService ping ok
2020-02-06 03:18:17.002798 D trk Th{6366} [io/src/timer_wrap.cpp:272] handleEvent()  ptr: 0x00007FFA0C009220 fired
2020-02-06 03:18:17.002798 D trk Th{6366} [doms/src/trk_driver/apc.cpp:118] sendMessage() Doms. Sending heartbeat message
2020-02-06 03:18:17.002798 D trk Th{6366} [io/src/timer_wrap.cpp:245] setSingleShot()  ptr: 0x00007FFA0C009220 10000 ms
2020-02-06 03:18:17.376798 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:18:17.376798 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:18:17.376798 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:18:17.385798 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:18:17.385798 I sale Th{6306} [corba/fr_service_callback.cpp:52] call_allowed() callback for fr_key_id = 2 & sessionid = 9081255113048536069 not allowed seller_place = operator_UI tmp= 1 is_cash=0is_really_op_wp=1
2020-02-06 03:18:17.418798 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:18:17.418798 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:18:17.419798 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:18:17.425798 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:18:17.425798 I sale Th{6305} [corba/fr_service_callback.cpp:52] call_allowed() callback for fr_key_id = 1 & sessionid = 9081255113048536069 allowed seller_place = operator_UI tmp= 1 is_cash=0is_really_op_wp=1
2020-02-06 03:18:18.486798 D system Th{6304} [corba/cbmodule_srv_impl.cpp:955] ping_clients() Begin pinging session: 3458430551181654012
2020-02-06 03:18:18.487798 D system Th{6304} [corba/cbmodule_srv_impl.cpp:957] ping_clients() Session: 3458430551181654012ping ok
2020-02-06 03:18:18.487798 D system Th{6304} [corba/cbmodule_srv_impl.cpp:955] ping_clients() Begin pinging session: 9081255113048536069
2020-02-06 03:18:18.487798 D system Th{6304} [corba/cbmodule_srv_impl.cpp:957] ping_clients() Session: 9081255113048536069ping ok
2020-02-06 03:18:18.487798 I system Th{6304} [corba/cbmodule_srv_impl.cpp:966] ping_clients() rc=0
2020-02-06 03:18:19.060798 D trk Th{6297} [doms/src/trk_driver/apc.cpp:118] sendMessage() Doms. Sending heartbeat message
2020-02-06 03:18:19.314798 D system Th{6312} [corba/sale_server_tms_watcher.cpp:112] run() TMSWatcher poll
2020-02-06 03:18:19.314798 D system Th{21878} [corba/rests_server.cpp:204] db_resync_() Time to db-resync can rests doesn't came yet. Last sync was: 59982 msec ago
2020-02-06 03:18:19.314798 D system Th{21878} [corba/rests_server.cpp:287] get_all_data_locked()  push to map= vol=8387.940 min_book_rest=750.000 mass=6337.800 first=1 petrol=1000054 petrol_name=GD100(АИ-100)
2020-02-06 03:18:19.314798 D system Th{21878} [corba/rests_server.cpp:287] get_all_data_locked()  push to map= vol=12311.630 min_book_rest=747.000 mass=8912.378 first=2 petrol=1000003 petrol_name=GD95(АИ-95)
2020-02-06 03:18:19.314798 D system Th{21878} [corba/rests_server.cpp:287] get_all_data_locked()  push to map= vol=25725.210 min_book_rest=2453.000 mass=-4221.601 first=3 petrol=1000081 petrol_name=АИ-95(АИ-95)
2020-02-06 03:18:19.314798 D system Th{21878} [corba/rests_server.cpp:287] get_all_data_locked()  push to map= vol=22362.340 min_book_rest=1672.000 mass=-1639.507 first=4 petrol=1000033 petrol_name=АИ-92(АИ-92)
2020-02-06 03:18:19.314798 D system Th{21878} [corba/rests_server.cpp:287] get_all_data_locked()  push to map= vol=19130.610 min_book_rest=1645.000 mass=5857.970 first=5 petrol=1000051 petrol_name=ДТОПТИ(ДТ-З)
2020-02-06 03:18:19.314798 D system Th{21878} [corba/rests_server.cpp:287] get_all_data_locked()  push to map= vol=25980.110 min_book_rest=2365.000 mass=11394.182 first=6 petrol=1000051 petrol_name=ДТОПТИ(ДТ-З)
2020-02-06 03:18:19.314798 D system Th{21878} [corba/rests_server.cpp:204] db_resync_() Time to db-resync can rests doesn't came yet. Last sync was: 59982 msec ago
2020-02-06 03:18:19.314798 D system Th{21878} [corba/rests_server.cpp:95] BookRestCaller()  acc_vol2=7510.780 vol=8387.940 mbr=750.000
2020-02-06 03:18:19.314798 D system Th{21878} [corba/rests_server.cpp:204] db_resync_() Time to db-resync can rests doesn't came yet. Last sync was: 59982 msec ago
2020-02-06 03:18:19.314798 D system Th{21878} [corba/rests_server.cpp:95] BookRestCaller()  acc_vol2=11110.980 vol=12311.630 mbr=747.000
2020-02-06 03:18:19.314798 D system Th{21878} [corba/rests_server.cpp:204] db_resync_() Time to db-resync can rests doesn't came yet. Last sync was: 59982 msec ago
2020-02-06 03:18:19.314798 D system Th{21878} [corba/rests_server.cpp:95] BookRestCaller()  acc_vol2=22138.050 vol=25725.210 mbr=2453.000
2020-02-06 03:18:19.314798 D system Th{21878} [corba/rests_server.cpp:204] db_resync_() Time to db-resync can rests doesn't came yet. Last sync was: 59982 msec ago
2020-02-06 03:18:19.314798 D system Th{21878} [corba/rests_server.cpp:95] BookRestCaller()  acc_vol2=19442.030 vol=22362.340 mbr=1672.000
2020-02-06 03:18:19.314798 D system Th{21878} [corba/rests_server.cpp:204] db_resync_() Time to db-resync can rests doesn't came yet. Last sync was: 59982 msec ago
2020-02-06 03:18:19.314798 D system Th{21878} [corba/rests_server.cpp:95] BookRestCaller()  acc_vol2=16468.080 vol=19130.610 mbr=1645.000
2020-02-06 03:18:19.314798 D system Th{21878} [corba/rests_server.cpp:204] db_resync_() Time to db-resync can rests doesn't came yet. Last sync was: 59982 msec ago
2020-02-06 03:18:19.314798 D system Th{21878} [corba/rests_server.cpp:95] BookRestCaller()  acc_vol2=22323.170 vol=25980.110 mbr=2365.000
2020-02-06 03:18:19.315798 D system Th{21878} [corba/rests_server.cpp:111] call_allowed() m_sid=NIL sid=9081255113048536069
2020-02-06 03:18:19.315798 D system Th{21878} [corba/rests_server.cpp:121] call_method() m_sid=NIL sz=6
2020-02-06 03:18:19.385798 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:18:19.385798 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:18:19.385798 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:18:19.393798 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:18:19.393798 I sale Th{6306} [corba/fr_service_callback.cpp:52] call_allowed() callback for fr_key_id = 2 & sessionid = 9081255113048536069 not allowed seller_place = operator_UI tmp= 1 is_cash=0is_really_op_wp=1
2020-02-06 03:18:19.426798 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:18:19.426798 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:18:19.426798 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:18:19.433798 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:18:19.433798 I sale Th{6305} [corba/fr_service_callback.cpp:52] call_allowed() callback for fr_key_id = 1 & sessionid = 9081255113048536069 allowed seller_place = operator_UI tmp= 1 is_cash=0is_really_op_wp=1
2020-02-06 03:18:20.569798 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC010E60
2020-02-06 03:18:20.570798 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC015230
2020-02-06 03:18:20.572798 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9B4182190
2020-02-06 03:18:20.574798 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC0069F0
2020-02-06 03:18:20.577798 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC010530
2020-02-06 03:18:20.578798 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC011400
2020-02-06 03:18:21.394798 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:18:21.394798 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:18:21.394798 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:18:21.403798 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:18:21.403798 I sale Th{6306} [corba/fr_service_callback.cpp:52] call_allowed() callback for fr_key_id = 2 & sessionid = 9081255113048536069 not allowed seller_place = operator_UI tmp= 1 is_cash=0is_really_op_wp=1
2020-02-06 03:18:21.433798 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:18:21.433798 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:18:21.433798 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:18:21.440798 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:18:21.440798 I sale Th{6305} [corba/fr_service_callback.cpp:52] call_allowed() callback for fr_key_id = 1 & sessionid = 9081255113048536069 allowed seller_place = operator_UI tmp= 1 is_cash=0is_really_op_wp=1
2020-02-06 03:18:21.487798 D system Th{6304} [corba/cbmodule_srv_impl.cpp:955] ping_clients() Begin pinging session: 3458430551181654012
2020-02-06 03:18:21.488798 D system Th{6304} [corba/cbmodule_srv_impl.cpp:957] ping_clients() Session: 3458430551181654012ping ok
2020-02-06 03:18:21.488798 D system Th{6304} [corba/cbmodule_srv_impl.cpp:955] ping_clients() Begin pinging session: 9081255113048536069
2020-02-06 03:18:21.488798 D system Th{6304} [corba/cbmodule_srv_impl.cpp:957] ping_clients() Session: 9081255113048536069ping ok
2020-02-06 03:18:21.488798 I system Th{6304} [corba/cbmodule_srv_impl.cpp:966] ping_clients() rc=0
2020-02-06 03:18:21.752798 D system Th{6327} [corba/pay_service_impl.cpp:701] run() Before NCTService ping ...
2020-02-06 03:18:21.752798 D system Th{6327} [corba/pay_service_impl.cpp:719] run() NCTService ping ok
2020-02-06 03:18:23.403798 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:18:23.404798 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:18:23.404798 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:18:23.413798 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:18:23.413798 I sale Th{6306} [corba/fr_service_callback.cpp:52] call_allowed() callback for fr_key_id = 2 & sessionid = 9081255113048536069 not allowed seller_place = operator_UI tmp= 1 is_cash=0is_really_op_wp=1
2020-02-06 03:18:23.441798 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:18:23.441798 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:18:23.441798 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:18:23.448798 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:18:23.448798 I sale Th{6305} [corba/fr_service_callback.cpp:52] call_allowed() callback for fr_key_id = 1 & sessionid = 9081255113048536069 allowed seller_place = operator_UI tmp= 1 is_cash=0is_really_op_wp=1
2020-02-06 03:18:24.488798 D system Th{6304} [corba/cbmodule_srv_impl.cpp:955] ping_clients() Begin pinging session: 3458430551181654012
2020-02-06 03:18:24.489798 D system Th{6304} [corba/cbmodule_srv_impl.cpp:957] ping_clients() Session: 3458430551181654012ping ok
2020-02-06 03:18:24.489798 D system Th{6304} [corba/cbmodule_srv_impl.cpp:955] ping_clients() Begin pinging session: 9081255113048536069
2020-02-06 03:18:24.489798 D system Th{6304} [corba/cbmodule_srv_impl.cpp:957] ping_clients() Session: 9081255113048536069ping ok
2020-02-06 03:18:24.489798 I system Th{6304} [corba/cbmodule_srv_impl.cpp:966] ping_clients() rc=0
2020-02-06 03:18:25.413798 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:18:25.414798 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:18:25.414798 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:18:25.423798 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:18:25.423798 I sale Th{6306} [corba/fr_service_callback.cpp:52] call_allowed() callback for fr_key_id = 2 & sessionid = 9081255113048536069 not allowed seller_place = operator_UI tmp= 1 is_cash=0is_really_op_wp=1
2020-02-06 03:18:25.448798 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:18:25.448798 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:18:25.448798 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:18:25.455798 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:18:25.455798 I sale Th{6305} [corba/fr_service_callback.cpp:52] call_allowed() callback for fr_key_id = 1 & sessionid = 9081255113048536069 allowed seller_place = operator_UI tmp= 1 is_cash=0is_really_op_wp=1
2020-02-06 03:18:26.752798 D system Th{6327} [corba/pay_service_impl.cpp:701] run() Before NCTService ping ...
2020-02-06 03:18:26.752798 D system Th{6327} [corba/pay_service_impl.cpp:719] run() NCTService ping ok
2020-02-06 03:18:27.002798 D trk Th{6366} [io/src/timer_wrap.cpp:272] handleEvent()  ptr: 0x00007FFA0C009220 fired
2020-02-06 03:18:27.002798 D trk Th{6366} [doms/src/trk_driver/apc.cpp:118] sendMessage() Doms. Sending heartbeat message
2020-02-06 03:18:27.002798 D trk Th{6366} [io/src/timer_wrap.cpp:245] setSingleShot()  ptr: 0x00007FFA0C009220 10000 ms
2020-02-06 03:18:27.423798 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:18:27.423798 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:18:27.424798 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:18:27.433798 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:18:27.433798 I sale Th{6306} [corba/fr_service_callback.cpp:52] call_allowed() callback for fr_key_id = 2 & sessionid = 9081255113048536069 not allowed seller_place = operator_UI tmp= 1 is_cash=0is_really_op_wp=1
2020-02-06 03:18:27.456798 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:18:27.456798 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:18:27.456798 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:18:27.463798 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:18:27.463798 I sale Th{6305} [corba/fr_service_callback.cpp:52] call_allowed() callback for fr_key_id = 1 & sessionid = 9081255113048536069 allowed seller_place = operator_UI tmp= 1 is_cash=0is_really_op_wp=1
2020-02-06 03:18:27.490798 D system Th{6304} [corba/cbmodule_srv_impl.cpp:955] ping_clients() Begin pinging session: 3458430551181654012
2020-02-06 03:18:27.490798 D system Th{6304} [corba/cbmodule_srv_impl.cpp:957] ping_clients() Session: 3458430551181654012ping ok
2020-02-06 03:18:27.490798 D system Th{6304} [corba/cbmodule_srv_impl.cpp:955] ping_clients() Begin pinging session: 9081255113048536069
2020-02-06 03:18:27.491798 D system Th{6304} [corba/cbmodule_srv_impl.cpp:957] ping_clients() Session: 9081255113048536069ping ok
2020-02-06 03:18:27.491798 I system Th{6304} [corba/cbmodule_srv_impl.cpp:966] ping_clients() rc=0
2020-02-06 03:18:29.266798 D trk Th{6297} [doms/src/trk_driver/apc.cpp:118] sendMessage() Doms. Sending heartbeat message
2020-02-06 03:18:29.433798 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:18:29.433798 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:18:29.433798 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:18:29.445798 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:18:29.445798 I sale Th{6306} [corba/fr_service_callback.cpp:52] call_allowed() callback for fr_key_id = 2 & sessionid = 9081255113048536069 not allowed seller_place = operator_UI tmp= 1 is_cash=0is_really_op_wp=1
2020-02-06 03:18:29.463798 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:18:29.463798 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:18:29.463798 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:18:29.470798 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:18:29.470798 I sale Th{6305} [corba/fr_service_callback.cpp:52] call_allowed() callback for fr_key_id = 1 & sessionid = 9081255113048536069 allowed seller_place = operator_UI tmp= 1 is_cash=0is_really_op_wp=1
2020-02-06 03:18:29.566798 D trk Th{6297} [doms/src/trk_driver/apc.cpp:115] sendMessage() Doms. Sending a message: FpStatus3::Req: { fpId: 0 }
2020-02-06 03:18:29.566798 D trk Th{6297} [doms/src/trk_driver/apc.cpp:116] sendMessage() Doms. Message dump: 01 15 03 00
2020-02-06 03:18:29.596798 D trk Th{6297} [doms/src/trk_driver/apc.cpp:184] readAnswer() Doms. Message decoded: 01 FE 00 95 03 08 1F 01 23 02 56 00 00 06 01 01 01 02 02 01 23 03 06 05 01 02 03 04 05 10 01 01 11 01 01 16 01 00 1F 02 23 02 56 00 00 06 01 01 01 02 02 01 23 03 06 05 01 02 03 04 05 10 01 01 11 01 01 16 01 00 1F 03 23 02 56 00 00 06 01 01 01 02 02 01 23 03 06 05 01 02 03 04 05 10 01 01 11 01 01 16 01 00 1F 04 23 02 56 00 00 06 01 01 01 02 02 01 23 03 06 05 01 02 03 04 05 10 01 01 11 01 01 16 01 00 1F 05 23 02 56 00 00 06 01 01 01 02 02 01 23 03 06 05 01 02 03 04 05 10 01 01 11 01 01 16 01 00 1F 06 23 02 56 00 00 06 01 01 01 02 02 01 23 03 06 05 01 02 03 04 05 10 01 01 11 01 01 16 01 00 1B 07 23 02 56 00 00 06 01 01 01 02 02 01 23 03 02 01 05 10 01 01 11 01 01 16 01 00 1C 08 23 02 56 00 00 06 01 01 01 02 02 01 23 03 03 02 05 05 10 01 01 11 01 01 16 01 00
2020-02-06 03:18:29.597798 D trk Th{6297} [doms/src/trk_driver/apc.cpp:91] createMessage() Doms. Message recv: MultiMessage::Reply: { 
                                ..m_repExtMsgCode: 0x0095
                                ..m_repMsgSubc: 0x03
                                ..m_list (8pcs): [
                                ....FpStatus3::Reply: { 
                                ......fpId: 1
                                ......activeSmId: 23
                                ......mainState: FMS_Idle(2)
                                ......subStates: lVOsBeAp
                                ......lockId: 0
                                ......gradeId: 0
                                ......supStPars: FpSupStatusPars(6pcs): [ 
                                ........SubStates2(1): [T__ml__s],
                                ........AvailSms(2): [List(1pcs): [ 23]],
                                ........AvailGrades(3): [List(5pcs): [ 1, 2, 3, 4, 5]],
                                ........OpMode(10): [1],
                                ........PgId(11): [1],
                                ........SubStates4(16): [pn]
                                ......]
                                ....},
                                ....FpStatus3::Reply: { 
                                ......fpId: 2
                                ......activeSmId: 23
                                ......mainState: FMS_Idle(2)
                                ......subStates: lVOsBeAp
                                ......lockId: 0
                                ......gradeId: 0
                                ......supStPars: FpSupStatusPars(6pcs): [ 
                                ........SubStates2(1): [T__ml__s],
                                ........AvailSms(2): [List(1pcs): [ 23]],
                                ........AvailGrades(3): [List(5pcs): [ 1, 2, 3, 4, 5]],
                                ........OpMode(10): [1],
                                ........PgId(11): [1],
                                ........SubStates4(16): [pn]
                                ......]
                                ....},
                                ....FpStatus3::Reply: { 
                                ......fpId: 3
                                ......activeSmId: 23
                                ......mainState: FMS_Idle(2)
                                ......subStates: lVOsBeAp
                                ......lockId: 0
                                ......gradeId: 0
                                ......supStPars: FpSupStatusPars(6pcs): [ 
                                ........SubStates2(1): [T__ml__s],
                                ........AvailSms(2): [List(1pcs): [ 23]],
                                ........AvailGrades(3): [List(5pcs): [ 1, 2, 3, 4, 5]],
                                ........OpMode(10): [1],
                                ........PgId(11): [1],
                                ........SubStates4(16): [pn]
                                ......]
                                ....},
                                ....FpStatus3::Reply: { 
                                ......fpId: 4
                                ......activeSmId: 23
                                ......mainState: FMS_Idle(2)
                                ......subStates: lVOsBeAp
                                ......lockId: 0
                                ......gradeId: 0
                                ......supStPars: FpSupStatusPars(6pcs): [ 
                                ........SubStates2(1): [T__ml__s],
                                ........AvailSms(2): [List(1pcs): [ 23]],
                                ........AvailGrades(3): [List(5pcs): [ 1, 2, 3, 4, 5]],
                                ........OpMode(10): [1],
                                ........PgId(11): [1],
                                ........SubStates4(16): [pn]
                                ......]
                                ....},
                                ....FpStatus3::Reply: { 
                                ......fpId: 5
                                ......activeSmId: 23
                                ......mainState: FMS_Idle(2)
                                ......subStates: lVOsBeAp
                                ......lockId: 0
                                ......gradeId: 0
                                ......supStPars: FpSupStatusPars(6pcs): [ 
                                ........SubStates2(1): [T__ml__s],
                                ........AvailSms(2): [List(1pcs): [ 23]],
                                ........AvailGrades(3): [List(5pcs): [ 1, 2, 3, 4, 5]],
                                ........OpMode(10): [1],
                                ........PgId(11): [1],
                                ........SubStates4(16): [pn]
                                ......]
                                ....},
                                ....FpStatus3::Reply: { 
                                ......fpId: 6
                                ......activeSmId: 23
                                ......mainState: FMS_Idle(2)
                                ......subStates: lVOsBeAp
                                ......lockId: 0
                                ......gradeId: 0
                                ......supStPars: FpSupStatusPars(6pcs): [ 
                                ........SubStates2(1): [T__ml__s],
                                ........AvailSms(2): [List(1pcs): [ 23]],
                                ........AvailGrades(3): [List(5pcs): [ 1, 2, 3, 4, 5]],
                                ........OpMode(10): [1],
                                ........PgId(11): [1],
                                ........SubStates4(16): [pn]
                                ......]
                                ....},
                                ....FpStatus3::Reply: { 
                                ......fpId: 7
                                ......activeSmId: 23
                                ......mainState: FMS_Idle(2)
                                ......subStates: lVOsBeAp
                                ......lockId: 0
                                ......gradeId: 0
                                ......supStPars: FpSupStatusPars(6pcs): [ 
                                ........SubStates2(1): [T__ml__s],
                                ........AvailSms(2): [List(1pcs): [ 23]],
                                ........AvailGrades(3): [List(1pcs): [ 5]],
                                ........OpMode(10): [1],
                                ........PgId(11): [1],
                                ........SubStates4(16): [pn]
                                ......]
                                ....},
                                ....FpStatus3::Reply: { 
                                ......fpId: 8
                                ......activeSmId: 23
                                ......mainState: FMS_Idle(2)
                                ......subStates: lVOsBeAp
                                ......lockId: 0
                                ......gradeId: 0
                                ......supStPars: FpSupStatusPars(6pcs): [ 
                                ........SubStates2(1): [T__ml__s],
                                ........AvailSms(2): [List(1pcs): [ 23]],
                                ........AvailGrades(3): [List(2pcs): [ 5, 5]],
                                ........OpMode(10): [1],
                                ........PgId(11): [1],
                                ........SubStates4(16): [pn]
                                ......]
                                ....}
                                ..]
                                }
2020-02-06 03:18:30.491798 D system Th{6304} [corba/cbmodule_srv_impl.cpp:955] ping_clients() Begin pinging session: 3458430551181654012
2020-02-06 03:18:30.491798 D system Th{6304} [corba/cbmodule_srv_impl.cpp:957] ping_clients() Session: 3458430551181654012ping ok
2020-02-06 03:18:30.491798 D system Th{6304} [corba/cbmodule_srv_impl.cpp:955] ping_clients() Begin pinging session: 9081255113048536069
2020-02-06 03:18:30.492798 D system Th{6304} [corba/cbmodule_srv_impl.cpp:957] ping_clients() Session: 9081255113048536069ping ok
2020-02-06 03:18:30.492798 I system Th{6304} [corba/cbmodule_srv_impl.cpp:966] ping_clients() rc=0
2020-02-06 03:18:30.969798 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC006CC0
2020-02-06 03:18:30.969798 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC010E60
2020-02-06 03:18:30.970798 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC015230
2020-02-06 03:18:30.970798 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9B4182190
2020-02-06 03:18:30.970798 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC0069F0
2020-02-06 03:18:30.970798 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC010530
2020-02-06 03:18:31.445798 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:18:31.445798 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:18:31.445798 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:18:31.454798 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:18:31.454798 I sale Th{6306} [corba/fr_service_callback.cpp:52] call_allowed() callback for fr_key_id = 2 & sessionid = 9081255113048536069 not allowed seller_place = operator_UI tmp= 1 is_cash=0is_really_op_wp=1
2020-02-06 03:18:31.471798 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:18:31.471798 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:18:31.471798 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:18:31.478798 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:18:31.478798 I sale Th{6305} [corba/fr_service_callback.cpp:52] call_allowed() callback for fr_key_id = 1 & sessionid = 9081255113048536069 allowed seller_place = operator_UI tmp= 1 is_cash=0is_really_op_wp=1
2020-02-06 03:18:31.752798 D system Th{6327} [corba/pay_service_impl.cpp:701] run() Before NCTService ping ...
2020-02-06 03:18:31.752798 D system Th{6327} [corba/pay_service_impl.cpp:719] run() NCTService ping ok
2020-02-06 03:18:33.455798 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:18:33.455798 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:18:33.455798 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:18:33.465798 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:18:33.465798 I sale Th{6306} [corba/fr_service_callback.cpp:52] call_allowed() callback for fr_key_id = 2 & sessionid = 9081255113048536069 not allowed seller_place = operator_UI tmp= 1 is_cash=0is_really_op_wp=1
2020-02-06 03:18:33.478798 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:18:33.478798 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:18:33.478798 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:18:33.485798 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:18:33.485798 I sale Th{6305} [corba/fr_service_callback.cpp:52] call_allowed() callback for fr_key_id = 1 & sessionid = 9081255113048536069 allowed seller_place = operator_UI tmp= 1 is_cash=0is_really_op_wp=1
2020-02-06 03:18:33.492798 D system Th{6304} [corba/cbmodule_srv_impl.cpp:955] ping_clients() Begin pinging session: 3458430551181654012
2020-02-06 03:18:33.492798 D system Th{6304} [corba/cbmodule_srv_impl.cpp:957] ping_clients() Session: 3458430551181654012ping ok
2020-02-06 03:18:33.492798 D system Th{6304} [corba/cbmodule_srv_impl.cpp:955] ping_clients() Begin pinging session: 9081255113048536069
2020-02-06 03:18:33.493798 D system Th{6304} [corba/cbmodule_srv_impl.cpp:957] ping_clients() Session: 9081255113048536069ping ok
2020-02-06 03:18:33.493798 I system Th{6304} [corba/cbmodule_srv_impl.cpp:966] ping_clients() rc=0
2020-02-06 03:18:35.465798 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:18:35.465798 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:18:35.465798 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:18:35.475798 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:18:35.475798 I sale Th{6306} [corba/fr_service_callback.cpp:52] call_allowed() callback for fr_key_id = 2 & sessionid = 9081255113048536069 not allowed seller_place = operator_UI tmp= 1 is_cash=0is_really_op_wp=1
2020-02-06 03:18:35.486798 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:18:35.486798 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:18:35.486798 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:18:35.493798 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:18:35.493798 I sale Th{6305} [corba/fr_service_callback.cpp:52] call_allowed() callback for fr_key_id = 1 & sessionid = 9081255113048536069 allowed seller_place = operator_UI tmp= 1 is_cash=0is_really_op_wp=1
2020-02-06 03:18:36.493798 D system Th{6304} [corba/cbmodule_srv_impl.cpp:955] ping_clients() Begin pinging session: 3458430551181654012
2020-02-06 03:18:36.494798 D system Th{6304} [corba/cbmodule_srv_impl.cpp:957] ping_clients() Session: 3458430551181654012ping ok
2020-02-06 03:18:36.494798 D system Th{6304} [corba/cbmodule_srv_impl.cpp:955] ping_clients() Begin pinging session: 9081255113048536069
2020-02-06 03:18:36.494798 D system Th{6304} [corba/cbmodule_srv_impl.cpp:957] ping_clients() Session: 9081255113048536069ping ok
2020-02-06 03:18:36.494798 I system Th{6304} [corba/cbmodule_srv_impl.cpp:966] ping_clients() rc=0
2020-02-06 03:18:36.753798 D system Th{6327} [corba/pay_service_impl.cpp:701] run() Before NCTService ping ...
2020-02-06 03:18:36.753798 D system Th{6327} [corba/pay_service_impl.cpp:719] run() NCTService ping ok
2020-02-06 03:18:37.002798 D trk Th{6366} [io/src/timer_wrap.cpp:272] handleEvent()  ptr: 0x00007FFA0C009220 fired
2020-02-06 03:18:37.002798 D trk Th{6366} [doms/src/trk_driver/apc.cpp:118] sendMessage() Doms. Sending heartbeat message
2020-02-06 03:18:37.002798 D trk Th{6366} [io/src/timer_wrap.cpp:245] setSingleShot()  ptr: 0x00007FFA0C009220 10000 ms
2020-02-06 03:18:37.475798 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:18:37.475798 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:18:37.475798 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:18:37.485798 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:18:37.485798 I sale Th{6306} [corba/fr_service_callback.cpp:52] call_allowed() callback for fr_key_id = 2 & sessionid = 9081255113048536069 not allowed seller_place = operator_UI tmp= 1 is_cash=0is_really_op_wp=1
2020-02-06 03:18:37.493798 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:18:37.493798 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:18:37.493798 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:18:37.501798 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:18:37.501798 I sale Th{6305} [corba/fr_service_callback.cpp:52] call_allowed() callback for fr_key_id = 1 & sessionid = 9081255113048536069 allowed seller_place = operator_UI tmp= 1 is_cash=0is_really_op_wp=1
2020-02-06 03:18:39.201799 D trk Th{6297} [doms/src/trk_driver/apc.cpp:118] sendMessage() Doms. Sending heartbeat message
2020-02-06 03:18:39.314799 D system Th{6312} [corba/sale_server_tms_watcher.cpp:112] run() TMSWatcher poll
2020-02-06 03:18:39.314799 D system Th{6312} [corba/sale_server_tms_watcher.cpp:123] run() Продляю подписку к сервису уровмемеров
2020-02-06 03:18:39.314799 D system Th{22055} [corba/rests_server.cpp:204] db_resync_() Time to db-resync can rests doesn't came yet. Last sync was: 79982 msec ago
2020-02-06 03:18:39.314799 D system Th{22055} [corba/rests_server.cpp:287] get_all_data_locked()  push to map= vol=8387.940 min_book_rest=750.000 mass=6337.800 first=1 petrol=1000054 petrol_name=GD100(АИ-100)
2020-02-06 03:18:39.314799 D system Th{22055} [corba/rests_server.cpp:287] get_all_data_locked()  push to map= vol=12311.630 min_book_rest=747.000 mass=8912.378 first=2 petrol=1000003 petrol_name=GD95(АИ-95)
2020-02-06 03:18:39.314799 D system Th{22055} [corba/rests_server.cpp:287] get_all_data_locked()  push to map= vol=25725.210 min_book_rest=2453.000 mass=-4221.601 first=3 petrol=1000081 petrol_name=АИ-95(АИ-95)
2020-02-06 03:18:39.314799 D system Th{22055} [corba/rests_server.cpp:287] get_all_data_locked()  push to map= vol=22362.340 min_book_rest=1672.000 mass=-1639.507 first=4 petrol=1000033 petrol_name=АИ-92(АИ-92)
2020-02-06 03:18:39.314799 D system Th{22055} [corba/rests_server.cpp:287] get_all_data_locked()  push to map= vol=19130.610 min_book_rest=1645.000 mass=5857.970 first=5 petrol=1000051 petrol_name=ДТОПТИ(ДТ-З)
2020-02-06 03:18:39.314799 D system Th{22055} [corba/rests_server.cpp:287] get_all_data_locked()  push to map= vol=25980.110 min_book_rest=2365.000 mass=11394.182 first=6 petrol=1000051 petrol_name=ДТОПТИ(ДТ-З)
2020-02-06 03:18:39.314799 D system Th{22055} [corba/rests_server.cpp:204] db_resync_() Time to db-resync can rests doesn't came yet. Last sync was: 79982 msec ago
2020-02-06 03:18:39.314799 D system Th{22055} [corba/rests_server.cpp:95] BookRestCaller()  acc_vol2=7510.800 vol=8387.940 mbr=750.000
2020-02-06 03:18:39.314799 D system Th{22055} [corba/rests_server.cpp:204] db_resync_() Time to db-resync can rests doesn't came yet. Last sync was: 79982 msec ago
2020-02-06 03:18:39.314799 D system Th{22055} [corba/rests_server.cpp:95] BookRestCaller()  acc_vol2=11111.000 vol=12311.630 mbr=747.000
2020-02-06 03:18:39.314799 D system Th{22055} [corba/rests_server.cpp:204] db_resync_() Time to db-resync can rests doesn't came yet. Last sync was: 79982 msec ago
2020-02-06 03:18:39.314799 D system Th{22055} [corba/rests_server.cpp:95] BookRestCaller()  acc_vol2=22137.820 vol=25725.210 mbr=2453.000
2020-02-06 03:18:39.314799 D system Th{22055} [corba/rests_server.cpp:204] db_resync_() Time to db-resync can rests doesn't came yet. Last sync was: 79982 msec ago
2020-02-06 03:18:39.314799 D system Th{22055} [corba/rests_server.cpp:95] BookRestCaller()  acc_vol2=19442.280 vol=22362.340 mbr=1672.000
2020-02-06 03:18:39.314799 D system Th{22055} [corba/rests_server.cpp:204] db_resync_() Time to db-resync can rests doesn't came yet. Last sync was: 79982 msec ago
2020-02-06 03:18:39.314799 D system Th{22055} [corba/rests_server.cpp:95] BookRestCaller()  acc_vol2=16468.030 vol=19130.610 mbr=1645.000
2020-02-06 03:18:39.314799 D system Th{22055} [corba/rests_server.cpp:204] db_resync_() Time to db-resync can rests doesn't came yet. Last sync was: 79982 msec ago
2020-02-06 03:18:39.314799 D system Th{22055} [corba/rests_server.cpp:95] BookRestCaller()  acc_vol2=22323.160 vol=25980.110 mbr=2365.000
2020-02-06 03:18:39.314799 D system Th{22055} [corba/rests_server.cpp:111] call_allowed() m_sid=NIL sid=9081255113048536069
2020-02-06 03:18:39.314799 D system Th{22055} [corba/rests_server.cpp:121] call_method() m_sid=NIL sz=6
2020-02-06 03:18:39.338799 I system Th{22055} [corba/cbmodule_srv_impl.cpp:146] callback_call() dead client found on call stage
2020-02-06 03:18:39.485799 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:18:39.485799 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:18:39.485799 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:18:39.494799 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:18:39.495799 D system Th{6304} [corba/cbmodule_srv_impl.cpp:955] ping_clients() Begin pinging session: 3458430551181654012
2020-02-06 03:18:39.495799 D system Th{6304} [corba/cbmodule_srv_impl.cpp:957] ping_clients() Session: 3458430551181654012ping ok
2020-02-06 03:18:39.495799 I system Th{6304} [corba/cbmodule_srv_impl.cpp:966] ping_clients() rc=1
2020-02-06 03:18:39.495799 I system Th{22059} [corba/cbmodule_srv_impl.cpp:272] run() Invalid session 9081255113048536069 found. Added to dead list
2020-02-06 03:18:39.495799 I system Th{22059} [corba/cbmodule_srv_impl.cpp:319] run() Removeing orphaned trans for session cans= ToCancel{ sid=9081255113048536069 nct=[], sct=[551] }
2020-02-06 03:18:39.495799 I sale Th{22059} [mcs/sale_service.cpp:1821] release_resources_by_session() session = 9081255113048536069 
2020-02-06 03:18:39.495799 I system Th{22059} [corba/cash_account_service.cpp:1831] release_resources_by_session()  lsid=NIL sid=9081255113048536069
2020-02-06 03:18:39.495799 I user Th{22059} [corba/cbmodule_srv_impl.cpp:344] run() send cancel to=551>
2020-02-06 03:18:39.495799 I system Th{22060} [corba/corba_utils.cpp:287] getObjectReference() getObjectReference: client try to do rir
2020-02-06 03:18:39.495799 I system Th{22061} [corba/corba_utils.cpp:287] getObjectReference() getObjectReference: client try to do rir
2020-02-06 03:18:39.495799 W system Th{22063} [corba/sale_server.cpp:310] sessions_halted() Unsubscribe halted shiftstate client (key, sid): (25, 9081255113048536069)
2020-02-06 03:18:39.495799 W system Th{22062} [corba/trk_monitor_adapter2.cpp:553] sessions_halted() Unsubscribe halted client (key, sid): (26, 9081255113048536069)
2020-02-06 03:18:39.495799 I system Th{22060} [corba/corba_utils.cpp:319] getObjectReference() getObjectReference: resolved
2020-02-06 03:18:39.495799 I system Th{22061} [corba/corba_utils.cpp:319] getObjectReference() getObjectReference: resolved
2020-02-06 03:18:39.495799 E system Th{22060} [corba/corba_utils.cpp:323] getObjectReference() Context not found.
2020-02-06 03:18:39.501799 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:18:39.501799 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:18:39.501799 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:18:39.518799 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:18:41.364799 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC011400
2020-02-06 03:18:41.365799 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC006CC0
2020-02-06 03:18:41.365799 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC010E60
2020-02-06 03:18:41.365799 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC015230
2020-02-06 03:18:41.366799 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9B4182190
2020-02-06 03:18:41.366799 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC0069F0
2020-02-06 03:18:41.494799 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:18:41.494799 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:18:41.494799 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:18:41.503799 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:18:41.518799 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:18:41.518799 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:18:41.518799 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:18:41.534799 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:18:41.753799 D system Th{6327} [corba/pay_service_impl.cpp:701] run() Before NCTService ping ...
2020-02-06 03:18:41.753799 D system Th{6327} [corba/pay_service_impl.cpp:719] run() NCTService ping ok
2020-02-06 03:18:42.495799 D system Th{6304} [corba/cbmodule_srv_impl.cpp:955] ping_clients() Begin pinging session: 3458430551181654012
2020-02-06 03:18:42.495799 D system Th{6304} [corba/cbmodule_srv_impl.cpp:957] ping_clients() Session: 3458430551181654012ping ok
2020-02-06 03:18:42.495799 I system Th{6304} [corba/cbmodule_srv_impl.cpp:966] ping_clients() rc=0
2020-02-06 03:18:43.503799 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:18:43.503799 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:18:43.503799 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:18:43.513799 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:18:43.535799 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:18:43.535799 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:18:43.535799 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:18:43.542799 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:18:45.496799 D system Th{6304} [corba/cbmodule_srv_impl.cpp:955] ping_clients() Begin pinging session: 3458430551181654012
2020-02-06 03:18:45.496799 D system Th{6304} [corba/cbmodule_srv_impl.cpp:957] ping_clients() Session: 3458430551181654012ping ok
2020-02-06 03:18:45.496799 I system Th{6304} [corba/cbmodule_srv_impl.cpp:966] ping_clients() rc=0
2020-02-06 03:18:45.513799 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:18:45.513799 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:18:45.513799 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:18:45.522799 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:18:45.542799 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:18:45.542799 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:18:45.542799 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:18:45.549799 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:18:46.753799 D system Th{6327} [corba/pay_service_impl.cpp:701] run() Before NCTService ping ...
2020-02-06 03:18:46.753799 D system Th{6327} [corba/pay_service_impl.cpp:719] run() NCTService ping ok
2020-02-06 03:18:47.003799 D trk Th{6366} [io/src/timer_wrap.cpp:272] handleEvent()  ptr: 0x00007FFA0C009220 fired
2020-02-06 03:18:47.003799 D trk Th{6366} [doms/src/trk_driver/apc.cpp:118] sendMessage() Doms. Sending heartbeat message
2020-02-06 03:18:47.003799 D trk Th{6366} [io/src/timer_wrap.cpp:245] setSingleShot()  ptr: 0x00007FFA0C009220 10000 ms
2020-02-06 03:18:47.522799 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:18:47.523799 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:18:47.523799 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:18:47.532799 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:18:47.550799 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:18:47.550799 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:18:47.550799 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:18:47.557799 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:18:48.497799 D system Th{6304} [corba/cbmodule_srv_impl.cpp:955] ping_clients() Begin pinging session: 3458430551181654012
2020-02-06 03:18:48.497799 D system Th{6304} [corba/cbmodule_srv_impl.cpp:957] ping_clients() Session: 3458430551181654012ping ok
2020-02-06 03:18:48.497799 I system Th{6304} [corba/cbmodule_srv_impl.cpp:966] ping_clients() rc=0
2020-02-06 03:18:49.106799 D trk Th{6297} [doms/src/trk_driver/apc.cpp:118] sendMessage() Doms. Sending heartbeat message
2020-02-06 03:18:49.532799 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:18:49.533799 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:18:49.533799 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:18:49.542799 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:18:49.557799 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:18:49.557799 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:18:49.557799 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:18:49.564799 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:18:50.307799 D trk Th{6297} [doms/src/trk_driver/apc.cpp:115] sendMessage() Doms. Sending a message: FpStatus3::Req: { fpId: 0 }
2020-02-06 03:18:50.307799 D trk Th{6297} [doms/src/trk_driver/apc.cpp:116] sendMessage() Doms. Message dump: 01 15 03 00
2020-02-06 03:18:50.337799 D trk Th{6297} [doms/src/trk_driver/apc.cpp:184] readAnswer() Doms. Message decoded: 01 FE 00 95 03 08 1F 01 23 02 56 00 00 06 01 01 01 02 02 01 23 03 06 05 01 02 03 04 05 10 01 01 11 01 01 16 01 00 1F 02 23 02 56 00 00 06 01 01 01 02 02 01 23 03 06 05 01 02 03 04 05 10 01 01 11 01 01 16 01 00 1F 03 23 02 56 00 00 06 01 01 01 02 02 01 23 03 06 05 01 02 03 04 05 10 01 01 11 01 01 16 01 00 1F 04 23 02 56 00 00 06 01 01 01 02 02 01 23 03 06 05 01 02 03 04 05 10 01 01 11 01 01 16 01 00 1F 05 23 02 56 00 00 06 01 01 01 02 02 01 23 03 06 05 01 02 03 04 05 10 01 01 11 01 01 16 01 00 1F 06 23 02 56 00 00 06 01 01 01 02 02 01 23 03 06 05 01 02 03 04 05 10 01 01 11 01 01 16 01 00 1B 07 23 02 56 00 00 06 01 01 01 02 02 01 23 03 02 01 05 10 01 01 11 01 01 16 01 00 1C 08 23 02 56 00 00 06 01 01 01 02 02 01 23 03 03 02 05 05 10 01 01 11 01 01 16 01 00
2020-02-06 03:18:50.337799 D trk Th{6297} [doms/src/trk_driver/apc.cpp:91] createMessage() Doms. Message recv: MultiMessage::Reply: { 
                                ..m_repExtMsgCode: 0x0095
                                ..m_repMsgSubc: 0x03
                                ..m_list (8pcs): [
                                ....FpStatus3::Reply: { 
                                ......fpId: 1
                                ......activeSmId: 23
                                ......mainState: FMS_Idle(2)
                                ......subStates: lVOsBeAp
                                ......lockId: 0
                                ......gradeId: 0
                                ......supStPars: FpSupStatusPars(6pcs): [ 
                                ........SubStates2(1): [T__ml__s],
                                ........AvailSms(2): [List(1pcs): [ 23]],
                                ........AvailGrades(3): [List(5pcs): [ 1, 2, 3, 4, 5]],
                                ........OpMode(10): [1],
                                ........PgId(11): [1],
                                ........SubStates4(16): [pn]
                                ......]
                                ....},
                                ....FpStatus3::Reply: { 
                                ......fpId: 2
                                ......activeSmId: 23
                                ......mainState: FMS_Idle(2)
                                ......subStates: lVOsBeAp
                                ......lockId: 0
                                ......gradeId: 0
                                ......supStPars: FpSupStatusPars(6pcs): [ 
                                ........SubStates2(1): [T__ml__s],
                                ........AvailSms(2): [List(1pcs): [ 23]],
                                ........AvailGrades(3): [List(5pcs): [ 1, 2, 3, 4, 5]],
                                ........OpMode(10): [1],
                                ........PgId(11): [1],
                                ........SubStates4(16): [pn]
                                ......]
                                ....},
                                ....FpStatus3::Reply: { 
                                ......fpId: 3
                                ......activeSmId: 23
                                ......mainState: FMS_Idle(2)
                                ......subStates: lVOsBeAp
                                ......lockId: 0
                                ......gradeId: 0
                                ......supStPars: FpSupStatusPars(6pcs): [ 
                                ........SubStates2(1): [T__ml__s],
                                ........AvailSms(2): [List(1pcs): [ 23]],
                                ........AvailGrades(3): [List(5pcs): [ 1, 2, 3, 4, 5]],
                                ........OpMode(10): [1],
                                ........PgId(11): [1],
                                ........SubStates4(16): [pn]
                                ......]
                                ....},
                                ....FpStatus3::Reply: { 
                                ......fpId: 4
                                ......activeSmId: 23
                                ......mainState: FMS_Idle(2)
                                ......subStates: lVOsBeAp
                                ......lockId: 0
                                ......gradeId: 0
                                ......supStPars: FpSupStatusPars(6pcs): [ 
                                ........SubStates2(1): [T__ml__s],
                                ........AvailSms(2): [List(1pcs): [ 23]],
                                ........AvailGrades(3): [List(5pcs): [ 1, 2, 3, 4, 5]],
                                ........OpMode(10): [1],
                                ........PgId(11): [1],
                                ........SubStates4(16): [pn]
                                ......]
                                ....},
                                ....FpStatus3::Reply: { 
                                ......fpId: 5
                                ......activeSmId: 23
                                ......mainState: FMS_Idle(2)
                                ......subStates: lVOsBeAp
                                ......lockId: 0
                                ......gradeId: 0
                                ......supStPars: FpSupStatusPars(6pcs): [ 
                                ........SubStates2(1): [T__ml__s],
                                ........AvailSms(2): [List(1pcs): [ 23]],
                                ........AvailGrades(3): [List(5pcs): [ 1, 2, 3, 4, 5]],
                                ........OpMode(10): [1],
                                ........PgId(11): [1],
                                ........SubStates4(16): [pn]
                                ......]
                                ....},
                                ....FpStatus3::Reply: { 
                                ......fpId: 6
                                ......activeSmId: 23
                                ......mainState: FMS_Idle(2)
                                ......subStates: lVOsBeAp
                                ......lockId: 0
                                ......gradeId: 0
                                ......supStPars: FpSupStatusPars(6pcs): [ 
                                ........SubStates2(1): [T__ml__s],
                                ........AvailSms(2): [List(1pcs): [ 23]],
                                ........AvailGrades(3): [List(5pcs): [ 1, 2, 3, 4, 5]],
                                ........OpMode(10): [1],
                                ........PgId(11): [1],
                                ........SubStates4(16): [pn]
                                ......]
                                ....},
                                ....FpStatus3::Reply: { 
                                ......fpId: 7
                                ......activeSmId: 23
                                ......mainState: FMS_Idle(2)
                                ......subStates: lVOsBeAp
                                ......lockId: 0
                                ......gradeId: 0
                                ......supStPars: FpSupStatusPars(6pcs): [ 
                                ........SubStates2(1): [T__ml__s],
                                ........AvailSms(2): [List(1pcs): [ 23]],
                                ........AvailGrades(3): [List(1pcs): [ 5]],
                                ........OpMode(10): [1],
                                ........PgId(11): [1],
                                ........SubStates4(16): [pn]
                                ......]
                                ....},
                                ....FpStatus3::Reply: { 
                                ......fpId: 8
                                ......activeSmId: 23
                                ......mainState: FMS_Idle(2)
                                ......subStates: lVOsBeAp
                                ......lockId: 0
                                ......gradeId: 0
                                ......supStPars: FpSupStatusPars(6pcs): [ 
                                ........SubStates2(1): [T__ml__s],
                                ........AvailSms(2): [List(1pcs): [ 23]],
                                ........AvailGrades(3): [List(2pcs): [ 5, 5]],
                                ........OpMode(10): [1],
                                ........PgId(11): [1],
                                ........SubStates4(16): [pn]
                                ......]
                                ....}
                                ..]
                                }
2020-02-06 03:18:51.497799 D system Th{6304} [corba/cbmodule_srv_impl.cpp:955] ping_clients() Begin pinging session: 3458430551181654012
2020-02-06 03:18:51.498799 D system Th{6304} [corba/cbmodule_srv_impl.cpp:957] ping_clients() Session: 3458430551181654012ping ok
2020-02-06 03:18:51.498799 I system Th{6304} [corba/cbmodule_srv_impl.cpp:966] ping_clients() rc=0
2020-02-06 03:18:51.542799 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:18:51.542799 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:18:51.542799 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:18:51.552799 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:18:51.564799 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:18:51.565799 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:18:51.565799 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:18:51.572799 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:18:51.732799 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC010530
2020-02-06 03:18:51.733799 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC011400
2020-02-06 03:18:51.734799 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC006CC0
2020-02-06 03:18:51.735799 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC010E60
2020-02-06 03:18:51.736799 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC015230
2020-02-06 03:18:51.736799 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9B4182190
2020-02-06 03:18:51.754799 D system Th{6327} [corba/pay_service_impl.cpp:701] run() Before NCTService ping ...
2020-02-06 03:18:51.754799 D system Th{6327} [corba/pay_service_impl.cpp:719] run() NCTService ping ok
2020-02-06 03:18:53.552799 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:18:53.552799 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:18:53.552799 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:18:53.562799 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:18:53.572799 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:18:53.572799 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:18:53.572799 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:18:53.579799 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:18:54.498799 D system Th{6304} [corba/cbmodule_srv_impl.cpp:955] ping_clients() Begin pinging session: 3458430551181654012
2020-02-06 03:18:54.499799 D system Th{6304} [corba/cbmodule_srv_impl.cpp:957] ping_clients() Session: 3458430551181654012ping ok
2020-02-06 03:18:54.499799 I system Th{6304} [corba/cbmodule_srv_impl.cpp:966] ping_clients() rc=0
2020-02-06 03:18:55.562799 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:18:55.562799 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:18:55.562799 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:18:55.571799 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:18:55.579799 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:18:55.579799 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:18:55.579799 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:18:55.591799 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:18:56.754799 D system Th{6327} [corba/pay_service_impl.cpp:701] run() Before NCTService ping ...
2020-02-06 03:18:56.754799 D system Th{6327} [corba/pay_service_impl.cpp:719] run() NCTService ping ok
2020-02-06 03:18:57.003799 D trk Th{6366} [io/src/timer_wrap.cpp:272] handleEvent()  ptr: 0x00007FFA0C009220 fired
2020-02-06 03:18:57.003799 D trk Th{6366} [doms/src/trk_driver/apc.cpp:118] sendMessage() Doms. Sending heartbeat message
2020-02-06 03:18:57.003799 D trk Th{6366} [io/src/timer_wrap.cpp:245] setSingleShot()  ptr: 0x00007FFA0C009220 10000 ms
2020-02-06 03:18:57.499799 D system Th{6304} [corba/cbmodule_srv_impl.cpp:955] ping_clients() Begin pinging session: 3458430551181654012
2020-02-06 03:18:57.500799 D system Th{6304} [corba/cbmodule_srv_impl.cpp:957] ping_clients() Session: 3458430551181654012ping ok
2020-02-06 03:18:57.500799 I system Th{6304} [corba/cbmodule_srv_impl.cpp:966] ping_clients() rc=0
2020-02-06 03:18:57.571799 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:18:57.572799 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:18:57.572799 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:18:57.581799 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:18:57.591799 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:18:57.591799 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:18:57.591799 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:18:57.598799 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:18:59.041800 D trk Th{6297} [doms/src/trk_driver/apc.cpp:118] sendMessage() Doms. Sending heartbeat message
2020-02-06 03:18:59.314800 D system Th{6312} [corba/sale_server_tms_watcher.cpp:112] run() TMSWatcher poll
2020-02-06 03:18:59.314800 D system Th{22389} [corba/rests_server.cpp:204] db_resync_() Time to db-resync can rests doesn't came yet. Last sync was: 99982 msec ago
2020-02-06 03:18:59.314800 D system Th{22389} [corba/rests_server.cpp:287] get_all_data_locked()  push to map= vol=8387.940 min_book_rest=750.000 mass=6337.800 first=1 petrol=1000054 petrol_name=GD100(АИ-100)
2020-02-06 03:18:59.314800 D system Th{22389} [corba/rests_server.cpp:287] get_all_data_locked()  push to map= vol=12311.630 min_book_rest=747.000 mass=8912.378 first=2 petrol=1000003 petrol_name=GD95(АИ-95)
2020-02-06 03:18:59.314800 D system Th{22389} [corba/rests_server.cpp:287] get_all_data_locked()  push to map= vol=25725.210 min_book_rest=2453.000 mass=-4221.601 first=3 petrol=1000081 petrol_name=АИ-95(АИ-95)
2020-02-06 03:18:59.314800 D system Th{22389} [corba/rests_server.cpp:287] get_all_data_locked()  push to map= vol=22362.340 min_book_rest=1672.000 mass=-1639.507 first=4 petrol=1000033 petrol_name=АИ-92(АИ-92)
2020-02-06 03:18:59.314800 D system Th{22389} [corba/rests_server.cpp:287] get_all_data_locked()  push to map= vol=19130.610 min_book_rest=1645.000 mass=5857.970 first=5 petrol=1000051 petrol_name=ДТОПТИ(ДТ-З)
2020-02-06 03:18:59.314800 D system Th{22389} [corba/rests_server.cpp:287] get_all_data_locked()  push to map= vol=25980.110 min_book_rest=2365.000 mass=11394.182 first=6 petrol=1000051 petrol_name=ДТОПТИ(ДТ-З)
2020-02-06 03:18:59.314800 D system Th{22389} [corba/rests_server.cpp:204] db_resync_() Time to db-resync can rests doesn't came yet. Last sync was: 99982 msec ago
2020-02-06 03:18:59.314800 D system Th{22389} [corba/rests_server.cpp:95] BookRestCaller()  acc_vol2=7510.800 vol=8387.940 mbr=750.000
2020-02-06 03:18:59.314800 D system Th{22389} [corba/rests_server.cpp:204] db_resync_() Time to db-resync can rests doesn't came yet. Last sync was: 99982 msec ago
2020-02-06 03:18:59.314800 D system Th{22389} [corba/rests_server.cpp:95] BookRestCaller()  acc_vol2=11111.000 vol=12311.630 mbr=747.000
2020-02-06 03:18:59.314800 D system Th{22389} [corba/rests_server.cpp:204] db_resync_() Time to db-resync can rests doesn't came yet. Last sync was: 99982 msec ago
2020-02-06 03:18:59.314800 D system Th{22389} [corba/rests_server.cpp:95] BookRestCaller()  acc_vol2=22137.820 vol=25725.210 mbr=2453.000
2020-02-06 03:18:59.314800 D system Th{22389} [corba/rests_server.cpp:204] db_resync_() Time to db-resync can rests doesn't came yet. Last sync was: 99982 msec ago
2020-02-06 03:18:59.314800 D system Th{22389} [corba/rests_server.cpp:95] BookRestCaller()  acc_vol2=19442.280 vol=22362.340 mbr=1672.000
2020-02-06 03:18:59.314800 D system Th{22389} [corba/rests_server.cpp:204] db_resync_() Time to db-resync can rests doesn't came yet. Last sync was: 99982 msec ago
2020-02-06 03:18:59.314800 D system Th{22389} [corba/rests_server.cpp:95] BookRestCaller()  acc_vol2=16468.030 vol=19130.610 mbr=1645.000
2020-02-06 03:18:59.314800 D system Th{22389} [corba/rests_server.cpp:204] db_resync_() Time to db-resync can rests doesn't came yet. Last sync was: 99982 msec ago
2020-02-06 03:18:59.314800 D system Th{22389} [corba/rests_server.cpp:95] BookRestCaller()  acc_vol2=22323.160 vol=25980.110 mbr=2365.000
2020-02-06 03:18:59.581800 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:18:59.581800 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:18:59.581800 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:18:59.591800 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:18:59.598800 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:18:59.598800 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:18:59.598800 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:18:59.605800 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:19:00.500800 D system Th{6304} [corba/cbmodule_srv_impl.cpp:955] ping_clients() Begin pinging session: 3458430551181654012
2020-02-06 03:19:00.500800 D system Th{6304} [corba/cbmodule_srv_impl.cpp:957] ping_clients() Session: 3458430551181654012ping ok
2020-02-06 03:19:00.501800 I system Th{6304} [corba/cbmodule_srv_impl.cpp:966] ping_clients() rc=0
2020-02-06 03:19:01.591800 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:19:01.592800 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:19:01.592800 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:19:01.601800 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:19:01.605800 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:19:01.606800 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:19:01.606800 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:19:01.613800 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:19:01.754800 D system Th{6327} [corba/pay_service_impl.cpp:701] run() Before NCTService ping ...
2020-02-06 03:19:01.754800 D system Th{6327} [corba/pay_service_impl.cpp:719] run() NCTService ping ok
2020-02-06 03:19:02.115800 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC0069F0
2020-02-06 03:19:02.116800 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC010530
2020-02-06 03:19:02.117800 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC011400
2020-02-06 03:19:02.118800 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC006CC0
2020-02-06 03:19:02.119800 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC010E60
2020-02-06 03:19:02.120800 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC015230
2020-02-06 03:19:03.501800 D system Th{6304} [corba/cbmodule_srv_impl.cpp:955] ping_clients() Begin pinging session: 3458430551181654012
2020-02-06 03:19:03.501800 D system Th{6304} [corba/cbmodule_srv_impl.cpp:957] ping_clients() Session: 3458430551181654012ping ok
2020-02-06 03:19:03.501800 I system Th{6304} [corba/cbmodule_srv_impl.cpp:966] ping_clients() rc=0
2020-02-06 03:19:03.602800 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:19:03.602800 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:19:03.602800 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:19:03.611800 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:19:03.613800 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:19:03.613800 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:19:03.613800 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:19:03.620800 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:19:05.612800 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:19:05.612800 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:19:05.612800 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:19:05.620800 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:19:05.620800 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:19:05.620800 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:19:05.621800 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:19:05.627800 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:19:06.501800 D system Th{6304} [corba/cbmodule_srv_impl.cpp:955] ping_clients() Begin pinging session: 3458430551181654012
2020-02-06 03:19:06.502800 D system Th{6304} [corba/cbmodule_srv_impl.cpp:957] ping_clients() Session: 3458430551181654012ping ok
2020-02-06 03:19:06.502800 I system Th{6304} [corba/cbmodule_srv_impl.cpp:966] ping_clients() rc=0
2020-02-06 03:19:06.755800 D system Th{6327} [corba/pay_service_impl.cpp:701] run() Before NCTService ping ...
2020-02-06 03:19:06.755800 D system Th{6327} [corba/pay_service_impl.cpp:719] run() NCTService ping ok
2020-02-06 03:19:07.003800 D trk Th{6366} [io/src/timer_wrap.cpp:272] handleEvent()  ptr: 0x00007FFA0C009220 fired
2020-02-06 03:19:07.004800 D trk Th{6366} [doms/src/trk_driver/apc.cpp:118] sendMessage() Doms. Sending heartbeat message
2020-02-06 03:19:07.004800 D trk Th{6366} [io/src/timer_wrap.cpp:245] setSingleShot()  ptr: 0x00007FFA0C009220 10000 ms
2020-02-06 03:19:07.621800 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:19:07.621800 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:19:07.622800 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:19:07.627800 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:19:07.628800 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:19:07.628800 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:19:07.631800 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:19:07.634800 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:19:09.247800 D trk Th{6297} [doms/src/trk_driver/apc.cpp:118] sendMessage() Doms. Sending heartbeat message
2020-02-06 03:19:09.502800 D system Th{6304} [corba/cbmodule_srv_impl.cpp:955] ping_clients() Begin pinging session: 3458430551181654012
2020-02-06 03:19:09.503800 D system Th{6304} [corba/cbmodule_srv_impl.cpp:957] ping_clients() Session: 3458430551181654012ping ok
2020-02-06 03:19:09.503800 I system Th{6304} [corba/cbmodule_srv_impl.cpp:966] ping_clients() rc=0
2020-02-06 03:19:09.631800 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:19:09.631800 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:19:09.631800 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:19:09.635800 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:19:09.635800 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:19:09.635800 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:19:09.641800 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:19:09.642800 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:19:11.349800 D trk Th{6297} [doms/src/trk_driver/apc.cpp:115] sendMessage() Doms. Sending a message: FpStatus3::Req: { fpId: 0 }
2020-02-06 03:19:11.349800 D trk Th{6297} [doms/src/trk_driver/apc.cpp:116] sendMessage() Doms. Message dump: 01 15 03 00
2020-02-06 03:19:11.390800 D trk Th{6297} [doms/src/trk_driver/apc.cpp:184] readAnswer() Doms. Message decoded: 01 FE 00 95 03 08 1F 01 23 02 56 00 00 06 01 01 01 02 02 01 23 03 06 05 01 02 03 04 05 10 01 01 11 01 01 16 01 00 1F 02 23 02 56 00 00 06 01 01 01 02 02 01 23 03 06 05 01 02 03 04 05 10 01 01 11 01 01 16 01 00 1F 03 23 02 56 00 00 06 01 01 01 02 02 01 23 03 06 05 01 02 03 04 05 10 01 01 11 01 01 16 01 00 1F 04 23 02 56 00 00 06 01 01 01 02 02 01 23 03 06 05 01 02 03 04 05 10 01 01 11 01 01 16 01 00 1F 05 23 02 56 00 00 06 01 01 01 02 02 01 23 03 06 05 01 02 03 04 05 10 01 01 11 01 01 16 01 00 1F 06 23 02 56 00 00 06 01 01 01 02 02 01 23 03 06 05 01 02 03 04 05 10 01 01 11 01 01 16 01 00 1B 07 23 02 56 00 00 06 01 01 01 02 02 01 23 03 02 01 05 10 01 01 11 01 01 16 01 00 1C 08 23 02 56 00 00 06 01 01 01 02 02 01 23 03 03 02 05 05 10 01 01 11 01 01 16 01 00
2020-02-06 03:19:11.390800 D trk Th{6297} [doms/src/trk_driver/apc.cpp:91] createMessage() Doms. Message recv: MultiMessage::Reply: { 
                                ..m_repExtMsgCode: 0x0095
                                ..m_repMsgSubc: 0x03
                                ..m_list (8pcs): [
                                ....FpStatus3::Reply: { 
                                ......fpId: 1
                                ......activeSmId: 23
                                ......mainState: FMS_Idle(2)
                                ......subStates: lVOsBeAp
                                ......lockId: 0
                                ......gradeId: 0
                                ......supStPars: FpSupStatusPars(6pcs): [ 
                                ........SubStates2(1): [T__ml__s],
                                ........AvailSms(2): [List(1pcs): [ 23]],
                                ........AvailGrades(3): [List(5pcs): [ 1, 2, 3, 4, 5]],
                                ........OpMode(10): [1],
                                ........PgId(11): [1],
                                ........SubStates4(16): [pn]
                                ......]
                                ....},
                                ....FpStatus3::Reply: { 
                                ......fpId: 2
                                ......activeSmId: 23
                                ......mainState: FMS_Idle(2)
                                ......subStates: lVOsBeAp
                                ......lockId: 0
                                ......gradeId: 0
                                ......supStPars: FpSupStatusPars(6pcs): [ 
                                ........SubStates2(1): [T__ml__s],
                                ........AvailSms(2): [List(1pcs): [ 23]],
                                ........AvailGrades(3): [List(5pcs): [ 1, 2, 3, 4, 5]],
                                ........OpMode(10): [1],
                                ........PgId(11): [1],
                                ........SubStates4(16): [pn]
                                ......]
                                ....},
                                ....FpStatus3::Reply: { 
                                ......fpId: 3
                                ......activeSmId: 23
                                ......mainState: FMS_Idle(2)
                                ......subStates: lVOsBeAp
                                ......lockId: 0
                                ......gradeId: 0
                                ......supStPars: FpSupStatusPars(6pcs): [ 
                                ........SubStates2(1): [T__ml__s],
                                ........AvailSms(2): [List(1pcs): [ 23]],
                                ........AvailGrades(3): [List(5pcs): [ 1, 2, 3, 4, 5]],
                                ........OpMode(10): [1],
                                ........PgId(11): [1],
                                ........SubStates4(16): [pn]
                                ......]
                                ....},
                                ....FpStatus3::Reply: { 
                                ......fpId: 4
                                ......activeSmId: 23
                                ......mainState: FMS_Idle(2)
                                ......subStates: lVOsBeAp
                                ......lockId: 0
                                ......gradeId: 0
                                ......supStPars: FpSupStatusPars(6pcs): [ 
                                ........SubStates2(1): [T__ml__s],
                                ........AvailSms(2): [List(1pcs): [ 23]],
                                ........AvailGrades(3): [List(5pcs): [ 1, 2, 3, 4, 5]],
                                ........OpMode(10): [1],
                                ........PgId(11): [1],
                                ........SubStates4(16): [pn]
                                ......]
                                ....},
                                ....FpStatus3::Reply: { 
                                ......fpId: 5
                                ......activeSmId: 23
                                ......mainState: FMS_Idle(2)
                                ......subStates: lVOsBeAp
                                ......lockId: 0
                                ......gradeId: 0
                                ......supStPars: FpSupStatusPars(6pcs): [ 
                                ........SubStates2(1): [T__ml__s],
                                ........AvailSms(2): [List(1pcs): [ 23]],
                                ........AvailGrades(3): [List(5pcs): [ 1, 2, 3, 4, 5]],
                                ........OpMode(10): [1],
                                ........PgId(11): [1],
                                ........SubStates4(16): [pn]
                                ......]
                                ....},
                                ....FpStatus3::Reply: { 
                                ......fpId: 6
                                ......activeSmId: 23
                                ......mainState: FMS_Idle(2)
                                ......subStates: lVOsBeAp
                                ......lockId: 0
                                ......gradeId: 0
                                ......supStPars: FpSupStatusPars(6pcs): [ 
                                ........SubStates2(1): [T__ml__s],
                                ........AvailSms(2): [List(1pcs): [ 23]],
                                ........AvailGrades(3): [List(5pcs): [ 1, 2, 3, 4, 5]],
                                ........OpMode(10): [1],
                                ........PgId(11): [1],
                                ........SubStates4(16): [pn]
                                ......]
                                ....},
                                ....FpStatus3::Reply: { 
                                ......fpId: 7
                                ......activeSmId: 23
                                ......mainState: FMS_Idle(2)
                                ......subStates: lVOsBeAp
                                ......lockId: 0
                                ......gradeId: 0
                                ......supStPars: FpSupStatusPars(6pcs): [ 
                                ........SubStates2(1): [T__ml__s],
                                ........AvailSms(2): [List(1pcs): [ 23]],
                                ........AvailGrades(3): [List(1pcs): [ 5]],
                                ........OpMode(10): [1],
                                ........PgId(11): [1],
                                ........SubStates4(16): [pn]
                                ......]
                                ....},
                                ....FpStatus3::Reply: { 
                                ......fpId: 8
                                ......activeSmId: 23
                                ......mainState: FMS_Idle(2)
                                ......subStates: lVOsBeAp
                                ......lockId: 0
                                ......gradeId: 0
                                ......supStPars: FpSupStatusPars(6pcs): [ 
                                ........SubStates2(1): [T__ml__s],
                                ........AvailSms(2): [List(1pcs): [ 23]],
                                ........AvailGrades(3): [List(2pcs): [ 5, 5]],
                                ........OpMode(10): [1],
                                ........PgId(11): [1],
                                ........SubStates4(16): [pn]
                                ......]
                                ....}
                                ..]
                                }
2020-02-06 03:19:11.641800 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:19:11.641800 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:19:11.641800 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:19:11.642800 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:19:11.642800 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:19:11.642800 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:19:11.649800 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:19:11.650800 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:19:11.755800 D system Th{6327} [corba/pay_service_impl.cpp:701] run() Before NCTService ping ...
2020-02-06 03:19:11.755800 D system Th{6327} [corba/pay_service_impl.cpp:719] run() NCTService ping ok
2020-02-06 03:19:12.491800 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9B4182190
2020-02-06 03:19:12.492800 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC0069F0
2020-02-06 03:19:12.493800 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC010530
2020-02-06 03:19:12.494800 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC011400
2020-02-06 03:19:12.495800 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC006CC0
2020-02-06 03:19:12.495800 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC010E60
2020-02-06 03:19:12.503800 D system Th{6304} [corba/cbmodule_srv_impl.cpp:955] ping_clients() Begin pinging session: 3458430551181654012
2020-02-06 03:19:12.504800 D system Th{6304} [corba/cbmodule_srv_impl.cpp:957] ping_clients() Session: 3458430551181654012ping ok
2020-02-06 03:19:12.504800 I system Th{6304} [corba/cbmodule_srv_impl.cpp:966] ping_clients() rc=0
2020-02-06 03:19:13.649800 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:19:13.649800 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:19:13.649800 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:19:13.650800 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:19:13.650800 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:19:13.650800 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:19:13.693800 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:19:13.694800 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:19:15.504800 D system Th{6304} [corba/cbmodule_srv_impl.cpp:955] ping_clients() Begin pinging session: 3458430551181654012
2020-02-06 03:19:15.505800 D system Th{6304} [corba/cbmodule_srv_impl.cpp:957] ping_clients() Session: 3458430551181654012ping ok
2020-02-06 03:19:15.505800 I system Th{6304} [corba/cbmodule_srv_impl.cpp:966] ping_clients() rc=0
2020-02-06 03:19:15.693800 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:19:15.693800 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:19:15.693800 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:19:15.694800 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:19:15.694800 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:19:15.694800 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:19:15.700800 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:19:15.704800 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:19:16.755800 D system Th{6327} [corba/pay_service_impl.cpp:701] run() Before NCTService ping ...
2020-02-06 03:19:16.756800 D system Th{6327} [corba/pay_service_impl.cpp:719] run() NCTService ping ok
2020-02-06 03:19:17.004800 D trk Th{6366} [io/src/timer_wrap.cpp:272] handleEvent()  ptr: 0x00007FFA0C009220 fired
2020-02-06 03:19:17.004800 D trk Th{6366} [doms/src/trk_driver/apc.cpp:118] sendMessage() Doms. Sending heartbeat message
2020-02-06 03:19:17.004800 D trk Th{6366} [io/src/timer_wrap.cpp:245] setSingleShot()  ptr: 0x00007FFA0C009220 10000 ms
2020-02-06 03:19:17.700800 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:19:17.700800 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:19:17.700800 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:19:17.704800 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:19:17.704800 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:19:17.704800 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:19:17.707800 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:19:17.713800 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:19:18.505800 D system Th{6304} [corba/cbmodule_srv_impl.cpp:955] ping_clients() Begin pinging session: 3458430551181654012
2020-02-06 03:19:18.505800 D system Th{6304} [corba/cbmodule_srv_impl.cpp:957] ping_clients() Session: 3458430551181654012ping ok
2020-02-06 03:19:18.505800 I system Th{6304} [corba/cbmodule_srv_impl.cpp:966] ping_clients() rc=0
2020-02-06 03:19:19.194800 D trk Th{6297} [doms/src/trk_driver/apc.cpp:118] sendMessage() Doms. Sending heartbeat message
2020-02-06 03:19:19.314800 D system Th{6312} [corba/sale_server_tms_watcher.cpp:112] run() TMSWatcher poll
2020-02-06 03:19:19.314800 D system Th{6312} [corba/sale_server_tms_watcher.cpp:123] run() Продляю подписку к сервису уровмемеров
2020-02-06 03:19:19.315800 D system Th{22529} [corba/rests_server.cpp:204] db_resync_() Time to db-resync can rests doesn't came yet. Last sync was: 119983 msec ago
2020-02-06 03:19:19.315800 D system Th{22529} [corba/rests_server.cpp:287] get_all_data_locked()  push to map= vol=8387.940 min_book_rest=750.000 mass=6337.800 first=1 petrol=1000054 petrol_name=GD100(АИ-100)
2020-02-06 03:19:19.315800 D system Th{22529} [corba/rests_server.cpp:287] get_all_data_locked()  push to map= vol=12311.630 min_book_rest=747.000 mass=8912.378 first=2 petrol=1000003 petrol_name=GD95(АИ-95)
2020-02-06 03:19:19.315800 D system Th{22529} [corba/rests_server.cpp:287] get_all_data_locked()  push to map= vol=25725.210 min_book_rest=2453.000 mass=-4221.601 first=3 petrol=1000081 petrol_name=АИ-95(АИ-95)
2020-02-06 03:19:19.315800 D system Th{22529} [corba/rests_server.cpp:287] get_all_data_locked()  push to map= vol=22362.340 min_book_rest=1672.000 mass=-1639.507 first=4 petrol=1000033 petrol_name=АИ-92(АИ-92)
2020-02-06 03:19:19.315800 D system Th{22529} [corba/rests_server.cpp:287] get_all_data_locked()  push to map= vol=19130.610 min_book_rest=1645.000 mass=5857.970 first=5 petrol=1000051 petrol_name=ДТОПТИ(ДТ-З)
2020-02-06 03:19:19.315800 D system Th{22529} [corba/rests_server.cpp:287] get_all_data_locked()  push to map= vol=25980.110 min_book_rest=2365.000 mass=11394.182 first=6 petrol=1000051 petrol_name=ДТОПТИ(ДТ-З)
2020-02-06 03:19:19.316800 D system Th{22529} [corba/rests_server.cpp:204] db_resync_() Time to db-resync can rests doesn't came yet. Last sync was: 119984 msec ago
2020-02-06 03:19:19.316800 D system Th{22529} [corba/rests_server.cpp:95] BookRestCaller()  acc_vol2=7510.770 vol=8387.940 mbr=750.000
2020-02-06 03:19:19.316800 D system Th{22529} [corba/rests_server.cpp:204] db_resync_() Time to db-resync can rests doesn't came yet. Last sync was: 119984 msec ago
2020-02-06 03:19:19.316800 D system Th{22529} [corba/rests_server.cpp:95] BookRestCaller()  acc_vol2=11110.960 vol=12311.630 mbr=747.000
2020-02-06 03:19:19.316800 D system Th{22529} [corba/rests_server.cpp:204] db_resync_() Time to db-resync can rests doesn't came yet. Last sync was: 119984 msec ago
2020-02-06 03:19:19.316800 D system Th{22529} [corba/rests_server.cpp:95] BookRestCaller()  acc_vol2=22137.420 vol=25725.210 mbr=2453.000
2020-02-06 03:19:19.316800 D system Th{22529} [corba/rests_server.cpp:204] db_resync_() Time to db-resync can rests doesn't came yet. Last sync was: 119984 msec ago
2020-02-06 03:19:19.316800 D system Th{22529} [corba/rests_server.cpp:95] BookRestCaller()  acc_vol2=19442.320 vol=22362.340 mbr=1672.000
2020-02-06 03:19:19.316800 D system Th{22529} [corba/rests_server.cpp:204] db_resync_() Time to db-resync can rests doesn't came yet. Last sync was: 119984 msec ago
2020-02-06 03:19:19.316800 D system Th{22529} [corba/rests_server.cpp:95] BookRestCaller()  acc_vol2=16468.250 vol=19130.610 mbr=1645.000
2020-02-06 03:19:19.316800 D system Th{22529} [corba/rests_server.cpp:204] db_resync_() Time to db-resync can rests doesn't came yet. Last sync was: 119984 msec ago
2020-02-06 03:19:19.316800 D system Th{22529} [corba/rests_server.cpp:95] BookRestCaller()  acc_vol2=22323.160 vol=25980.110 mbr=2365.000
2020-02-06 03:19:19.707801 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:19:19.707801 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:19:19.707801 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:19:19.714801 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:19:19.714801 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:19:19.714801 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:19:19.715801 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:19:19.723801 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:19:21.506801 D system Th{6304} [corba/cbmodule_srv_impl.cpp:955] ping_clients() Begin pinging session: 3458430551181654012
2020-02-06 03:19:21.506801 D system Th{6304} [corba/cbmodule_srv_impl.cpp:957] ping_clients() Session: 3458430551181654012ping ok
2020-02-06 03:19:21.506801 I system Th{6304} [corba/cbmodule_srv_impl.cpp:966] ping_clients() rc=0
2020-02-06 03:19:21.715801 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:19:21.715801 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:19:21.715801 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:19:21.722801 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:19:21.723801 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:19:21.723801 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:19:21.724801 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:19:21.733801 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:19:21.756801 D system Th{6327} [corba/pay_service_impl.cpp:701] run() Before NCTService ping ...
2020-02-06 03:19:21.756801 D system Th{6327} [corba/pay_service_impl.cpp:719] run() NCTService ping ok
2020-02-06 03:19:22.886801 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC015230
2020-02-06 03:19:22.887801 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9B4182190
2020-02-06 03:19:22.888801 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC0069F0
2020-02-06 03:19:22.888801 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC010530
2020-02-06 03:19:22.889801 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC011400
2020-02-06 03:19:22.890801 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC006CC0
2020-02-06 03:19:23.722801 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:19:23.808801 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:19:23.808801 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:19:23.733801 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:19:23.809801 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:19:23.809801 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:19:23.815801 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:19:23.818801 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:19:24.506801 D system Th{6304} [corba/cbmodule_srv_impl.cpp:955] ping_clients() Begin pinging session: 3458430551181654012
2020-02-06 03:19:24.507801 D system Th{6304} [corba/cbmodule_srv_impl.cpp:957] ping_clients() Session: 3458430551181654012ping ok
2020-02-06 03:19:24.507801 I system Th{6304} [corba/cbmodule_srv_impl.cpp:966] ping_clients() rc=0
2020-02-06 03:19:25.815801 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:19:25.815801 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:19:25.816801 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:19:25.818801 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:19:25.818801 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:19:25.818801 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:19:25.822801 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:19:25.828801 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:19:26.756801 D system Th{6327} [corba/pay_service_impl.cpp:701] run() Before NCTService ping ...
2020-02-06 03:19:26.756801 D system Th{6327} [corba/pay_service_impl.cpp:719] run() NCTService ping ok
2020-02-06 03:19:27.004801 D trk Th{6366} [io/src/timer_wrap.cpp:272] handleEvent()  ptr: 0x00007FFA0C009220 fired
2020-02-06 03:19:27.004801 D trk Th{6366} [doms/src/trk_driver/apc.cpp:118] sendMessage() Doms. Sending heartbeat message
2020-02-06 03:19:27.004801 D trk Th{6366} [io/src/timer_wrap.cpp:245] setSingleShot()  ptr: 0x00007FFA0C009220 10000 ms
2020-02-06 03:19:27.507801 D system Th{6304} [corba/cbmodule_srv_impl.cpp:955] ping_clients() Begin pinging session: 3458430551181654012
2020-02-06 03:19:27.508801 D system Th{6304} [corba/cbmodule_srv_impl.cpp:957] ping_clients() Session: 3458430551181654012ping ok
2020-02-06 03:19:27.508801 I system Th{6304} [corba/cbmodule_srv_impl.cpp:966] ping_clients() rc=0
2020-02-06 03:19:27.823801 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:19:27.823801 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:19:27.823801 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:19:27.828801 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:19:27.828801 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:19:27.828801 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:19:27.830801 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:19:27.838801 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:19:29.100801 D trk Th{6297} [doms/src/trk_driver/apc.cpp:118] sendMessage() Doms. Sending heartbeat message
2020-02-06 03:19:29.830801 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:19:29.830801 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:19:29.831801 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:19:29.837801 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:19:29.838801 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:19:29.838801 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:19:29.838801 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:19:29.847801 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:19:30.508801 D system Th{6304} [corba/cbmodule_srv_impl.cpp:955] ping_clients() Begin pinging session: 3458430551181654012
2020-02-06 03:19:30.509801 D system Th{6304} [corba/cbmodule_srv_impl.cpp:957] ping_clients() Session: 3458430551181654012ping ok
2020-02-06 03:19:30.509801 I system Th{6304} [corba/cbmodule_srv_impl.cpp:966] ping_clients() rc=0
2020-02-06 03:19:31.756801 D system Th{6327} [corba/pay_service_impl.cpp:701] run() Before NCTService ping ...
2020-02-06 03:19:31.757801 D system Th{6327} [corba/pay_service_impl.cpp:719] run() NCTService ping ok
2020-02-06 03:19:31.838801 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:19:31.838801 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:19:31.838801 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:19:31.844801 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:19:31.847801 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:19:31.847801 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:19:31.847801 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:19:31.856801 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:19:32.402801 D trk Th{6297} [doms/src/trk_driver/apc.cpp:115] sendMessage() Doms. Sending a message: FpStatus3::Req: { fpId: 0 }
2020-02-06 03:19:32.402801 D trk Th{6297} [doms/src/trk_driver/apc.cpp:116] sendMessage() Doms. Message dump: 01 15 03 00
2020-02-06 03:19:32.446801 D trk Th{6297} [doms/src/trk_driver/apc.cpp:184] readAnswer() Doms. Message decoded: 01 FE 00 95 03 08 1F 01 23 02 56 00 00 06 01 01 01 02 02 01 23 03 06 05 01 02 03 04 05 10 01 01 11 01 01 16 01 00 1F 02 23 02 56 00 00 06 01 01 01 02 02 01 23 03 06 05 01 02 03 04 05 10 01 01 11 01 01 16 01 00 1F 03 23 02 56 00 00 06 01 01 01 02 02 01 23 03 06 05 01 02 03 04 05 10 01 01 11 01 01 16 01 00 1F 04 23 02 56 00 00 06 01 01 01 02 02 01 23 03 06 05 01 02 03 04 05 10 01 01 11 01 01 16 01 00 1F 05 23 02 56 00 00 06 01 01 01 02 02 01 23 03 06 05 01 02 03 04 05 10 01 01 11 01 01 16 01 00 1F 06 23 02 56 00 00 06 01 01 01 02 02 01 23 03 06 05 01 02 03 04 05 10 01 01 11 01 01 16 01 00 1B 07 23 02 56 00 00 06 01 01 01 02 02 01 23 03 02 01 05 10 01 01 11 01 01 16 01 00 1C 08 23 02 56 00 00 06 01 01 01 02 02 01 23 03 03 02 05 05 10 01 01 11 01 01 16 01 00
2020-02-06 03:19:32.447801 D trk Th{6297} [doms/src/trk_driver/apc.cpp:91] createMessage() Doms. Message recv: MultiMessage::Reply: { 
                                ..m_repExtMsgCode: 0x0095
                                ..m_repMsgSubc: 0x03
                                ..m_list (8pcs): [
                                ....FpStatus3::Reply: { 
                                ......fpId: 1
                                ......activeSmId: 23
                                ......mainState: FMS_Idle(2)
                                ......subStates: lVOsBeAp
                                ......lockId: 0
                                ......gradeId: 0
                                ......supStPars: FpSupStatusPars(6pcs): [ 
                                ........SubStates2(1): [T__ml__s],
                                ........AvailSms(2): [List(1pcs): [ 23]],
                                ........AvailGrades(3): [List(5pcs): [ 1, 2, 3, 4, 5]],
                                ........OpMode(10): [1],
                                ........PgId(11): [1],
                                ........SubStates4(16): [pn]
                                ......]
                                ....},
                                ....FpStatus3::Reply: { 
                                ......fpId: 2
                                ......activeSmId: 23
                                ......mainState: FMS_Idle(2)
                                ......subStates: lVOsBeAp
                                ......lockId: 0
                                ......gradeId: 0
                                ......supStPars: FpSupStatusPars(6pcs): [ 
                                ........SubStates2(1): [T__ml__s],
                                ........AvailSms(2): [List(1pcs): [ 23]],
                                ........AvailGrades(3): [List(5pcs): [ 1, 2, 3, 4, 5]],
                                ........OpMode(10): [1],
                                ........PgId(11): [1],
                                ........SubStates4(16): [pn]
                                ......]
                                ....},
                                ....FpStatus3::Reply: { 
                                ......fpId: 3
                                ......activeSmId: 23
                                ......mainState: FMS_Idle(2)
                                ......subStates: lVOsBeAp
                                ......lockId: 0
                                ......gradeId: 0
                                ......supStPars: FpSupStatusPars(6pcs): [ 
                                ........SubStates2(1): [T__ml__s],
                                ........AvailSms(2): [List(1pcs): [ 23]],
                                ........AvailGrades(3): [List(5pcs): [ 1, 2, 3, 4, 5]],
                                ........OpMode(10): [1],
                                ........PgId(11): [1],
                                ........SubStates4(16): [pn]
                                ......]
                                ....},
                                ....FpStatus3::Reply: { 
                                ......fpId: 4
                                ......activeSmId: 23
                                ......mainState: FMS_Idle(2)
                                ......subStates: lVOsBeAp
                                ......lockId: 0
                                ......gradeId: 0
                                ......supStPars: FpSupStatusPars(6pcs): [ 
                                ........SubStates2(1): [T__ml__s],
                                ........AvailSms(2): [List(1pcs): [ 23]],
                                ........AvailGrades(3): [List(5pcs): [ 1, 2, 3, 4, 5]],
                                ........OpMode(10): [1],
                                ........PgId(11): [1],
                                ........SubStates4(16): [pn]
                                ......]
                                ....},
                                ....FpStatus3::Reply: { 
                                ......fpId: 5
                                ......activeSmId: 23
                                ......mainState: FMS_Idle(2)
                                ......subStates: lVOsBeAp
                                ......lockId: 0
                                ......gradeId: 0
                                ......supStPars: FpSupStatusPars(6pcs): [ 
                                ........SubStates2(1): [T__ml__s],
                                ........AvailSms(2): [List(1pcs): [ 23]],
                                ........AvailGrades(3): [List(5pcs): [ 1, 2, 3, 4, 5]],
                                ........OpMode(10): [1],
                                ........PgId(11): [1],
                                ........SubStates4(16): [pn]
                                ......]
                                ....},
                                ....FpStatus3::Reply: { 
                                ......fpId: 6
                                ......activeSmId: 23
                                ......mainState: FMS_Idle(2)
                                ......subStates: lVOsBeAp
                                ......lockId: 0
                                ......gradeId: 0
                                ......supStPars: FpSupStatusPars(6pcs): [ 
                                ........SubStates2(1): [T__ml__s],
                                ........AvailSms(2): [List(1pcs): [ 23]],
                                ........AvailGrades(3): [List(5pcs): [ 1, 2, 3, 4, 5]],
                                ........OpMode(10): [1],
                                ........PgId(11): [1],
                                ........SubStates4(16): [pn]
                                ......]
                                ....},
                                ....FpStatus3::Reply: { 
                                ......fpId: 7
                                ......activeSmId: 23
                                ......mainState: FMS_Idle(2)
                                ......subStates: lVOsBeAp
                                ......lockId: 0
                                ......gradeId: 0
                                ......supStPars: FpSupStatusPars(6pcs): [ 
                                ........SubStates2(1): [T__ml__s],
                                ........AvailSms(2): [List(1pcs): [ 23]],
                                ........AvailGrades(3): [List(1pcs): [ 5]],
                                ........OpMode(10): [1],
                                ........PgId(11): [1],
                                ........SubStates4(16): [pn]
                                ......]
                                ....},
                                ....FpStatus3::Reply: { 
                                ......fpId: 8
                                ......activeSmId: 23
                                ......mainState: FMS_Idle(2)
                                ......subStates: lVOsBeAp
                                ......lockId: 0
                                ......gradeId: 0
                                ......supStPars: FpSupStatusPars(6pcs): [ 
                                ........SubStates2(1): [T__ml__s],
                                ........AvailSms(2): [List(1pcs): [ 23]],
                                ........AvailGrades(3): [List(2pcs): [ 5, 5]],
                                ........OpMode(10): [1],
                                ........PgId(11): [1],
                                ........SubStates4(16): [pn]
                                ......]
                                ....}
                                ..]
                                }
2020-02-06 03:19:33.272801 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC010E60
2020-02-06 03:19:33.273801 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC015230
2020-02-06 03:19:33.274801 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9B4182190
2020-02-06 03:19:33.275801 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC0069F0
2020-02-06 03:19:33.276801 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC010530
2020-02-06 03:19:33.276801 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC011400
2020-02-06 03:19:33.509801 D system Th{6304} [corba/cbmodule_srv_impl.cpp:955] ping_clients() Begin pinging session: 3458430551181654012
2020-02-06 03:19:33.509801 D system Th{6304} [corba/cbmodule_srv_impl.cpp:957] ping_clients() Session: 3458430551181654012ping ok
2020-02-06 03:19:33.509801 I system Th{6304} [corba/cbmodule_srv_impl.cpp:966] ping_clients() rc=0
2020-02-06 03:19:33.844801 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:19:33.844801 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:19:33.844801 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:19:33.851801 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:19:33.856801 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:19:33.857801 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:19:33.857801 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:19:33.866801 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:19:35.852801 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:19:35.852801 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:19:35.852801 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:19:35.859801 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:19:35.866801 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:19:35.866801 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:19:35.866801 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:19:35.876801 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:19:36.510801 D system Th{6304} [corba/cbmodule_srv_impl.cpp:955] ping_clients() Begin pinging session: 3458430551181654012
2020-02-06 03:19:36.510801 D system Th{6304} [corba/cbmodule_srv_impl.cpp:957] ping_clients() Session: 3458430551181654012ping ok
2020-02-06 03:19:36.510801 I system Th{6304} [corba/cbmodule_srv_impl.cpp:966] ping_clients() rc=0
2020-02-06 03:19:36.757801 D system Th{6327} [corba/pay_service_impl.cpp:701] run() Before NCTService ping ...
2020-02-06 03:19:36.757801 D system Th{6327} [corba/pay_service_impl.cpp:719] run() NCTService ping ok
2020-02-06 03:19:37.004801 D trk Th{6366} [io/src/timer_wrap.cpp:272] handleEvent()  ptr: 0x00007FFA0C009220 fired
2020-02-06 03:19:37.005801 D trk Th{6366} [doms/src/trk_driver/apc.cpp:118] sendMessage() Doms. Sending heartbeat message
2020-02-06 03:19:37.005801 D trk Th{6366} [io/src/timer_wrap.cpp:245] setSingleShot()  ptr: 0x00007FFA0C009220 10000 ms
2020-02-06 03:19:37.859801 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:19:37.859801 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:19:37.859801 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:19:37.867801 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:19:37.876801 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:19:37.876801 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:19:37.876801 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:19:37.886801 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:19:39.051801 D trk Th{6297} [doms/src/trk_driver/apc.cpp:118] sendMessage() Doms. Sending heartbeat message
2020-02-06 03:19:39.315801 D system Th{6312} [corba/sale_server_tms_watcher.cpp:112] run() TMSWatcher poll
2020-02-06 03:19:39.316801 D db Th{22669} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select canid,canname from azk.mcs_cans order by canname
2020-02-06 03:19:39.318801 D db Th{22669} [dblib/dblib.cpp:1435] execute() SQLStmt::executing  select fc.shift_end_vol, fc.shift_end_mass,      fc.expected_petrolid, (a.articlename || '(' || a.ecrshortname || ')') as articlename, c.min_book_rest  from public.get_fuel_in_can( ?, (select shiftno from azk.mcs_shifts order by shiftno desc limit 1) ) fc  join azk.mcs_cans c on (c.canid = ?)  join azk.mcs_articles a on (fc.expected_petrolid = a.articleid) 
2020-02-06 03:19:39.321801 I sale Th{22669} [db/can_db.cpp:690] _rests_in_last_shift_do_not_subtract_min_book_rest() rest=8387.940, mass=6337.800 for can = 1 p =1000054 pn=GD100(АИ-100) mbr=750.000=>
2020-02-06 03:19:39.322801 I system Th{22669} [corba/rests_server.cpp:222] db_resync_() syncing can=1 vol=8387.940 mas=6337.800 mbr=750.000
2020-02-06 03:19:39.322801 D db Th{22669} [dblib/dblib.cpp:1435] execute() SQLStmt::executing  select fc.shift_end_vol, fc.shift_end_mass,      fc.expected_petrolid, (a.articlename || '(' || a.ecrshortname || ')') as articlename, c.min_book_rest  from public.get_fuel_in_can( ?, (select shiftno from azk.mcs_shifts order by shiftno desc limit 1) ) fc  join azk.mcs_cans c on (c.canid = ?)  join azk.mcs_articles a on (fc.expected_petrolid = a.articleid) 
2020-02-06 03:19:39.325801 I sale Th{22669} [db/can_db.cpp:690] _rests_in_last_shift_do_not_subtract_min_book_rest() rest=12311.630, mass=8912.378 for can = 2 p =1000003 pn=GD95(АИ-95) mbr=747.000=>
2020-02-06 03:19:39.325801 I system Th{22669} [corba/rests_server.cpp:222] db_resync_() syncing can=2 vol=12311.630 mas=8912.378 mbr=747.000
2020-02-06 03:19:39.325801 D db Th{22669} [dblib/dblib.cpp:1435] execute() SQLStmt::executing  select fc.shift_end_vol, fc.shift_end_mass,      fc.expected_petrolid, (a.articlename || '(' || a.ecrshortname || ')') as articlename, c.min_book_rest  from public.get_fuel_in_can( ?, (select shiftno from azk.mcs_shifts order by shiftno desc limit 1) ) fc  join azk.mcs_cans c on (c.canid = ?)  join azk.mcs_articles a on (fc.expected_petrolid = a.articleid) 
2020-02-06 03:19:39.328801 I sale Th{22669} [db/can_db.cpp:690] _rests_in_last_shift_do_not_subtract_min_book_rest() rest=25725.210, mass=-4221.601 for can = 3 p =1000081 pn=АИ-95(АИ-95) mbr=2453.000=>
2020-02-06 03:19:39.328801 I system Th{22669} [corba/rests_server.cpp:222] db_resync_() syncing can=3 vol=25725.210 mas=-4221.601 mbr=2453.000
2020-02-06 03:19:39.328801 D db Th{22669} [dblib/dblib.cpp:1435] execute() SQLStmt::executing  select fc.shift_end_vol, fc.shift_end_mass,      fc.expected_petrolid, (a.articlename || '(' || a.ecrshortname || ')') as articlename, c.min_book_rest  from public.get_fuel_in_can( ?, (select shiftno from azk.mcs_shifts order by shiftno desc limit 1) ) fc  join azk.mcs_cans c on (c.canid = ?)  join azk.mcs_articles a on (fc.expected_petrolid = a.articleid) 
2020-02-06 03:19:39.331801 I sale Th{22669} [db/can_db.cpp:690] _rests_in_last_shift_do_not_subtract_min_book_rest() rest=22362.340, mass=-1639.507 for can = 4 p =1000033 pn=АИ-92(АИ-92) mbr=1672.000=>
2020-02-06 03:19:39.331801 I system Th{22669} [corba/rests_server.cpp:222] db_resync_() syncing can=4 vol=22362.340 mas=-1639.507 mbr=1672.000
2020-02-06 03:19:39.331801 D db Th{22669} [dblib/dblib.cpp:1435] execute() SQLStmt::executing  select fc.shift_end_vol, fc.shift_end_mass,      fc.expected_petrolid, (a.articlename || '(' || a.ecrshortname || ')') as articlename, c.min_book_rest  from public.get_fuel_in_can( ?, (select shiftno from azk.mcs_shifts order by shiftno desc limit 1) ) fc  join azk.mcs_cans c on (c.canid = ?)  join azk.mcs_articles a on (fc.expected_petrolid = a.articleid) 
2020-02-06 03:19:39.334801 I sale Th{22669} [db/can_db.cpp:690] _rests_in_last_shift_do_not_subtract_min_book_rest() rest=19130.610, mass=5857.970 for can = 5 p =1000051 pn=ДТОПТИ(ДТ-З) mbr=1645.000=>
2020-02-06 03:19:39.334801 I system Th{22669} [corba/rests_server.cpp:222] db_resync_() syncing can=5 vol=19130.610 mas=5857.970 mbr=1645.000
2020-02-06 03:19:39.334801 D db Th{22669} [dblib/dblib.cpp:1435] execute() SQLStmt::executing  select fc.shift_end_vol, fc.shift_end_mass,      fc.expected_petrolid, (a.articlename || '(' || a.ecrshortname || ')') as articlename, c.min_book_rest  from public.get_fuel_in_can( ?, (select shiftno from azk.mcs_shifts order by shiftno desc limit 1) ) fc  join azk.mcs_cans c on (c.canid = ?)  join azk.mcs_articles a on (fc.expected_petrolid = a.articleid) 
2020-02-06 03:19:39.337801 I sale Th{22669} [db/can_db.cpp:690] _rests_in_last_shift_do_not_subtract_min_book_rest() rest=25980.110, mass=11394.182 for can = 6 p =1000051 pn=ДТОПТИ(ДТ-З) mbr=2365.000=>
2020-02-06 03:19:39.337801 I system Th{22669} [corba/rests_server.cpp:222] db_resync_() syncing can=6 vol=25980.110 mas=11394.182 mbr=2365.000
2020-02-06 03:19:39.337801 D system Th{22669} [corba/rests_server.cpp:287] get_all_data_locked()  push to map= vol=8387.940 min_book_rest=750.000 mass=6337.800 first=1 petrol=1000054 petrol_name=GD100(АИ-100)
2020-02-06 03:19:39.337801 D system Th{22669} [corba/rests_server.cpp:287] get_all_data_locked()  push to map= vol=12311.630 min_book_rest=747.000 mass=8912.378 first=2 petrol=1000003 petrol_name=GD95(АИ-95)
2020-02-06 03:19:39.337801 D system Th{22669} [corba/rests_server.cpp:287] get_all_data_locked()  push to map= vol=25725.210 min_book_rest=2453.000 mass=-4221.601 first=3 petrol=1000081 petrol_name=АИ-95(АИ-95)
2020-02-06 03:19:39.337801 D system Th{22669} [corba/rests_server.cpp:287] get_all_data_locked()  push to map= vol=22362.340 min_book_rest=1672.000 mass=-1639.507 first=4 petrol=1000033 petrol_name=АИ-92(АИ-92)
2020-02-06 03:19:39.337801 D system Th{22669} [corba/rests_server.cpp:287] get_all_data_locked()  push to map= vol=19130.610 min_book_rest=1645.000 mass=5857.970 first=5 petrol=1000051 petrol_name=ДТОПТИ(ДТ-З)
2020-02-06 03:19:39.337801 D system Th{22669} [corba/rests_server.cpp:287] get_all_data_locked()  push to map= vol=25980.110 min_book_rest=2365.000 mass=11394.182 first=6 petrol=1000051 petrol_name=ДТОПТИ(ДТ-З)
2020-02-06 03:19:39.337801 D system Th{22669} [corba/rests_server.cpp:204] db_resync_() Time to db-resync can rests doesn't came yet. Last sync was: 0 msec ago
2020-02-06 03:19:39.338801 D system Th{22669} [corba/rests_server.cpp:95] BookRestCaller()  acc_vol2=7510.650 vol=8387.940 mbr=750.000
2020-02-06 03:19:39.338801 D system Th{22669} [corba/rests_server.cpp:204] db_resync_() Time to db-resync can rests doesn't came yet. Last sync was: 1 msec ago
2020-02-06 03:19:39.338801 D system Th{22669} [corba/rests_server.cpp:95] BookRestCaller()  acc_vol2=11110.930 vol=12311.630 mbr=747.000
2020-02-06 03:19:39.338801 D system Th{22669} [corba/rests_server.cpp:204] db_resync_() Time to db-resync can rests doesn't came yet. Last sync was: 1 msec ago
2020-02-06 03:19:39.338801 D system Th{22669} [corba/rests_server.cpp:95] BookRestCaller()  acc_vol2=22138.020 vol=25725.210 mbr=2453.000
2020-02-06 03:19:39.338801 D system Th{22669} [corba/rests_server.cpp:204] db_resync_() Time to db-resync can rests doesn't came yet. Last sync was: 1 msec ago
2020-02-06 03:19:39.338801 D system Th{22669} [corba/rests_server.cpp:95] BookRestCaller()  acc_vol2=19442.460 vol=22362.340 mbr=1672.000
2020-02-06 03:19:39.338801 D system Th{22669} [corba/rests_server.cpp:204] db_resync_() Time to db-resync can rests doesn't came yet. Last sync was: 1 msec ago
2020-02-06 03:19:39.338801 D system Th{22669} [corba/rests_server.cpp:95] BookRestCaller()  acc_vol2=16468.290 vol=19130.610 mbr=1645.000
2020-02-06 03:19:39.338801 D system Th{22669} [corba/rests_server.cpp:204] db_resync_() Time to db-resync can rests doesn't came yet. Last sync was: 1 msec ago
2020-02-06 03:19:39.338801 D system Th{22669} [corba/rests_server.cpp:95] BookRestCaller()  acc_vol2=22322.950 vol=25980.110 mbr=2365.000
2020-02-06 03:19:39.510801 D system Th{6304} [corba/cbmodule_srv_impl.cpp:955] ping_clients() Begin pinging session: 3458430551181654012
2020-02-06 03:19:39.511801 D system Th{6304} [corba/cbmodule_srv_impl.cpp:957] ping_clients() Session: 3458430551181654012ping ok
2020-02-06 03:19:39.511801 I system Th{6304} [corba/cbmodule_srv_impl.cpp:966] ping_clients() rc=0
2020-02-06 03:19:39.867801 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:19:39.867801 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:19:39.867801 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:19:39.874801 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:19:39.886801 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:19:39.886801 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:19:39.886801 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:19:39.896801 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:19:41.757802 D system Th{6327} [corba/pay_service_impl.cpp:701] run() Before NCTService ping ...
2020-02-06 03:19:41.757802 D system Th{6327} [corba/pay_service_impl.cpp:719] run() NCTService ping ok
2020-02-06 03:19:41.874802 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:19:41.874802 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:19:41.875802 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:19:41.882802 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:19:41.896802 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:19:41.896802 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:19:41.896802 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:19:41.905802 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:19:42.511802 D system Th{6304} [corba/cbmodule_srv_impl.cpp:955] ping_clients() Begin pinging session: 3458430551181654012
2020-02-06 03:19:42.511802 D system Th{6304} [corba/cbmodule_srv_impl.cpp:957] ping_clients() Session: 3458430551181654012ping ok
2020-02-06 03:19:42.511802 I system Th{6304} [corba/cbmodule_srv_impl.cpp:966] ping_clients() rc=0
2020-02-06 03:19:43.660802 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC006CC0
2020-02-06 03:19:43.661802 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC010E60
2020-02-06 03:19:43.662802 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC015230
2020-02-06 03:19:43.663802 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9B4182190
2020-02-06 03:19:43.664802 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC0069F0
2020-02-06 03:19:43.665802 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC010530
2020-02-06 03:19:43.882802 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:19:43.882802 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:19:43.882802 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:19:43.889802 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:19:43.905802 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:19:43.906802 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:19:43.906802 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:19:43.915802 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:19:45.512802 D system Th{6304} [corba/cbmodule_srv_impl.cpp:955] ping_clients() Begin pinging session: 3458430551181654012
2020-02-06 03:19:45.512802 D system Th{6304} [corba/cbmodule_srv_impl.cpp:957] ping_clients() Session: 3458430551181654012ping ok
2020-02-06 03:19:45.512802 I system Th{6304} [corba/cbmodule_srv_impl.cpp:966] ping_clients() rc=0
2020-02-06 03:19:45.889802 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:19:45.889802 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:19:45.889802 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:19:45.896802 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:19:45.915802 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:19:45.915802 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:19:45.915802 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:19:45.925802 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:19:46.758802 D system Th{6327} [corba/pay_service_impl.cpp:701] run() Before NCTService ping ...
2020-02-06 03:19:46.758802 D system Th{6327} [corba/pay_service_impl.cpp:719] run() NCTService ping ok
2020-02-06 03:19:47.005802 D trk Th{6366} [io/src/timer_wrap.cpp:272] handleEvent()  ptr: 0x00007FFA0C009220 fired
2020-02-06 03:19:47.005802 D trk Th{6366} [doms/src/trk_driver/apc.cpp:118] sendMessage() Doms. Sending heartbeat message
2020-02-06 03:19:47.005802 D trk Th{6366} [io/src/timer_wrap.cpp:245] setSingleShot()  ptr: 0x00007FFA0C009220 10000 ms
2020-02-06 03:19:47.897802 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:19:47.897802 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:19:47.897802 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:19:47.904802 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:19:47.925802 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:19:47.925802 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:19:47.925802 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:19:47.934802 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:19:48.512802 D system Th{6304} [corba/cbmodule_srv_impl.cpp:955] ping_clients() Begin pinging session: 3458430551181654012
2020-02-06 03:19:48.513802 D system Th{6304} [corba/cbmodule_srv_impl.cpp:957] ping_clients() Session: 3458430551181654012ping ok
2020-02-06 03:19:48.513802 I system Th{6304} [corba/cbmodule_srv_impl.cpp:966] ping_clients() rc=0
2020-02-06 03:19:49.257802 D trk Th{6297} [doms/src/trk_driver/apc.cpp:118] sendMessage() Doms. Sending heartbeat message
2020-02-06 03:19:49.904802 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:19:49.905802 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:19:49.905802 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:19:49.912802 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:19:49.934802 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:19:49.934802 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:19:49.934802 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:19:49.944802 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:19:51.513802 D system Th{6304} [corba/cbmodule_srv_impl.cpp:955] ping_clients() Begin pinging session: 3458430551181654012
2020-02-06 03:19:51.514802 D system Th{6304} [corba/cbmodule_srv_impl.cpp:957] ping_clients() Session: 3458430551181654012ping ok
2020-02-06 03:19:51.514802 I system Th{6304} [corba/cbmodule_srv_impl.cpp:966] ping_clients() rc=0
2020-02-06 03:19:51.758802 D system Th{6327} [corba/pay_service_impl.cpp:701] run() Before NCTService ping ...
2020-02-06 03:19:51.758802 D system Th{6327} [corba/pay_service_impl.cpp:719] run() NCTService ping ok
2020-02-06 03:19:51.912802 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:19:51.912802 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:19:51.912802 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:19:51.929802 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:19:51.944802 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:19:51.944802 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:19:51.944802 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:19:51.954802 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:19:53.459802 D trk Th{6297} [doms/src/trk_driver/apc.cpp:115] sendMessage() Doms. Sending a message: FpStatus3::Req: { fpId: 0 }
2020-02-06 03:19:53.459802 D trk Th{6297} [doms/src/trk_driver/apc.cpp:116] sendMessage() Doms. Message dump: 01 15 03 00
2020-02-06 03:19:53.490802 D trk Th{6297} [doms/src/trk_driver/apc.cpp:184] readAnswer() Doms. Message decoded: 01 FE 00 95 03 08 1F 01 23 02 56 00 00 06 01 01 01 02 02 01 23 03 06 05 01 02 03 04 05 10 01 01 11 01 01 16 01 00 1F 02 23 02 56 00 00 06 01 01 01 02 02 01 23 03 06 05 01 02 03 04 05 10 01 01 11 01 01 16 01 00 1F 03 23 02 56 00 00 06 01 01 01 02 02 01 23 03 06 05 01 02 03 04 05 10 01 01 11 01 01 16 01 00 1F 04 23 02 56 00 00 06 01 01 01 02 02 01 23 03 06 05 01 02 03 04 05 10 01 01 11 01 01 16 01 00 1F 05 23 02 56 00 00 06 01 01 01 02 02 01 23 03 06 05 01 02 03 04 05 10 01 01 11 01 01 16 01 00 1F 06 23 02 56 00 00 06 01 01 01 02 02 01 23 03 06 05 01 02 03 04 05 10 01 01 11 01 01 16 01 00 1B 07 23 02 56 00 00 06 01 01 01 02 02 01 23 03 02 01 05 10 01 01 11 01 01 16 01 00 1C 08 23 02 56 00 00 06 01 01 01 02 02 01 23 03 03 02 05 05 10 01 01 11 01 01 16 01 00
2020-02-06 03:19:53.491802 D trk Th{6297} [doms/src/trk_driver/apc.cpp:91] createMessage() Doms. Message recv: MultiMessage::Reply: { 
                                ..m_repExtMsgCode: 0x0095
                                ..m_repMsgSubc: 0x03
                                ..m_list (8pcs): [
                                ....FpStatus3::Reply: { 
                                ......fpId: 1
                                ......activeSmId: 23
                                ......mainState: FMS_Idle(2)
                                ......subStates: lVOsBeAp
                                ......lockId: 0
                                ......gradeId: 0
                                ......supStPars: FpSupStatusPars(6pcs): [ 
                                ........SubStates2(1): [T__ml__s],
                                ........AvailSms(2): [List(1pcs): [ 23]],
                                ........AvailGrades(3): [List(5pcs): [ 1, 2, 3, 4, 5]],
                                ........OpMode(10): [1],
                                ........PgId(11): [1],
                                ........SubStates4(16): [pn]
                                ......]
                                ....},
                                ....FpStatus3::Reply: { 
                                ......fpId: 2
                                ......activeSmId: 23
                                ......mainState: FMS_Idle(2)
                                ......subStates: lVOsBeAp
                                ......lockId: 0
                                ......gradeId: 0
                                ......supStPars: FpSupStatusPars(6pcs): [ 
                                ........SubStates2(1): [T__ml__s],
                                ........AvailSms(2): [List(1pcs): [ 23]],
                                ........AvailGrades(3): [List(5pcs): [ 1, 2, 3, 4, 5]],
                                ........OpMode(10): [1],
                                ........PgId(11): [1],
                                ........SubStates4(16): [pn]
                                ......]
                                ....},
                                ....FpStatus3::Reply: { 
                                ......fpId: 3
                                ......activeSmId: 23
                                ......mainState: FMS_Idle(2)
                                ......subStates: lVOsBeAp
                                ......lockId: 0
                                ......gradeId: 0
                                ......supStPars: FpSupStatusPars(6pcs): [ 
                                ........SubStates2(1): [T__ml__s],
                                ........AvailSms(2): [List(1pcs): [ 23]],
                                ........AvailGrades(3): [List(5pcs): [ 1, 2, 3, 4, 5]],
                                ........OpMode(10): [1],
                                ........PgId(11): [1],
                                ........SubStates4(16): [pn]
                                ......]
                                ....},
                                ....FpStatus3::Reply: { 
                                ......fpId: 4
                                ......activeSmId: 23
                                ......mainState: FMS_Idle(2)
                                ......subStates: lVOsBeAp
                                ......lockId: 0
                                ......gradeId: 0
                                ......supStPars: FpSupStatusPars(6pcs): [ 
                                ........SubStates2(1): [T__ml__s],
                                ........AvailSms(2): [List(1pcs): [ 23]],
                                ........AvailGrades(3): [List(5pcs): [ 1, 2, 3, 4, 5]],
                                ........OpMode(10): [1],
                                ........PgId(11): [1],
                                ........SubStates4(16): [pn]
                                ......]
                                ....},
                                ....FpStatus3::Reply: { 
                                ......fpId: 5
                                ......activeSmId: 23
                                ......mainState: FMS_Idle(2)
                                ......subStates: lVOsBeAp
                                ......lockId: 0
                                ......gradeId: 0
                                ......supStPars: FpSupStatusPars(6pcs): [ 
                                ........SubStates2(1): [T__ml__s],
                                ........AvailSms(2): [List(1pcs): [ 23]],
                                ........AvailGrades(3): [List(5pcs): [ 1, 2, 3, 4, 5]],
                                ........OpMode(10): [1],
                                ........PgId(11): [1],
                                ........SubStates4(16): [pn]
                                ......]
                                ....},
                                ....FpStatus3::Reply: { 
                                ......fpId: 6
                                ......activeSmId: 23
                                ......mainState: FMS_Idle(2)
                                ......subStates: lVOsBeAp
                                ......lockId: 0
                                ......gradeId: 0
                                ......supStPars: FpSupStatusPars(6pcs): [ 
                                ........SubStates2(1): [T__ml__s],
                                ........AvailSms(2): [List(1pcs): [ 23]],
                                ........AvailGrades(3): [List(5pcs): [ 1, 2, 3, 4, 5]],
                                ........OpMode(10): [1],
                                ........PgId(11): [1],
                                ........SubStates4(16): [pn]
                                ......]
                                ....},
                                ....FpStatus3::Reply: { 
                                ......fpId: 7
                                ......activeSmId: 23
                                ......mainState: FMS_Idle(2)
                                ......subStates: lVOsBeAp
                                ......lockId: 0
                                ......gradeId: 0
                                ......supStPars: FpSupStatusPars(6pcs): [ 
                                ........SubStates2(1): [T__ml__s],
                                ........AvailSms(2): [List(1pcs): [ 23]],
                                ........AvailGrades(3): [List(1pcs): [ 5]],
                                ........OpMode(10): [1],
                                ........PgId(11): [1],
                                ........SubStates4(16): [pn]
                                ......]
                                ....},
                                ....FpStatus3::Reply: { 
                                ......fpId: 8
                                ......activeSmId: 23
                                ......mainState: FMS_Idle(2)
                                ......subStates: lVOsBeAp
                                ......lockId: 0
                                ......gradeId: 0
                                ......supStPars: FpSupStatusPars(6pcs): [ 
                                ........SubStates2(1): [T__ml__s],
                                ........AvailSms(2): [List(1pcs): [ 23]],
                                ........AvailGrades(3): [List(2pcs): [ 5, 5]],
                                ........OpMode(10): [1],
                                ........PgId(11): [1],
                                ........SubStates4(16): [pn]
                                ......]
                                ....}
                                ..]
                                }
2020-02-06 03:19:53.929802 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:19:53.929802 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:19:53.929802 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:19:53.936802 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:19:53.954802 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:19:53.954802 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:19:53.954802 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:19:53.963802 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:19:54.046802 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC011400
2020-02-06 03:19:54.047802 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC006CC0
2020-02-06 03:19:54.048802 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC010E60
2020-02-06 03:19:54.049802 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC015230
2020-02-06 03:19:54.050802 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9B4182190
2020-02-06 03:19:54.050802 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC0069F0
2020-02-06 03:19:54.514802 D system Th{6304} [corba/cbmodule_srv_impl.cpp:955] ping_clients() Begin pinging session: 3458430551181654012
2020-02-06 03:19:54.515802 D system Th{6304} [corba/cbmodule_srv_impl.cpp:957] ping_clients() Session: 3458430551181654012ping ok
2020-02-06 03:19:54.515802 I system Th{6304} [corba/cbmodule_srv_impl.cpp:966] ping_clients() rc=0
2020-02-06 03:19:55.936802 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:19:55.936802 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:19:55.936802 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:19:55.943802 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:19:55.964802 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:19:55.964802 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:19:55.964802 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:19:55.973802 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:19:56.758802 D system Th{6327} [corba/pay_service_impl.cpp:701] run() Before NCTService ping ...
2020-02-06 03:19:56.759802 D system Th{6327} [corba/pay_service_impl.cpp:719] run() NCTService ping ok
2020-02-06 03:19:57.005802 D trk Th{6366} [io/src/timer_wrap.cpp:272] handleEvent()  ptr: 0x00007FFA0C009220 fired
2020-02-06 03:19:57.005802 D trk Th{6366} [doms/src/trk_driver/apc.cpp:118] sendMessage() Doms. Sending heartbeat message
2020-02-06 03:19:57.005802 D trk Th{6366} [io/src/timer_wrap.cpp:245] setSingleShot()  ptr: 0x00007FFA0C009220 10000 ms
2020-02-06 03:19:57.515802 D system Th{6304} [corba/cbmodule_srv_impl.cpp:955] ping_clients() Begin pinging session: 3458430551181654012
2020-02-06 03:19:57.515802 D system Th{6304} [corba/cbmodule_srv_impl.cpp:957] ping_clients() Session: 3458430551181654012ping ok
2020-02-06 03:19:57.515802 I system Th{6304} [corba/cbmodule_srv_impl.cpp:966] ping_clients() rc=0
2020-02-06 03:19:57.943802 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:19:57.943802 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:19:57.944802 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:19:57.951802 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:19:57.973802 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:19:57.973802 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:19:57.973802 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:19:57.982802 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:19:59.194802 D trk Th{6297} [doms/src/trk_driver/apc.cpp:118] sendMessage() Doms. Sending heartbeat message
2020-02-06 03:19:59.316802 D system Th{6312} [corba/sale_server_tms_watcher.cpp:112] run() TMSWatcher poll
2020-02-06 03:19:59.316802 D system Th{6312} [corba/sale_server_tms_watcher.cpp:123] run() Продляю подписку к сервису уровмемеров
2020-02-06 03:19:59.316802 D system Th{22947} [corba/rests_server.cpp:204] db_resync_() Time to db-resync can rests doesn't came yet. Last sync was: 19980 msec ago
2020-02-06 03:19:59.316802 D system Th{22947} [corba/rests_server.cpp:287] get_all_data_locked()  push to map= vol=8387.940 min_book_rest=750.000 mass=6337.800 first=1 petrol=1000054 petrol_name=GD100(АИ-100)
2020-02-06 03:19:59.316802 D system Th{22947} [corba/rests_server.cpp:287] get_all_data_locked()  push to map= vol=12311.630 min_book_rest=747.000 mass=8912.378 first=2 petrol=1000003 petrol_name=GD95(АИ-95)
2020-02-06 03:19:59.316802 D system Th{22947} [corba/rests_server.cpp:287] get_all_data_locked()  push to map= vol=25725.210 min_book_rest=2453.000 mass=-4221.601 first=3 petrol=1000081 petrol_name=АИ-95(АИ-95)
2020-02-06 03:19:59.317802 D system Th{22947} [corba/rests_server.cpp:287] get_all_data_locked()  push to map= vol=22362.340 min_book_rest=1672.000 mass=-1639.507 first=4 petrol=1000033 petrol_name=АИ-92(АИ-92)
2020-02-06 03:19:59.317802 D system Th{22947} [corba/rests_server.cpp:287] get_all_data_locked()  push to map= vol=19130.610 min_book_rest=1645.000 mass=5857.970 first=5 petrol=1000051 petrol_name=ДТОПТИ(ДТ-З)
2020-02-06 03:19:59.317802 D system Th{22947} [corba/rests_server.cpp:287] get_all_data_locked()  push to map= vol=25980.110 min_book_rest=2365.000 mass=11394.182 first=6 petrol=1000051 petrol_name=ДТОПТИ(ДТ-З)
2020-02-06 03:19:59.317802 D system Th{22947} [corba/rests_server.cpp:204] db_resync_() Time to db-resync can rests doesn't came yet. Last sync was: 19981 msec ago
2020-02-06 03:19:59.317802 D system Th{22947} [corba/rests_server.cpp:95] BookRestCaller()  acc_vol2=7510.650 vol=8387.940 mbr=750.000
2020-02-06 03:19:59.317802 D system Th{22947} [corba/rests_server.cpp:204] db_resync_() Time to db-resync can rests doesn't came yet. Last sync was: 19981 msec ago
2020-02-06 03:19:59.317802 D system Th{22947} [corba/rests_server.cpp:95] BookRestCaller()  acc_vol2=11110.930 vol=12311.630 mbr=747.000
2020-02-06 03:19:59.317802 D system Th{22947} [corba/rests_server.cpp:204] db_resync_() Time to db-resync can rests doesn't came yet. Last sync was: 19981 msec ago
2020-02-06 03:19:59.317802 D system Th{22947} [corba/rests_server.cpp:95] BookRestCaller()  acc_vol2=22138.020 vol=25725.210 mbr=2453.000
2020-02-06 03:19:59.317802 D system Th{22947} [corba/rests_server.cpp:204] db_resync_() Time to db-resync can rests doesn't came yet. Last sync was: 19981 msec ago
2020-02-06 03:19:59.317802 D system Th{22947} [corba/rests_server.cpp:95] BookRestCaller()  acc_vol2=19442.460 vol=22362.340 mbr=1672.000
2020-02-06 03:19:59.317802 D system Th{22947} [corba/rests_server.cpp:204] db_resync_() Time to db-resync can rests doesn't came yet. Last sync was: 19981 msec ago
2020-02-06 03:19:59.317802 D system Th{22947} [corba/rests_server.cpp:95] BookRestCaller()  acc_vol2=16468.290 vol=19130.610 mbr=1645.000
2020-02-06 03:19:59.317802 D system Th{22947} [corba/rests_server.cpp:204] db_resync_() Time to db-resync can rests doesn't came yet. Last sync was: 19981 msec ago
2020-02-06 03:19:59.317802 D system Th{22947} [corba/rests_server.cpp:95] BookRestCaller()  acc_vol2=22322.950 vol=25980.110 mbr=2365.000
2020-02-06 03:19:59.951802 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:19:59.951802 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:19:59.951802 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:19:59.959802 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:19:59.983802 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:19:59.983802 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:19:59.983802 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:19:59.992802 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:20:00.516802 D system Th{6304} [corba/cbmodule_srv_impl.cpp:955] ping_clients() Begin pinging session: 3458430551181654012
2020-02-06 03:20:00.516802 D system Th{6304} [corba/cbmodule_srv_impl.cpp:957] ping_clients() Session: 3458430551181654012ping ok
2020-02-06 03:20:00.516802 I system Th{6304} [corba/cbmodule_srv_impl.cpp:966] ping_clients() rc=0
2020-02-06 03:20:01.759803 D system Th{6327} [corba/pay_service_impl.cpp:701] run() Before NCTService ping ...
2020-02-06 03:20:01.759803 D system Th{6327} [corba/pay_service_impl.cpp:719] run() NCTService ping ok
2020-02-06 03:20:01.959803 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:20:01.959803 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:20:01.959803 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:20:01.966803 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:20:01.992803 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:20:01.992803 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:20:01.992803 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:20:02.002803 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:20:03.517803 D system Th{6304} [corba/cbmodule_srv_impl.cpp:955] ping_clients() Begin pinging session: 3458430551181654012
2020-02-06 03:20:03.517803 D system Th{6304} [corba/cbmodule_srv_impl.cpp:957] ping_clients() Session: 3458430551181654012ping ok
2020-02-06 03:20:03.517803 I system Th{6304} [corba/cbmodule_srv_impl.cpp:966] ping_clients() rc=0
2020-02-06 03:20:03.966803 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:20:03.966803 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:20:03.966803 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:20:03.973803 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:20:04.002803 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:20:04.002803 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:20:04.002803 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:20:04.012803 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:20:04.413803 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC010530
2020-02-06 03:20:04.414803 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC011400
2020-02-06 03:20:04.415803 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC006CC0
2020-02-06 03:20:04.416803 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC010E60
2020-02-06 03:20:04.416803 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC015230
2020-02-06 03:20:04.417803 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9B4182190
2020-02-06 03:20:05.973803 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:20:05.973803 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:20:05.973803 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:20:05.980803 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:20:06.012803 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:20:06.012803 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:20:06.012803 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:20:06.022803 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:20:06.517803 D system Th{6304} [corba/cbmodule_srv_impl.cpp:955] ping_clients() Begin pinging session: 3458430551181654012
2020-02-06 03:20:06.518803 D system Th{6304} [corba/cbmodule_srv_impl.cpp:957] ping_clients() Session: 3458430551181654012ping ok
2020-02-06 03:20:06.518803 I system Th{6304} [corba/cbmodule_srv_impl.cpp:966] ping_clients() rc=0
2020-02-06 03:20:06.759803 D system Th{6327} [corba/pay_service_impl.cpp:701] run() Before NCTService ping ...
2020-02-06 03:20:06.759803 D system Th{6327} [corba/pay_service_impl.cpp:719] run() NCTService ping ok
2020-02-06 03:20:07.005803 D trk Th{6366} [io/src/timer_wrap.cpp:272] handleEvent()  ptr: 0x00007FFA0C009220 fired
2020-02-06 03:20:07.005803 D trk Th{6366} [doms/src/trk_driver/apc.cpp:118] sendMessage() Doms. Sending heartbeat message
2020-02-06 03:20:07.005803 D trk Th{6366} [io/src/timer_wrap.cpp:245] setSingleShot()  ptr: 0x00007FFA0C009220 10000 ms
2020-02-06 03:20:07.980803 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:20:07.981803 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:20:07.981803 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:20:07.988803 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:20:08.022803 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:20:08.022803 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:20:08.022803 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:20:08.031803 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:20:09.100803 D trk Th{6297} [doms/src/trk_driver/apc.cpp:118] sendMessage() Doms. Sending heartbeat message
2020-02-06 03:20:09.518803 D system Th{6304} [corba/cbmodule_srv_impl.cpp:955] ping_clients() Begin pinging session: 3458430551181654012
2020-02-06 03:20:09.519803 D system Th{6304} [corba/cbmodule_srv_impl.cpp:957] ping_clients() Session: 3458430551181654012ping ok
2020-02-06 03:20:09.519803 I system Th{6304} [corba/cbmodule_srv_impl.cpp:966] ping_clients() rc=0
2020-02-06 03:20:09.988803 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:20:09.988803 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:20:09.988803 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:20:09.995803 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:20:10.031803 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:20:10.031803 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:20:10.032803 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:20:10.041803 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:20:11.759803 D system Th{6327} [corba/pay_service_impl.cpp:701] run() Before NCTService ping ...
2020-02-06 03:20:11.760803 D system Th{6327} [corba/pay_service_impl.cpp:719] run() NCTService ping ok
2020-02-06 03:20:11.995803 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:20:11.996803 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:20:11.996803 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:20:12.012803 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:20:12.041803 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:20:12.041803 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:20:12.041803 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:20:12.050803 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:20:12.519803 D system Th{6304} [corba/cbmodule_srv_impl.cpp:955] ping_clients() Begin pinging session: 3458430551181654012
2020-02-06 03:20:12.520803 D system Th{6304} [corba/cbmodule_srv_impl.cpp:957] ping_clients() Session: 3458430551181654012ping ok
2020-02-06 03:20:12.520803 I system Th{6304} [corba/cbmodule_srv_impl.cpp:966] ping_clients() rc=0
2020-02-06 03:20:14.012803 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:20:14.012803 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:20:14.012803 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:20:14.020803 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:20:14.051803 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:20:14.051803 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:20:14.051803 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:20:14.060803 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:20:14.503803 D trk Th{6297} [doms/src/trk_driver/apc.cpp:115] sendMessage() Doms. Sending a message: FpStatus3::Req: { fpId: 0 }
2020-02-06 03:20:14.503803 D trk Th{6297} [doms/src/trk_driver/apc.cpp:116] sendMessage() Doms. Message dump: 01 15 03 00
2020-02-06 03:20:14.540803 D trk Th{6297} [doms/src/trk_driver/apc.cpp:184] readAnswer() Doms. Message decoded: 01 FE 00 95 03 08 1F 01 23 02 56 00 00 06 01 01 01 02 02 01 23 03 06 05 01 02 03 04 05 10 01 01 11 01 01 16 01 00 1F 02 23 02 56 00 00 06 01 01 01 02 02 01 23 03 06 05 01 02 03 04 05 10 01 01 11 01 01 16 01 00 1F 03 23 02 56 00 00 06 01 01 01 02 02 01 23 03 06 05 01 02 03 04 05 10 01 01 11 01 01 16 01 00 1F 04 23 02 56 00 00 06 01 01 01 02 02 01 23 03 06 05 01 02 03 04 05 10 01 01 11 01 01 16 01 00 1F 05 23 02 56 00 00 06 01 01 01 02 02 01 23 03 06 05 01 02 03 04 05 10 01 01 11 01 01 16 01 00 1F 06 23 02 56 00 00 06 01 01 01 02 02 01 23 03 06 05 01 02 03 04 05 10 01 01 11 01 01 16 01 00 1B 07 23 02 56 00 00 06 01 01 01 02 02 01 23 03 02 01 05 10 01 01 11 01 01 16 01 00 1C 08 23 02 56 00 00 06 01 01 01 02 02 01 23 03 03 02 05 05 10 01 01 11 01 01 16 01 00
2020-02-06 03:20:14.540803 D trk Th{6297} [doms/src/trk_driver/apc.cpp:91] createMessage() Doms. Message recv: MultiMessage::Reply: { 
                                ..m_repExtMsgCode: 0x0095
                                ..m_repMsgSubc: 0x03
                                ..m_list (8pcs): [
                                ....FpStatus3::Reply: { 
                                ......fpId: 1
                                ......activeSmId: 23
                                ......mainState: FMS_Idle(2)
                                ......subStates: lVOsBeAp
                                ......lockId: 0
                                ......gradeId: 0
                                ......supStPars: FpSupStatusPars(6pcs): [ 
                                ........SubStates2(1): [T__ml__s],
                                ........AvailSms(2): [List(1pcs): [ 23]],
                                ........AvailGrades(3): [List(5pcs): [ 1, 2, 3, 4, 5]],
                                ........OpMode(10): [1],
                                ........PgId(11): [1],
                                ........SubStates4(16): [pn]
                                ......]
                                ....},
                                ....FpStatus3::Reply: { 
                                ......fpId: 2
                                ......activeSmId: 23
                                ......mainState: FMS_Idle(2)
                                ......subStates: lVOsBeAp
                                ......lockId: 0
                                ......gradeId: 0
                                ......supStPars: FpSupStatusPars(6pcs): [ 
                                ........SubStates2(1): [T__ml__s],
                                ........AvailSms(2): [List(1pcs): [ 23]],
                                ........AvailGrades(3): [List(5pcs): [ 1, 2, 3, 4, 5]],
                                ........OpMode(10): [1],
                                ........PgId(11): [1],
                                ........SubStates4(16): [pn]
                                ......]
                                ....},
                                ....FpStatus3::Reply: { 
                                ......fpId: 3
                                ......activeSmId: 23
                                ......mainState: FMS_Idle(2)
                                ......subStates: lVOsBeAp
                                ......lockId: 0
                                ......gradeId: 0
                                ......supStPars: FpSupStatusPars(6pcs): [ 
                                ........SubStates2(1): [T__ml__s],
                                ........AvailSms(2): [List(1pcs): [ 23]],
                                ........AvailGrades(3): [List(5pcs): [ 1, 2, 3, 4, 5]],
                                ........OpMode(10): [1],
                                ........PgId(11): [1],
                                ........SubStates4(16): [pn]
                                ......]
                                ....},
                                ....FpStatus3::Reply: { 
                                ......fpId: 4
                                ......activeSmId: 23
                                ......mainState: FMS_Idle(2)
                                ......subStates: lVOsBeAp
                                ......lockId: 0
                                ......gradeId: 0
                                ......supStPars: FpSupStatusPars(6pcs): [ 
                                ........SubStates2(1): [T__ml__s],
                                ........AvailSms(2): [List(1pcs): [ 23]],
                                ........AvailGrades(3): [List(5pcs): [ 1, 2, 3, 4, 5]],
                                ........OpMode(10): [1],
                                ........PgId(11): [1],
                                ........SubStates4(16): [pn]
                                ......]
                                ....},
                                ....FpStatus3::Reply: { 
                                ......fpId: 5
                                ......activeSmId: 23
                                ......mainState: FMS_Idle(2)
                                ......subStates: lVOsBeAp
                                ......lockId: 0
                                ......gradeId: 0
                                ......supStPars: FpSupStatusPars(6pcs): [ 
                                ........SubStates2(1): [T__ml__s],
                                ........AvailSms(2): [List(1pcs): [ 23]],
                                ........AvailGrades(3): [List(5pcs): [ 1, 2, 3, 4, 5]],
                                ........OpMode(10): [1],
                                ........PgId(11): [1],
                                ........SubStates4(16): [pn]
                                ......]
                                ....},
                                ....FpStatus3::Reply: { 
                                ......fpId: 6
                                ......activeSmId: 23
                                ......mainState: FMS_Idle(2)
                                ......subStates: lVOsBeAp
                                ......lockId: 0
                                ......gradeId: 0
                                ......supStPars: FpSupStatusPars(6pcs): [ 
                                ........SubStates2(1): [T__ml__s],
                                ........AvailSms(2): [List(1pcs): [ 23]],
                                ........AvailGrades(3): [List(5pcs): [ 1, 2, 3, 4, 5]],
                                ........OpMode(10): [1],
                                ........PgId(11): [1],
                                ........SubStates4(16): [pn]
                                ......]
                                ....},
                                ....FpStatus3::Reply: { 
                                ......fpId: 7
                                ......activeSmId: 23
                                ......mainState: FMS_Idle(2)
                                ......subStates: lVOsBeAp
                                ......lockId: 0
                                ......gradeId: 0
                                ......supStPars: FpSupStatusPars(6pcs): [ 
                                ........SubStates2(1): [T__ml__s],
                                ........AvailSms(2): [List(1pcs): [ 23]],
                                ........AvailGrades(3): [List(1pcs): [ 5]],
                                ........OpMode(10): [1],
                                ........PgId(11): [1],
                                ........SubStates4(16): [pn]
                                ......]
                                ....},
                                ....FpStatus3::Reply: { 
                                ......fpId: 8
                                ......activeSmId: 23
                                ......mainState: FMS_Idle(2)
                                ......subStates: lVOsBeAp
                                ......lockId: 0
                                ......gradeId: 0
                                ......supStPars: FpSupStatusPars(6pcs): [ 
                                ........SubStates2(1): [T__ml__s],
                                ........AvailSms(2): [List(1pcs): [ 23]],
                                ........AvailGrades(3): [List(2pcs): [ 5, 5]],
                                ........OpMode(10): [1],
                                ........PgId(11): [1],
                                ........SubStates4(16): [pn]
                                ......]
                                ....}
                                ..]
                                }
2020-02-06 03:20:14.820803 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC0069F0
2020-02-06 03:20:14.821803 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC010530
2020-02-06 03:20:14.822803 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC011400
2020-02-06 03:20:14.823803 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC006CC0
2020-02-06 03:20:14.823803 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC010E60
2020-02-06 03:20:14.824803 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC015230
2020-02-06 03:20:15.520803 D system Th{6304} [corba/cbmodule_srv_impl.cpp:955] ping_clients() Begin pinging session: 3458430551181654012
2020-02-06 03:20:15.520803 D system Th{6304} [corba/cbmodule_srv_impl.cpp:957] ping_clients() Session: 3458430551181654012ping ok
2020-02-06 03:20:15.520803 I system Th{6304} [corba/cbmodule_srv_impl.cpp:966] ping_clients() rc=0
2020-02-06 03:20:16.020803 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:20:16.020803 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:20:16.020803 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:20:16.027803 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:20:16.060803 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:20:16.060803 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:20:16.061803 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:20:16.070803 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:20:16.760803 D system Th{6327} [corba/pay_service_impl.cpp:701] run() Before NCTService ping ...
2020-02-06 03:20:16.760803 D system Th{6327} [corba/pay_service_impl.cpp:719] run() NCTService ping ok
2020-02-06 03:20:17.005803 D trk Th{6366} [io/src/timer_wrap.cpp:272] handleEvent()  ptr: 0x00007FFA0C009220 fired
2020-02-06 03:20:17.006803 D trk Th{6366} [doms/src/trk_driver/apc.cpp:118] sendMessage() Doms. Sending heartbeat message
2020-02-06 03:20:17.006803 D trk Th{6366} [io/src/timer_wrap.cpp:245] setSingleShot()  ptr: 0x00007FFA0C009220 10000 ms
2020-02-06 03:20:18.027803 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:20:18.027803 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:20:18.027803 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:20:18.035803 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:20:18.070803 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:20:18.071803 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:20:18.071803 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:20:18.080803 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:20:18.521803 D system Th{6304} [corba/cbmodule_srv_impl.cpp:955] ping_clients() Begin pinging session: 3458430551181654012
2020-02-06 03:20:18.521803 D system Th{6304} [corba/cbmodule_srv_impl.cpp:957] ping_clients() Session: 3458430551181654012ping ok
2020-02-06 03:20:18.521803 I system Th{6304} [corba/cbmodule_srv_impl.cpp:966] ping_clients() rc=0
2020-02-06 03:20:19.042803 D trk Th{6297} [doms/src/trk_driver/apc.cpp:118] sendMessage() Doms. Sending heartbeat message
2020-02-06 03:20:19.317803 D system Th{6312} [corba/sale_server_tms_watcher.cpp:112] run() TMSWatcher poll
2020-02-06 03:20:19.317803 D system Th{23087} [corba/rests_server.cpp:204] db_resync_() Time to db-resync can rests doesn't came yet. Last sync was: 39981 msec ago
2020-02-06 03:20:19.317803 D system Th{23087} [corba/rests_server.cpp:287] get_all_data_locked()  push to map= vol=8387.940 min_book_rest=750.000 mass=6337.800 first=1 petrol=1000054 petrol_name=GD100(АИ-100)
2020-02-06 03:20:19.317803 D system Th{23087} [corba/rests_server.cpp:287] get_all_data_locked()  push to map= vol=12311.630 min_book_rest=747.000 mass=8912.378 first=2 petrol=1000003 petrol_name=GD95(АИ-95)
2020-02-06 03:20:19.317803 D system Th{23087} [corba/rests_server.cpp:287] get_all_data_locked()  push to map= vol=25725.210 min_book_rest=2453.000 mass=-4221.601 first=3 petrol=1000081 petrol_name=АИ-95(АИ-95)
2020-02-06 03:20:19.317803 D system Th{23087} [corba/rests_server.cpp:287] get_all_data_locked()  push to map= vol=22362.340 min_book_rest=1672.000 mass=-1639.507 first=4 petrol=1000033 petrol_name=АИ-92(АИ-92)
2020-02-06 03:20:19.317803 D system Th{23087} [corba/rests_server.cpp:287] get_all_data_locked()  push to map= vol=19130.610 min_book_rest=1645.000 mass=5857.970 first=5 petrol=1000051 petrol_name=ДТОПТИ(ДТ-З)
2020-02-06 03:20:19.317803 D system Th{23087} [corba/rests_server.cpp:287] get_all_data_locked()  push to map= vol=25980.110 min_book_rest=2365.000 mass=11394.182 first=6 petrol=1000051 petrol_name=ДТОПТИ(ДТ-З)
2020-02-06 03:20:19.317803 D system Th{23087} [corba/rests_server.cpp:204] db_resync_() Time to db-resync can rests doesn't came yet. Last sync was: 39981 msec ago
2020-02-06 03:20:19.317803 D system Th{23087} [corba/rests_server.cpp:95] BookRestCaller()  acc_vol2=7510.680 vol=8387.940 mbr=750.000
2020-02-06 03:20:19.317803 D system Th{23087} [corba/rests_server.cpp:204] db_resync_() Time to db-resync can rests doesn't came yet. Last sync was: 39981 msec ago
2020-02-06 03:20:19.317803 D system Th{23087} [corba/rests_server.cpp:95] BookRestCaller()  acc_vol2=11110.980 vol=12311.630 mbr=747.000
2020-02-06 03:20:19.317803 D system Th{23087} [corba/rests_server.cpp:204] db_resync_() Time to db-resync can rests doesn't came yet. Last sync was: 39981 msec ago
2020-02-06 03:20:19.317803 D system Th{23087} [corba/rests_server.cpp:95] BookRestCaller()  acc_vol2=22138.100 vol=25725.210 mbr=2453.000
2020-02-06 03:20:19.317803 D system Th{23087} [corba/rests_server.cpp:204] db_resync_() Time to db-resync can rests doesn't came yet. Last sync was: 39981 msec ago
2020-02-06 03:20:19.317803 D system Th{23087} [corba/rests_server.cpp:95] BookRestCaller()  acc_vol2=19442.280 vol=22362.340 mbr=1672.000
2020-02-06 03:20:19.317803 D system Th{23087} [corba/rests_server.cpp:204] db_resync_() Time to db-resync can rests doesn't came yet. Last sync was: 39981 msec ago
2020-02-06 03:20:19.317803 D system Th{23087} [corba/rests_server.cpp:95] BookRestCaller()  acc_vol2=16468.020 vol=19130.610 mbr=1645.000
2020-02-06 03:20:19.317803 D system Th{23087} [corba/rests_server.cpp:204] db_resync_() Time to db-resync can rests doesn't came yet. Last sync was: 39981 msec ago
2020-02-06 03:20:19.317803 D system Th{23087} [corba/rests_server.cpp:95] BookRestCaller()  acc_vol2=22323.160 vol=25980.110 mbr=2365.000
2020-02-06 03:20:20.035803 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:20:20.035803 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:20:20.035803 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:20:20.042803 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:20:20.080803 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:20:20.081803 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:20:20.081803 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:20:20.090803 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:20:21.522803 D system Th{6304} [corba/cbmodule_srv_impl.cpp:955] ping_clients() Begin pinging session: 3458430551181654012
2020-02-06 03:20:21.522803 D system Th{6304} [corba/cbmodule_srv_impl.cpp:957] ping_clients() Session: 3458430551181654012ping ok
2020-02-06 03:20:21.522803 I system Th{6304} [corba/cbmodule_srv_impl.cpp:966] ping_clients() rc=0
2020-02-06 03:20:21.760803 D system Th{6327} [corba/pay_service_impl.cpp:701] run() Before NCTService ping ...
2020-02-06 03:20:21.760803 D system Th{6327} [corba/pay_service_impl.cpp:719] run() NCTService ping ok
2020-02-06 03:20:22.042803 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:20:22.043803 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:20:22.043803 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:20:22.050803 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:20:22.091803 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:20:22.091803 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:20:22.091803 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:20:22.100803 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:20:24.050804 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:20:24.050804 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:20:24.050804 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:20:24.057804 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:20:24.100804 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:20:24.100804 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:20:24.100804 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:20:24.110804 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:20:24.523804 D system Th{6304} [corba/cbmodule_srv_impl.cpp:955] ping_clients() Begin pinging session: 3458430551181654012
2020-02-06 03:20:24.523804 D system Th{6304} [corba/cbmodule_srv_impl.cpp:957] ping_clients() Session: 3458430551181654012ping ok
2020-02-06 03:20:24.523804 I system Th{6304} [corba/cbmodule_srv_impl.cpp:966] ping_clients() rc=0
2020-02-06 03:20:25.194804 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9B4182190
2020-02-06 03:20:25.195804 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC0069F0
2020-02-06 03:20:25.196804 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC010530
2020-02-06 03:20:25.196804 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC011400
2020-02-06 03:20:25.197804 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC006CC0
2020-02-06 03:20:25.198804 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC010E60
2020-02-06 03:20:26.057804 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:20:26.058804 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:20:26.058804 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:20:26.065804 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:20:26.110804 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:20:26.110804 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:20:26.111804 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:20:26.120804 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:20:26.761804 D system Th{6327} [corba/pay_service_impl.cpp:701] run() Before NCTService ping ...
2020-02-06 03:20:26.761804 D system Th{6327} [corba/pay_service_impl.cpp:719] run() NCTService ping ok
2020-02-06 03:20:27.006804 D trk Th{6366} [io/src/timer_wrap.cpp:272] handleEvent()  ptr: 0x00007FFA0C009220 fired
2020-02-06 03:20:27.006804 D trk Th{6366} [doms/src/trk_driver/apc.cpp:118] sendMessage() Doms. Sending heartbeat message
2020-02-06 03:20:27.006804 D trk Th{6366} [io/src/timer_wrap.cpp:245] setSingleShot()  ptr: 0x00007FFA0C009220 10000 ms
2020-02-06 03:20:27.523804 D system Th{6304} [corba/cbmodule_srv_impl.cpp:955] ping_clients() Begin pinging session: 3458430551181654012
2020-02-06 03:20:27.524804 D system Th{6304} [corba/cbmodule_srv_impl.cpp:957] ping_clients() Session: 3458430551181654012ping ok
2020-02-06 03:20:27.524804 I system Th{6304} [corba/cbmodule_srv_impl.cpp:966] ping_clients() rc=0
2020-02-06 03:20:28.065804 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:20:28.065804 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:20:28.065804 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:20:28.072804 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:20:28.120804 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:20:28.121804 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:20:28.121804 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:20:28.130804 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:20:29.248804 D trk Th{6297} [doms/src/trk_driver/apc.cpp:118] sendMessage() Doms. Sending heartbeat message
2020-02-06 03:20:30.073804 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:20:30.073804 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:20:30.073804 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:20:30.080804 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:20:30.130804 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:20:30.130804 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:20:30.131804 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:20:30.140804 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:20:30.524804 D system Th{6304} [corba/cbmodule_srv_impl.cpp:955] ping_clients() Begin pinging session: 3458430551181654012
2020-02-06 03:20:30.525804 D system Th{6304} [corba/cbmodule_srv_impl.cpp:957] ping_clients() Session: 3458430551181654012ping ok
2020-02-06 03:20:30.525804 I system Th{6304} [corba/cbmodule_srv_impl.cpp:966] ping_clients() rc=0
2020-02-06 03:20:31.761804 D system Th{6327} [corba/pay_service_impl.cpp:701] run() Before NCTService ping ...
2020-02-06 03:20:31.761804 D system Th{6327} [corba/pay_service_impl.cpp:719] run() NCTService ping ok
2020-02-06 03:20:32.080804 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:20:32.080804 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:20:32.080804 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:20:32.087804 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:20:32.140804 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:20:32.140804 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:20:32.140804 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:20:32.149804 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:20:33.525804 D system Th{6304} [corba/cbmodule_srv_impl.cpp:955] ping_clients() Begin pinging session: 3458430551181654012
2020-02-06 03:20:33.526804 D system Th{6304} [corba/cbmodule_srv_impl.cpp:957] ping_clients() Session: 3458430551181654012ping ok
2020-02-06 03:20:33.526804 I system Th{6304} [corba/cbmodule_srv_impl.cpp:966] ping_clients() rc=0
2020-02-06 03:20:34.087804 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:20:34.087804 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:20:34.087804 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:20:34.094804 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:20:34.149804 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:20:34.150804 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:20:34.150804 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:20:34.159804 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:20:35.551804 D trk Th{6297} [doms/src/trk_driver/apc.cpp:115] sendMessage() Doms. Sending a message: FpStatus3::Req: { fpId: 0 }
2020-02-06 03:20:35.552804 D trk Th{6297} [doms/src/trk_driver/apc.cpp:116] sendMessage() Doms. Message dump: 01 15 03 00
2020-02-06 03:20:35.570804 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC015230
2020-02-06 03:20:35.570804 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9B4182190
2020-02-06 03:20:35.571804 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC0069F0
2020-02-06 03:20:35.571804 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC010530
2020-02-06 03:20:35.571804 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC011400
2020-02-06 03:20:35.571804 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC006CC0
2020-02-06 03:20:35.598804 D trk Th{6297} [doms/src/trk_driver/apc.cpp:184] readAnswer() Doms. Message decoded: 01 FE 00 95 03 08 1F 01 23 02 56 00 00 06 01 01 01 02 02 01 23 03 06 05 01 02 03 04 05 10 01 01 11 01 01 16 01 00 1F 02 23 02 56 00 00 06 01 01 01 02 02 01 23 03 06 05 01 02 03 04 05 10 01 01 11 01 01 16 01 00 1F 03 23 02 56 00 00 06 01 01 01 02 02 01 23 03 06 05 01 02 03 04 05 10 01 01 11 01 01 16 01 00 1F 04 23 02 56 00 00 06 01 01 01 02 02 01 23 03 06 05 01 02 03 04 05 10 01 01 11 01 01 16 01 00 1F 05 23 02 56 00 00 06 01 01 01 02 02 01 23 03 06 05 01 02 03 04 05 10 01 01 11 01 01 16 01 00 1F 06 23 02 56 00 00 06 01 01 01 02 02 01 23 03 06 05 01 02 03 04 05 10 01 01 11 01 01 16 01 00 1B 07 23 02 56 00 00 06 01 01 01 02 02 01 23 03 02 01 05 10 01 01 11 01 01 16 01 00 1C 08 23 02 56 00 00 06 01 01 01 02 02 01 23 03 03 02 05 05 10 01 01 11 01 01 16 01 00
2020-02-06 03:20:35.598804 D trk Th{6297} [doms/src/trk_driver/apc.cpp:91] createMessage() Doms. Message recv: MultiMessage::Reply: { 
                                ..m_repExtMsgCode: 0x0095
                                ..m_repMsgSubc: 0x03
                                ..m_list (8pcs): [
                                ....FpStatus3::Reply: { 
                                ......fpId: 1
                                ......activeSmId: 23
                                ......mainState: FMS_Idle(2)
                                ......subStates: lVOsBeAp
                                ......lockId: 0
                                ......gradeId: 0
                                ......supStPars: FpSupStatusPars(6pcs): [ 
                                ........SubStates2(1): [T__ml__s],
                                ........AvailSms(2): [List(1pcs): [ 23]],
                                ........AvailGrades(3): [List(5pcs): [ 1, 2, 3, 4, 5]],
                                ........OpMode(10): [1],
                                ........PgId(11): [1],
                                ........SubStates4(16): [pn]
                                ......]
                                ....},
                                ....FpStatus3::Reply: { 
                                ......fpId: 2
                                ......activeSmId: 23
                                ......mainState: FMS_Idle(2)
                                ......subStates: lVOsBeAp
                                ......lockId: 0
                                ......gradeId: 0
                                ......supStPars: FpSupStatusPars(6pcs): [ 
                                ........SubStates2(1): [T__ml__s],
                                ........AvailSms(2): [List(1pcs): [ 23]],
                                ........AvailGrades(3): [List(5pcs): [ 1, 2, 3, 4, 5]],
                                ........OpMode(10): [1],
                                ........PgId(11): [1],
                                ........SubStates4(16): [pn]
                                ......]
                                ....},
                                ....FpStatus3::Reply: { 
                                ......fpId: 3
                                ......activeSmId: 23
                                ......mainState: FMS_Idle(2)
                                ......subStates: lVOsBeAp
                                ......lockId: 0
                                ......gradeId: 0
                                ......supStPars: FpSupStatusPars(6pcs): [ 
                                ........SubStates2(1): [T__ml__s],
                                ........AvailSms(2): [List(1pcs): [ 23]],
                                ........AvailGrades(3): [List(5pcs): [ 1, 2, 3, 4, 5]],
                                ........OpMode(10): [1],
                                ........PgId(11): [1],
                                ........SubStates4(16): [pn]
                                ......]
                                ....},
                                ....FpStatus3::Reply: { 
                                ......fpId: 4
                                ......activeSmId: 23
                                ......mainState: FMS_Idle(2)
                                ......subStates: lVOsBeAp
                                ......lockId: 0
                                ......gradeId: 0
                                ......supStPars: FpSupStatusPars(6pcs): [ 
                                ........SubStates2(1): [T__ml__s],
                                ........AvailSms(2): [List(1pcs): [ 23]],
                                ........AvailGrades(3): [List(5pcs): [ 1, 2, 3, 4, 5]],
                                ........OpMode(10): [1],
                                ........PgId(11): [1],
                                ........SubStates4(16): [pn]
                                ......]
                                ....},
                                ....FpStatus3::Reply: { 
                                ......fpId: 5
                                ......activeSmId: 23
                                ......mainState: FMS_Idle(2)
                                ......subStates: lVOsBeAp
                                ......lockId: 0
                                ......gradeId: 0
                                ......supStPars: FpSupStatusPars(6pcs): [ 
                                ........SubStates2(1): [T__ml__s],
                                ........AvailSms(2): [List(1pcs): [ 23]],
                                ........AvailGrades(3): [List(5pcs): [ 1, 2, 3, 4, 5]],
                                ........OpMode(10): [1],
                                ........PgId(11): [1],
                                ........SubStates4(16): [pn]
                                ......]
                                ....},
                                ....FpStatus3::Reply: { 
                                ......fpId: 6
                                ......activeSmId: 23
                                ......mainState: FMS_Idle(2)
                                ......subStates: lVOsBeAp
                                ......lockId: 0
                                ......gradeId: 0
                                ......supStPars: FpSupStatusPars(6pcs): [ 
                                ........SubStates2(1): [T__ml__s],
                                ........AvailSms(2): [List(1pcs): [ 23]],
                                ........AvailGrades(3): [List(5pcs): [ 1, 2, 3, 4, 5]],
                                ........OpMode(10): [1],
                                ........PgId(11): [1],
                                ........SubStates4(16): [pn]
                                ......]
                                ....},
                                ....FpStatus3::Reply: { 
                                ......fpId: 7
                                ......activeSmId: 23
                                ......mainState: FMS_Idle(2)
                                ......subStates: lVOsBeAp
                                ......lockId: 0
                                ......gradeId: 0
                                ......supStPars: FpSupStatusPars(6pcs): [ 
                                ........SubStates2(1): [T__ml__s],
                                ........AvailSms(2): [List(1pcs): [ 23]],
                                ........AvailGrades(3): [List(1pcs): [ 5]],
                                ........OpMode(10): [1],
                                ........PgId(11): [1],
                                ........SubStates4(16): [pn]
                                ......]
                                ....},
                                ....FpStatus3::Reply: { 
                                ......fpId: 8
                                ......activeSmId: 23
                                ......mainState: FMS_Idle(2)
                                ......subStates: lVOsBeAp
                                ......lockId: 0
                                ......gradeId: 0
                                ......supStPars: FpSupStatusPars(6pcs): [ 
                                ........SubStates2(1): [T__ml__s],
                                ........AvailSms(2): [List(1pcs): [ 23]],
                                ........AvailGrades(3): [List(2pcs): [ 5, 5]],
                                ........OpMode(10): [1],
                                ........PgId(11): [1],
                                ........SubStates4(16): [pn]
                                ......]
                                ....}
                                ..]
                                }
2020-02-06 03:20:36.094804 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:20:36.094804 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:20:36.094804 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:20:36.102804 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:20:36.159804 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:20:36.159804 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:20:36.159804 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:20:36.169804 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:20:36.526804 D system Th{6304} [corba/cbmodule_srv_impl.cpp:955] ping_clients() Begin pinging session: 3458430551181654012
2020-02-06 03:20:36.526804 D system Th{6304} [corba/cbmodule_srv_impl.cpp:957] ping_clients() Session: 3458430551181654012ping ok
2020-02-06 03:20:36.526804 I system Th{6304} [corba/cbmodule_srv_impl.cpp:966] ping_clients() rc=0
2020-02-06 03:20:36.761804 D system Th{6327} [corba/pay_service_impl.cpp:701] run() Before NCTService ping ...
2020-02-06 03:20:36.761804 D system Th{6327} [corba/pay_service_impl.cpp:719] run() NCTService ping ok
2020-02-06 03:20:37.006804 D trk Th{6366} [io/src/timer_wrap.cpp:272] handleEvent()  ptr: 0x00007FFA0C009220 fired
2020-02-06 03:20:37.006804 D trk Th{6366} [doms/src/trk_driver/apc.cpp:118] sendMessage() Doms. Sending heartbeat message
2020-02-06 03:20:37.006804 D trk Th{6366} [io/src/timer_wrap.cpp:245] setSingleShot()  ptr: 0x00007FFA0C009220 10000 ms
2020-02-06 03:20:38.102804 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:20:38.102804 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:20:38.102804 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:20:38.109804 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:20:38.169804 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:20:38.169804 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:20:38.169804 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:20:38.178804 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:20:39.200804 D trk Th{6297} [doms/src/trk_driver/apc.cpp:118] sendMessage() Doms. Sending heartbeat message
2020-02-06 03:20:39.317804 D system Th{6312} [corba/sale_server_tms_watcher.cpp:112] run() TMSWatcher poll
2020-02-06 03:20:39.317804 D system Th{6312} [corba/sale_server_tms_watcher.cpp:123] run() Продляю подписку к сервису уровмемеров
2020-02-06 03:20:39.317804 D system Th{23256} [corba/rests_server.cpp:204] db_resync_() Time to db-resync can rests doesn't came yet. Last sync was: 59981 msec ago
2020-02-06 03:20:39.317804 D system Th{23256} [corba/rests_server.cpp:287] get_all_data_locked()  push to map= vol=8387.940 min_book_rest=750.000 mass=6337.800 first=1 petrol=1000054 petrol_name=GD100(АИ-100)
2020-02-06 03:20:39.317804 D system Th{23256} [corba/rests_server.cpp:287] get_all_data_locked()  push to map= vol=12311.630 min_book_rest=747.000 mass=8912.378 first=2 petrol=1000003 petrol_name=GD95(АИ-95)
2020-02-06 03:20:39.317804 D system Th{23256} [corba/rests_server.cpp:287] get_all_data_locked()  push to map= vol=25725.210 min_book_rest=2453.000 mass=-4221.601 first=3 petrol=1000081 petrol_name=АИ-95(АИ-95)
2020-02-06 03:20:39.317804 D system Th{23256} [corba/rests_server.cpp:287] get_all_data_locked()  push to map= vol=22362.340 min_book_rest=1672.000 mass=-1639.507 first=4 petrol=1000033 petrol_name=АИ-92(АИ-92)
2020-02-06 03:20:39.317804 D system Th{23256} [corba/rests_server.cpp:287] get_all_data_locked()  push to map= vol=19130.610 min_book_rest=1645.000 mass=5857.970 first=5 petrol=1000051 petrol_name=ДТОПТИ(ДТ-З)
2020-02-06 03:20:39.317804 D system Th{23256} [corba/rests_server.cpp:287] get_all_data_locked()  push to map= vol=25980.110 min_book_rest=2365.000 mass=11394.182 first=6 petrol=1000051 petrol_name=ДТОПТИ(ДТ-З)
2020-02-06 03:20:39.317804 D system Th{23256} [corba/rests_server.cpp:204] db_resync_() Time to db-resync can rests doesn't came yet. Last sync was: 59981 msec ago
2020-02-06 03:20:39.317804 D system Th{23256} [corba/rests_server.cpp:95] BookRestCaller()  acc_vol2=7510.680 vol=8387.940 mbr=750.000
2020-02-06 03:20:39.317804 D system Th{23256} [corba/rests_server.cpp:204] db_resync_() Time to db-resync can rests doesn't came yet. Last sync was: 59981 msec ago
2020-02-06 03:20:39.317804 D system Th{23256} [corba/rests_server.cpp:95] BookRestCaller()  acc_vol2=11110.980 vol=12311.630 mbr=747.000
2020-02-06 03:20:39.317804 D system Th{23256} [corba/rests_server.cpp:204] db_resync_() Time to db-resync can rests doesn't came yet. Last sync was: 59981 msec ago
2020-02-06 03:20:39.317804 D system Th{23256} [corba/rests_server.cpp:95] BookRestCaller()  acc_vol2=22138.100 vol=25725.210 mbr=2453.000
2020-02-06 03:20:39.317804 D system Th{23256} [corba/rests_server.cpp:204] db_resync_() Time to db-resync can rests doesn't came yet. Last sync was: 59981 msec ago
2020-02-06 03:20:39.317804 D system Th{23256} [corba/rests_server.cpp:95] BookRestCaller()  acc_vol2=19442.280 vol=22362.340 mbr=1672.000
2020-02-06 03:20:39.317804 D system Th{23256} [corba/rests_server.cpp:204] db_resync_() Time to db-resync can rests doesn't came yet. Last sync was: 59981 msec ago
2020-02-06 03:20:39.317804 D system Th{23256} [corba/rests_server.cpp:95] BookRestCaller()  acc_vol2=16468.020 vol=19130.610 mbr=1645.000
2020-02-06 03:20:39.317804 D system Th{23256} [corba/rests_server.cpp:204] db_resync_() Time to db-resync can rests doesn't came yet. Last sync was: 59981 msec ago
2020-02-06 03:20:39.317804 D system Th{23256} [corba/rests_server.cpp:95] BookRestCaller()  acc_vol2=22323.160 vol=25980.110 mbr=2365.000
2020-02-06 03:20:39.527804 D system Th{6304} [corba/cbmodule_srv_impl.cpp:955] ping_clients() Begin pinging session: 3458430551181654012
2020-02-06 03:20:39.527804 D system Th{6304} [corba/cbmodule_srv_impl.cpp:957] ping_clients() Session: 3458430551181654012ping ok
2020-02-06 03:20:39.527804 I system Th{6304} [corba/cbmodule_srv_impl.cpp:966] ping_clients() rc=0
2020-02-06 03:20:40.109804 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:20:40.109804 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:20:40.110804 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:20:40.117804 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:20:40.178804 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:20:40.178804 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:20:40.178804 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:20:40.187804 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:20:41.800804 D system Th{6327} [corba/pay_service_impl.cpp:701] run() Before NCTService ping ...
2020-02-06 03:20:41.801804 D system Th{6327} [corba/pay_service_impl.cpp:719] run() NCTService ping ok
2020-02-06 03:20:42.117804 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:20:42.117804 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:20:42.117804 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:20:42.124804 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:20:42.188804 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:20:42.188804 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:20:42.188804 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:20:42.197804 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:20:42.527804 D system Th{6304} [corba/cbmodule_srv_impl.cpp:955] ping_clients() Begin pinging session: 3458430551181654012
2020-02-06 03:20:42.528804 D system Th{6304} [corba/cbmodule_srv_impl.cpp:957] ping_clients() Session: 3458430551181654012ping ok
2020-02-06 03:20:42.528804 I system Th{6304} [corba/cbmodule_srv_impl.cpp:966] ping_clients() rc=0
2020-02-06 03:20:44.124805 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:20:44.124805 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:20:44.125805 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:20:44.132805 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:20:44.197805 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:20:44.197805 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:20:44.197805 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:20:44.207805 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:20:45.528805 D system Th{6304} [corba/cbmodule_srv_impl.cpp:955] ping_clients() Begin pinging session: 3458430551181654012
2020-02-06 03:20:45.529805 D system Th{6304} [corba/cbmodule_srv_impl.cpp:957] ping_clients() Session: 3458430551181654012ping ok
2020-02-06 03:20:45.529805 I system Th{6304} [corba/cbmodule_srv_impl.cpp:966] ping_clients() rc=0
2020-02-06 03:20:45.951805 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC010E60
2020-02-06 03:20:45.952805 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC015230
2020-02-06 03:20:45.953805 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9B4182190
2020-02-06 03:20:45.954805 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC0069F0
2020-02-06 03:20:45.955805 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC010530
2020-02-06 03:20:45.955805 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC011400
2020-02-06 03:20:46.132805 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:20:46.132805 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:20:46.132805 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:20:46.153805 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:20:46.207805 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:20:46.207805 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:20:46.207805 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:20:46.216805 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:20:46.837805 D system Th{6327} [corba/pay_service_impl.cpp:701] run() Before NCTService ping ...
2020-02-06 03:20:46.837805 D system Th{6327} [corba/pay_service_impl.cpp:719] run() NCTService ping ok
2020-02-06 03:20:47.006805 D trk Th{6366} [io/src/timer_wrap.cpp:272] handleEvent()  ptr: 0x00007FFA0C009220 fired
2020-02-06 03:20:47.006805 D trk Th{6366} [doms/src/trk_driver/apc.cpp:118] sendMessage() Doms. Sending heartbeat message
2020-02-06 03:20:47.007805 D trk Th{6366} [io/src/timer_wrap.cpp:245] setSingleShot()  ptr: 0x00007FFA0C009220 10000 ms
2020-02-06 03:20:48.153805 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:20:48.153805 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:20:48.153805 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:20:48.160805 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:20:48.216805 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:20:48.216805 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:20:48.216805 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:20:48.226805 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:20:48.529805 D system Th{6304} [corba/cbmodule_srv_impl.cpp:955] ping_clients() Begin pinging session: 3458430551181654012
2020-02-06 03:20:48.530805 D system Th{6304} [corba/cbmodule_srv_impl.cpp:957] ping_clients() Session: 3458430551181654012ping ok
2020-02-06 03:20:48.530805 I system Th{6304} [corba/cbmodule_srv_impl.cpp:966] ping_clients() rc=0
2020-02-06 03:20:49.106805 D trk Th{6297} [doms/src/trk_driver/apc.cpp:118] sendMessage() Doms. Sending heartbeat message
2020-02-06 03:20:50.160805 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:20:50.160805 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:20:50.160805 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:20:50.167805 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:20:50.226805 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:20:50.226805 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:20:50.226805 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:20:50.235805 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:20:51.530805 D system Th{6304} [corba/cbmodule_srv_impl.cpp:955] ping_clients() Begin pinging session: 3458430551181654012
2020-02-06 03:20:51.530805 D system Th{6304} [corba/cbmodule_srv_impl.cpp:957] ping_clients() Session: 3458430551181654012ping ok
2020-02-06 03:20:51.530805 I system Th{6304} [corba/cbmodule_srv_impl.cpp:966] ping_clients() rc=0
2020-02-06 03:20:51.892805 D system Th{6327} [corba/pay_service_impl.cpp:701] run() Before NCTService ping ...
2020-02-06 03:20:51.892805 D system Th{6327} [corba/pay_service_impl.cpp:719] run() NCTService ping ok
2020-02-06 03:20:52.168805 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:20:52.168805 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:20:52.168805 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:20:52.175805 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:20:52.236805 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:20:52.236805 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:20:52.236805 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:20:52.245805 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:20:54.175805 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:20:54.175805 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:20:54.175805 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:20:54.182805 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:20:54.245805 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:20:54.246805 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:20:54.246805 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:20:54.255805 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:20:54.531805 D system Th{6304} [corba/cbmodule_srv_impl.cpp:955] ping_clients() Begin pinging session: 3458430551181654012
2020-02-06 03:20:54.531805 D system Th{6304} [corba/cbmodule_srv_impl.cpp:957] ping_clients() Session: 3458430551181654012ping ok
2020-02-06 03:20:54.531805 I system Th{6304} [corba/cbmodule_srv_impl.cpp:966] ping_clients() rc=0
2020-02-06 03:20:56.182805 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:20:56.182805 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:20:56.182805 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:20:56.189805 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:20:56.255805 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:20:56.255805 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:20:56.255805 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:20:56.264805 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:20:56.310805 D trk Th{6297} [doms/src/trk_driver/apc.cpp:115] sendMessage() Doms. Sending a message: FpStatus3::Req: { fpId: 0 }
2020-02-06 03:20:56.310805 D trk Th{6297} [doms/src/trk_driver/apc.cpp:116] sendMessage() Doms. Message dump: 01 15 03 00
2020-02-06 03:20:56.328805 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC006CC0
2020-02-06 03:20:56.329805 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC010E60
2020-02-06 03:20:56.330805 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC015230
2020-02-06 03:20:56.331805 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9B4182190
2020-02-06 03:20:56.332805 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC0069F0
2020-02-06 03:20:56.333805 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC010530
2020-02-06 03:20:56.354805 D trk Th{6297} [doms/src/trk_driver/apc.cpp:184] readAnswer() Doms. Message decoded: 01 FE 00 95 03 08 1F 01 23 02 56 00 00 06 01 01 01 02 02 01 23 03 06 05 01 02 03 04 05 10 01 01 11 01 01 16 01 00 1F 02 23 02 56 00 00 06 01 01 01 02 02 01 23 03 06 05 01 02 03 04 05 10 01 01 11 01 01 16 01 00 1F 03 23 02 56 00 00 06 01 01 01 02 02 01 23 03 06 05 01 02 03 04 05 10 01 01 11 01 01 16 01 00 1F 04 23 02 56 00 00 06 01 01 01 02 02 01 23 03 06 05 01 02 03 04 05 10 01 01 11 01 01 16 01 00 1F 05 23 02 56 00 00 06 01 01 01 02 02 01 23 03 06 05 01 02 03 04 05 10 01 01 11 01 01 16 01 00 1F 06 23 02 56 00 00 06 01 01 01 02 02 01 23 03 06 05 01 02 03 04 05 10 01 01 11 01 01 16 01 00 1B 07 23 02 56 00 00 06 01 01 01 02 02 01 23 03 02 01 05 10 01 01 11 01 01 16 01 00 1C 08 23 02 56 00 00 06 01 01 01 02 02 01 23 03 03 02 05 05 10 01 01 11 01 01 16 01 00
2020-02-06 03:20:56.355805 D trk Th{6297} [doms/src/trk_driver/apc.cpp:91] createMessage() Doms. Message recv: MultiMessage::Reply: { 
                                ..m_repExtMsgCode: 0x0095
                                ..m_repMsgSubc: 0x03
                                ..m_list (8pcs): [
                                ....FpStatus3::Reply: { 
                                ......fpId: 1
                                ......activeSmId: 23
                                ......mainState: FMS_Idle(2)
                                ......subStates: lVOsBeAp
                                ......lockId: 0
                                ......gradeId: 0
                                ......supStPars: FpSupStatusPars(6pcs): [ 
                                ........SubStates2(1): [T__ml__s],
                                ........AvailSms(2): [List(1pcs): [ 23]],
                                ........AvailGrades(3): [List(5pcs): [ 1, 2, 3, 4, 5]],
                                ........OpMode(10): [1],
                                ........PgId(11): [1],
                                ........SubStates4(16): [pn]
                                ......]
                                ....},
                                ....FpStatus3::Reply: { 
                                ......fpId: 2
                                ......activeSmId: 23
                                ......mainState: FMS_Idle(2)
                                ......subStates: lVOsBeAp
                                ......lockId: 0
                                ......gradeId: 0
                                ......supStPars: FpSupStatusPars(6pcs): [ 
                                ........SubStates2(1): [T__ml__s],
                                ........AvailSms(2): [List(1pcs): [ 23]],
                                ........AvailGrades(3): [List(5pcs): [ 1, 2, 3, 4, 5]],
                                ........OpMode(10): [1],
                                ........PgId(11): [1],
                                ........SubStates4(16): [pn]
                                ......]
                                ....},
                                ....FpStatus3::Reply: { 
                                ......fpId: 3
                                ......activeSmId: 23
                                ......mainState: FMS_Idle(2)
                                ......subStates: lVOsBeAp
                                ......lockId: 0
                                ......gradeId: 0
                                ......supStPars: FpSupStatusPars(6pcs): [ 
                                ........SubStates2(1): [T__ml__s],
                                ........AvailSms(2): [List(1pcs): [ 23]],
                                ........AvailGrades(3): [List(5pcs): [ 1, 2, 3, 4, 5]],
                                ........OpMode(10): [1],
                                ........PgId(11): [1],
                                ........SubStates4(16): [pn]
                                ......]
                                ....},
                                ....FpStatus3::Reply: { 
                                ......fpId: 4
                                ......activeSmId: 23
                                ......mainState: FMS_Idle(2)
                                ......subStates: lVOsBeAp
                                ......lockId: 0
                                ......gradeId: 0
                                ......supStPars: FpSupStatusPars(6pcs): [ 
                                ........SubStates2(1): [T__ml__s],
                                ........AvailSms(2): [List(1pcs): [ 23]],
                                ........AvailGrades(3): [List(5pcs): [ 1, 2, 3, 4, 5]],
                                ........OpMode(10): [1],
                                ........PgId(11): [1],
                                ........SubStates4(16): [pn]
                                ......]
                                ....},
                                ....FpStatus3::Reply: { 
                                ......fpId: 5
                                ......activeSmId: 23
                                ......mainState: FMS_Idle(2)
                                ......subStates: lVOsBeAp
                                ......lockId: 0
                                ......gradeId: 0
                                ......supStPars: FpSupStatusPars(6pcs): [ 
                                ........SubStates2(1): [T__ml__s],
                                ........AvailSms(2): [List(1pcs): [ 23]],
                                ........AvailGrades(3): [List(5pcs): [ 1, 2, 3, 4, 5]],
                                ........OpMode(10): [1],
                                ........PgId(11): [1],
                                ........SubStates4(16): [pn]
                                ......]
                                ....},
                                ....FpStatus3::Reply: { 
                                ......fpId: 6
                                ......activeSmId: 23
                                ......mainState: FMS_Idle(2)
                                ......subStates: lVOsBeAp
                                ......lockId: 0
                                ......gradeId: 0
                                ......supStPars: FpSupStatusPars(6pcs): [ 
                                ........SubStates2(1): [T__ml__s],
                                ........AvailSms(2): [List(1pcs): [ 23]],
                                ........AvailGrades(3): [List(5pcs): [ 1, 2, 3, 4, 5]],
                                ........OpMode(10): [1],
                                ........PgId(11): [1],
                                ........SubStates4(16): [pn]
                                ......]
                                ....},
                                ....FpStatus3::Reply: { 
                                ......fpId: 7
                                ......activeSmId: 23
                                ......mainState: FMS_Idle(2)
                                ......subStates: lVOsBeAp
                                ......lockId: 0
                                ......gradeId: 0
                                ......supStPars: FpSupStatusPars(6pcs): [ 
                                ........SubStates2(1): [T__ml__s],
                                ........AvailSms(2): [List(1pcs): [ 23]],
                                ........AvailGrades(3): [List(1pcs): [ 5]],
                                ........OpMode(10): [1],
                                ........PgId(11): [1],
                                ........SubStates4(16): [pn]
                                ......]
                                ....},
                                ....FpStatus3::Reply: { 
                                ......fpId: 8
                                ......activeSmId: 23
                                ......mainState: FMS_Idle(2)
                                ......subStates: lVOsBeAp
                                ......lockId: 0
                                ......gradeId: 0
                                ......supStPars: FpSupStatusPars(6pcs): [ 
                                ........SubStates2(1): [T__ml__s],
                                ........AvailSms(2): [List(1pcs): [ 23]],
                                ........AvailGrades(3): [List(2pcs): [ 5, 5]],
                                ........OpMode(10): [1],
                                ........PgId(11): [1],
                                ........SubStates4(16): [pn]
                                ......]
                                ....}
                                ..]
                                }
2020-02-06 03:20:56.928805 D system Th{6327} [corba/pay_service_impl.cpp:701] run() Before NCTService ping ...
2020-02-06 03:20:56.928805 D system Th{6327} [corba/pay_service_impl.cpp:719] run() NCTService ping ok
2020-02-06 03:20:57.007805 D trk Th{6366} [io/src/timer_wrap.cpp:272] handleEvent()  ptr: 0x00007FFA0C009220 fired
2020-02-06 03:20:57.007805 D trk Th{6366} [doms/src/trk_driver/apc.cpp:118] sendMessage() Doms. Sending heartbeat message
2020-02-06 03:20:57.007805 D trk Th{6366} [io/src/timer_wrap.cpp:245] setSingleShot()  ptr: 0x00007FFA0C009220 10000 ms
2020-02-06 03:20:57.531805 D system Th{6304} [corba/cbmodule_srv_impl.cpp:955] ping_clients() Begin pinging session: 3458430551181654012
2020-02-06 03:20:57.532805 D system Th{6304} [corba/cbmodule_srv_impl.cpp:957] ping_clients() Session: 3458430551181654012ping ok
2020-02-06 03:20:57.532805 I system Th{6304} [corba/cbmodule_srv_impl.cpp:966] ping_clients() rc=0
2020-02-06 03:20:58.189805 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:20:58.189805 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:20:58.189805 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:20:58.197805 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:20:58.265805 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:20:58.265805 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:20:58.265805 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:20:58.274805 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:20:59.056805 D trk Th{6297} [doms/src/trk_driver/apc.cpp:118] sendMessage() Doms. Sending heartbeat message
2020-02-06 03:20:59.317805 D system Th{6312} [corba/sale_server_tms_watcher.cpp:112] run() TMSWatcher poll
2020-02-06 03:20:59.317805 D system Th{23508} [corba/rests_server.cpp:204] db_resync_() Time to db-resync can rests doesn't came yet. Last sync was: 79981 msec ago
2020-02-06 03:20:59.318805 D system Th{23508} [corba/rests_server.cpp:287] get_all_data_locked()  push to map= vol=8387.940 min_book_rest=750.000 mass=6337.800 first=1 petrol=1000054 petrol_name=GD100(АИ-100)
2020-02-06 03:20:59.318805 D system Th{23508} [corba/rests_server.cpp:287] get_all_data_locked()  push to map= vol=12311.630 min_book_rest=747.000 mass=8912.378 first=2 petrol=1000003 petrol_name=GD95(АИ-95)
2020-02-06 03:20:59.318805 D system Th{23508} [corba/rests_server.cpp:287] get_all_data_locked()  push to map= vol=25725.210 min_book_rest=2453.000 mass=-4221.601 first=3 petrol=1000081 petrol_name=АИ-95(АИ-95)
2020-02-06 03:20:59.318805 D system Th{23508} [corba/rests_server.cpp:287] get_all_data_locked()  push to map= vol=22362.340 min_book_rest=1672.000 mass=-1639.507 first=4 petrol=1000033 petrol_name=АИ-92(АИ-92)
2020-02-06 03:20:59.318805 D system Th{23508} [corba/rests_server.cpp:287] get_all_data_locked()  push to map= vol=19130.610 min_book_rest=1645.000 mass=5857.970 first=5 petrol=1000051 petrol_name=ДТОПТИ(ДТ-З)
2020-02-06 03:20:59.318805 D system Th{23508} [corba/rests_server.cpp:287] get_all_data_locked()  push to map= vol=25980.110 min_book_rest=2365.000 mass=11394.182 first=6 petrol=1000051 petrol_name=ДТОПТИ(ДТ-З)
2020-02-06 03:20:59.318805 D system Th{23508} [corba/rests_server.cpp:204] db_resync_() Time to db-resync can rests doesn't came yet. Last sync was: 79982 msec ago
2020-02-06 03:20:59.318805 D system Th{23508} [corba/rests_server.cpp:95] BookRestCaller()  acc_vol2=7510.770 vol=8387.940 mbr=750.000
2020-02-06 03:20:59.318805 D system Th{23508} [corba/rests_server.cpp:204] db_resync_() Time to db-resync can rests doesn't came yet. Last sync was: 79982 msec ago
2020-02-06 03:20:59.318805 D system Th{23508} [corba/rests_server.cpp:95] BookRestCaller()  acc_vol2=11110.990 vol=12311.630 mbr=747.000
2020-02-06 03:20:59.318805 D system Th{23508} [corba/rests_server.cpp:204] db_resync_() Time to db-resync can rests doesn't came yet. Last sync was: 79982 msec ago
2020-02-06 03:20:59.318805 D system Th{23508} [corba/rests_server.cpp:95] BookRestCaller()  acc_vol2=22138.530 vol=25725.210 mbr=2453.000
2020-02-06 03:20:59.318805 D system Th{23508} [corba/rests_server.cpp:204] db_resync_() Time to db-resync can rests doesn't came yet. Last sync was: 79982 msec ago
2020-02-06 03:20:59.318805 D system Th{23508} [corba/rests_server.cpp:95] BookRestCaller()  acc_vol2=19442.080 vol=22362.340 mbr=1672.000
2020-02-06 03:20:59.318805 D system Th{23508} [corba/rests_server.cpp:204] db_resync_() Time to db-resync can rests doesn't came yet. Last sync was: 79982 msec ago
2020-02-06 03:20:59.318805 D system Th{23508} [corba/rests_server.cpp:95] BookRestCaller()  acc_vol2=16468.300 vol=19130.610 mbr=1645.000
2020-02-06 03:20:59.318805 D system Th{23508} [corba/rests_server.cpp:204] db_resync_() Time to db-resync can rests doesn't came yet. Last sync was: 79982 msec ago
2020-02-06 03:20:59.318805 D system Th{23508} [corba/rests_server.cpp:95] BookRestCaller()  acc_vol2=22323.160 vol=25980.110 mbr=2365.000
2020-02-06 03:21:00.197805 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:21:00.197805 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:21:00.197805 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:21:00.204805 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:21:00.274805 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:21:00.275805 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:21:00.275805 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:21:00.284805 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:21:00.532805 D system Th{6304} [corba/cbmodule_srv_impl.cpp:955] ping_clients() Begin pinging session: 3458430551181654012
2020-02-06 03:21:00.533805 D system Th{6304} [corba/cbmodule_srv_impl.cpp:957] ping_clients() Session: 3458430551181654012ping ok
2020-02-06 03:21:00.533805 I system Th{6304} [corba/cbmodule_srv_impl.cpp:966] ping_clients() rc=0
2020-02-06 03:21:01.928805 D system Th{6327} [corba/pay_service_impl.cpp:701] run() Before NCTService ping ...
2020-02-06 03:21:01.929805 D system Th{6327} [corba/pay_service_impl.cpp:719] run() NCTService ping ok
2020-02-06 03:21:02.204805 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:21:02.204805 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:21:02.204805 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:21:02.211805 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:21:02.284805 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:21:02.285805 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:21:02.285805 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:21:02.294805 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:21:03.533805 D system Th{6304} [corba/cbmodule_srv_impl.cpp:955] ping_clients() Begin pinging session: 3458430551181654012
2020-02-06 03:21:03.533805 D system Th{6304} [corba/cbmodule_srv_impl.cpp:957] ping_clients() Session: 3458430551181654012ping ok
2020-02-06 03:21:03.533805 I system Th{6304} [corba/cbmodule_srv_impl.cpp:966] ping_clients() rc=0
2020-02-06 03:21:04.211805 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:21:04.211805 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:21:04.212805 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:21:04.219805 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:21:04.294805 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:21:04.294805 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:21:04.294805 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:21:04.304805 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:21:06.219806 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:21:06.219806 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:21:06.219806 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:21:06.226806 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:21:06.304806 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:21:06.304806 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:21:06.304806 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:21:06.314806 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:21:06.534806 D system Th{6304} [corba/cbmodule_srv_impl.cpp:955] ping_clients() Begin pinging session: 3458430551181654012
2020-02-06 03:21:06.534806 D system Th{6304} [corba/cbmodule_srv_impl.cpp:957] ping_clients() Session: 3458430551181654012ping ok
2020-02-06 03:21:06.534806 I system Th{6304} [corba/cbmodule_srv_impl.cpp:966] ping_clients() rc=0
2020-02-06 03:21:06.746806 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC011400
2020-02-06 03:21:06.763806 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC006CC0
2020-02-06 03:21:06.780806 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC010E60
2020-02-06 03:21:06.796806 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC015230
2020-02-06 03:21:06.813806 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9B4182190
2020-02-06 03:21:06.830806 D system Th{6374} [TMS/TMS_internal.cpp:13] ~TMSTankMeasure() Dtor: 0x00007FF9BC0069F0
2020-02-06 03:21:06.978806 D system Th{6327} [corba/pay_service_impl.cpp:701] run() Before NCTService ping ...
2020-02-06 03:21:06.978806 D system Th{6327} [corba/pay_service_impl.cpp:719] run() NCTService ping ok
2020-02-06 03:21:07.007806 D trk Th{6366} [io/src/timer_wrap.cpp:272] handleEvent()  ptr: 0x00007FFA0C009220 fired
2020-02-06 03:21:07.007806 D trk Th{6366} [doms/src/trk_driver/apc.cpp:118] sendMessage() Doms. Sending heartbeat message
2020-02-06 03:21:07.007806 D trk Th{6366} [io/src/timer_wrap.cpp:245] setSingleShot()  ptr: 0x00007FFA0C009220 10000 ms
2020-02-06 03:21:08.226806 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:21:08.226806 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:21:08.226806 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:21:08.233806 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:21:08.314806 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:21:08.314806 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:21:08.314806 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:21:08.324806 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:21:09.262806 D trk Th{6297} [doms/src/trk_driver/apc.cpp:118] sendMessage() Doms. Sending heartbeat message
2020-02-06 03:21:09.535806 D system Th{6304} [corba/cbmodule_srv_impl.cpp:955] ping_clients() Begin pinging session: 3458430551181654012
2020-02-06 03:21:09.535806 D system Th{6304} [corba/cbmodule_srv_impl.cpp:957] ping_clients() Session: 3458430551181654012ping ok
2020-02-06 03:21:09.535806 I system Th{6304} [corba/cbmodule_srv_impl.cpp:966] ping_clients() rc=0
2020-02-06 03:21:10.233806 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:21:10.233806 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:21:10.233806 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:21:10.240806 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:21:10.324806 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:21:10.324806 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:21:10.324806 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:21:10.333806 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:21:11.978806 D system Th{6327} [corba/pay_service_impl.cpp:701] run() Before NCTService ping ...
2020-02-06 03:21:11.978806 D system Th{6327} [corba/pay_service_impl.cpp:719] run() NCTService ping ok
2020-02-06 03:21:12.240806 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:21:12.240806 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:21:12.241806 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:21:12.248806 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:21:12.333806 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:21:12.333806 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:21:12.333806 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:21:12.343806 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:21:12.535806 D system Th{6304} [corba/cbmodule_srv_impl.cpp:955] ping_clients() Begin pinging session: 3458430551181654012
2020-02-06 03:21:12.536806 D system Th{6304} [corba/cbmodule_srv_impl.cpp:957] ping_clients() Session: 3458430551181654012ping ok
2020-02-06 03:21:12.536806 I system Th{6304} [corba/cbmodule_srv_impl.cpp:966] ping_clients() rc=0
2020-02-06 03:21:14.248806 I sale Th{6305} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:21:14.248806 D sale Th{6305} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=1this data exists:
2020-02-06 03:21:14.248806 I sale Th{6305} [mcs/fr_service.cpp:3185] dump_to_log()  on port:/dev/ttyS0:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103419>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0431390003010723,
                                  regno_str=0004241845056845    ,
                                  last_z_number=45,
                                  current_document=9414,
                                  current_document_fn=8930,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=29}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:21:14.255806 I sale Th{6305} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 03:21:14.343806 I sale Th{6306} [mcs/fr_service.cpp:1026] run() shiftno=NILsstate=SHIFT_CLOSED is_first=0
2020-02-06 03:21:14.343806 D sale Th{6306} [mcs/fr_service.cpp:1037] run() for  FrKeyForWP=2this data exists:
2020-02-06 03:21:14.343806 I sale Th{6306} [mcs/fr_service.cpp:3185] dump_to_log()  on port:rfc2217://10.37.215.179:7220:
                                  with protocol protocol=<ШТРИХ:
                                  all_valid=<11:>
                                  m_z_valid=0>
                                  m_ecrid=1103361>
                                  ecrid_valid=1
                                  m_ecr_last_result={ Error={ code=0,
                                  level=0,
                                  text=}
                                   State={document=CLOSED,
                                   device=WORKABLE,
                                  printer=WORKABLE,
                                  presenter=PRESENTER_UNDEFINED,
                                  shift=CLOSED}
                                  } m_info_valid=1: m_ecr_info={,
                                  protocol=ШТРИХ,
                                  model_name=РР-01Ф,
                                  serial_str=0412170003010722,
                                  regno_str=0004241823050893    ,
                                  last_z_number=44,
                                  current_document=280,
                                  current_document_fn=9881,
                                  inn=7709359770  ,
                                  is_commissioner=0,
                                  tax_systems=mcs::TaxSystemSet=[TS_OSN],
                                  fiscal_count_left=28}Time shift_open=[UNDEFINED][VALID SIGN=1]
2020-02-06 03:21:14.352806 I sale Th{6306} [corba/fr_service_callback.cpp:41] call_allowed() No need to FR-callback to service postpay_delivery_runner. - No FR configured for that service
2020-02-06 10:16:52.665991 E system Th{6604} [fc/main_utils.cpp:29] fc_check_uid() uid=998 euid=998
2020-02-06 10:16:52.790991 I system Th{6604} [fc/main_utils.cpp:43] fc_block() lock file name build</tmp/mcc_server.BLOCK>

2020-02-06 10:16:52.790991 I system Th{6604} [fc/main_utils.cpp:49] fc_block() LOCK file opened </tmp/mcc_server.BLOCK>

2020-02-06 10:16:52.790991 I system Th{6604} [fc/main_utils.cpp:60] fc_block() LOCK file locked </tmp/mcc_server.BLOCK> 

2020-02-06 10:16:52.790991 I system Th{6604} [main/server_main.cpp:509] main() *************************** STARTING SERVER*****************************MCS_PROJECT_RELEASE=rev 24855> omniORB=4.2.2
2020-02-06 10:16:52.790991 I system Th{6604} [main/server_main.cpp:170] tune_signal() RLIMIT_NPROC res=0  rlim_cur=15046 rlim_max=15046>
2020-02-06 10:16:52.790991 I system Th{6604} [main/server_main.cpp:519] main() Каталог спулинга мониторинга задан переменной окружения: /var/spool/statmon/
2020-02-06 10:16:52.791991 I system Th{6604} [corba/sslContext_mcc.cpp:290] test_serts() rc=1
2020-02-06 10:16:52.792991 I system Th{6604} [db_connection/db_connection.cpp:27] g_get_env_qtsql() env var QTSQL_CONNECTION = qtdriver=QPSQL host=msk-cn-351-srv1 port=5432 dbname=mcc_db user=mcs password=station
2020-02-06 10:16:52.797991 I system Th{6604} [db_connection/db_connection.cpp:73] g_ensure_from_oql_db() host=msk-cn-351-srv1== port=5432== dbname=mk_0f56f186_257a_11ea_8394_00505692c775== user=mcs== password=station
2020-02-06 10:16:52.797991 I system Th{6604} [db_connection/db_connection.cpp:79] g_ensure_from_oql_db() HEAD host=msk-cn-351-srv1== port=5432== dbname=mcc_db== user=mcs== password=station
2020-02-06 10:16:52.797991 D sale Th{6604} [dblib/db_start.cpp:56] open_default_database_n() try connect to ODBC: SOURCE=PostgreSQL ANSI, DSN=mk_0f56f186_257a_11ea_8394_00505692c775, PORT=5432, USERNAME=mcs, SERVER_ADDR=msk-cn-351-srv1 PASSWORD=station
2020-02-06 10:16:52.801991 D db Th{6604} [fc/symm_crypt.cpp:16] mcc_set_symm_key() setup key ===<<
                               OrdqaE6rvgiJ8TOK94+svOpgLlI2o900ZGwBfDYZlBzOquJF+zcTbmlz0CYm6klP
                               l9MGRvLAkcK7fhhlNTm2tQ==
                               >>===
2020-02-06 10:16:52.801991 D sale Th{6604} [dblib/db_start.cpp:56] open_default_database_n() try connect to ODBC: SOURCE=PostgreSQL ANSI, DSN=mcc_db, PORT=5432, USERNAME=mcs, SERVER_ADDR=msk-cn-351-srv1 PASSWORD=station
2020-02-06 10:16:53.292991 I user Th{6604} [corba/corba_config_client.cpp:79] init() attempt server connection k=0
2020-02-06 10:16:53.292991 I system Th{6604} [corba/corba_utils.cpp:287] getObjectReference() getObjectReference: client try to do rir
2020-02-06 10:16:53.292991 I system Th{6604} [corba/corba_utils.cpp:319] getObjectReference() getObjectReference: resolved
2020-02-06 10:16:53.292991 E system Th{6604} [corba/corba_utils.cpp:323] getObjectReference() Context not found.
2020-02-06 10:16:53.292991 I user Th{6604} [corba/corba_config_client.cpp:87] init() wanna load config0
2020-02-06 10:16:53.292991 E system Th{6604} [corba/corba_config_client.cpp:168] get_actual() exception catched to separate it
2020-02-06 10:16:54.293991 I user Th{6604} [corba/corba_config_client.cpp:79] init() attempt server connection k=1
2020-02-06 10:16:54.293991 I system Th{6604} [corba/corba_utils.cpp:287] getObjectReference() getObjectReference: client try to do rir
2020-02-06 10:16:54.293991 I system Th{6604} [corba/corba_utils.cpp:319] getObjectReference() getObjectReference: resolved
2020-02-06 10:16:54.293991 E system Th{6604} [corba/corba_utils.cpp:323] getObjectReference() Context not found.
2020-02-06 10:16:54.293991 I user Th{6604} [corba/corba_config_client.cpp:87] init() wanna load config1
2020-02-06 10:16:54.293991 E system Th{6604} [corba/corba_config_client.cpp:168] get_actual() exception catched to separate it
2020-02-06 10:16:55.293991 I user Th{6604} [corba/corba_config_client.cpp:79] init() attempt server connection k=2
2020-02-06 10:16:55.293991 I system Th{6604} [corba/corba_utils.cpp:287] getObjectReference() getObjectReference: client try to do rir
2020-02-06 10:16:55.293991 I system Th{6604} [corba/corba_utils.cpp:319] getObjectReference() getObjectReference: resolved
2020-02-06 10:16:55.293991 E system Th{6604} [corba/corba_utils.cpp:323] getObjectReference() Context not found.
2020-02-06 10:16:55.293991 I user Th{6604} [corba/corba_config_client.cpp:87] init() wanna load config2
2020-02-06 10:16:55.293991 E system Th{6604} [corba/corba_config_client.cpp:168] get_actual() exception catched to separate it
2020-02-06 10:16:56.293991 I user Th{6604} [corba/corba_config_client.cpp:79] init() attempt server connection k=3
2020-02-06 10:16:56.293991 I system Th{6604} [corba/corba_utils.cpp:287] getObjectReference() getObjectReference: client try to do rir
2020-02-06 10:16:56.294991 I system Th{6604} [corba/corba_utils.cpp:319] getObjectReference() getObjectReference: resolved
2020-02-06 10:16:56.294991 E system Th{6604} [corba/corba_utils.cpp:323] getObjectReference() Context not found.
2020-02-06 10:16:56.294991 I user Th{6604} [corba/corba_config_client.cpp:87] init() wanna load config3
2020-02-06 10:16:56.294991 E system Th{6604} [corba/corba_config_client.cpp:168] get_actual() exception catched to separate it
2020-02-06 10:16:57.294991 I user Th{6604} [corba/corba_config_client.cpp:79] init() attempt server connection k=4
2020-02-06 10:16:57.294991 I system Th{6604} [corba/corba_utils.cpp:287] getObjectReference() getObjectReference: client try to do rir
2020-02-06 10:16:57.294991 I system Th{6604} [corba/corba_utils.cpp:319] getObjectReference() getObjectReference: resolved
2020-02-06 10:16:57.294991 E system Th{6604} [corba/corba_utils.cpp:323] getObjectReference() Context not found.
2020-02-06 10:16:57.294991 I user Th{6604} [corba/corba_config_client.cpp:87] init() wanna load config4
2020-02-06 10:16:57.294991 E system Th{6604} [corba/corba_config_client.cpp:168] get_actual() exception catched to separate it
2020-02-06 10:16:58.294991 I user Th{6604} [corba/corba_config_client.cpp:79] init() attempt server connection k=5
2020-02-06 10:16:58.295991 I system Th{6604} [corba/corba_utils.cpp:287] getObjectReference() getObjectReference: client try to do rir
2020-02-06 10:16:58.295991 I system Th{6604} [corba/corba_utils.cpp:319] getObjectReference() getObjectReference: resolved
2020-02-06 10:16:58.295991 E system Th{6604} [corba/corba_utils.cpp:323] getObjectReference() Context not found.
2020-02-06 10:16:58.295991 I user Th{6604} [corba/corba_config_client.cpp:87] init() wanna load config5
2020-02-06 10:16:58.295991 E system Th{6604} [corba/corba_config_client.cpp:168] get_actual() exception catched to separate it
2020-02-06 10:16:59.295992 I user Th{6604} [corba/corba_config_client.cpp:79] init() attempt server connection k=6
2020-02-06 10:16:59.296992 I system Th{6604} [corba/corba_utils.cpp:287] getObjectReference() getObjectReference: client try to do rir
2020-02-06 10:16:59.296992 I system Th{6604} [corba/corba_utils.cpp:319] getObjectReference() getObjectReference: resolved
2020-02-06 10:16:59.296992 I user Th{6604} [corba/corba_config_client.cpp:87] init() wanna load config6
2020-02-06 10:17:01.211992 I user Th{6604} [corba/corba_config_client.cpp:98] init() okay server connection k=6
2020-02-06 10:17:01.211992 D system Th{6604} [main/service_config.h:19] get_service_vector_config() compare cfg<msk-cn-351-srv1 with <msk-cn-351-srv1>
2020-02-06 10:17:01.211992 D system Th{6604} [main/service_config.h:19] get_service_vector_config() compare cfg<msk-cn-351-node2 with <msk-cn-351-srv1>
2020-02-06 10:17:01.211992 D system Th{6604} [main/service_config.h:19] get_service_vector_config() compare cfg<msk-cn-351-node3 with <msk-cn-351-srv1>
2020-02-06 10:17:01.211992 D system Th{6604} [main/service_config.h:19] get_service_vector_config() compare cfg<msk-cn-351-srv1 with <NIL>
2020-02-06 10:17:01.211992 D system Th{6604} [main/service_config.h:19] get_service_vector_config() compare cfg<msk-cn-351-node2 with <NIL>
2020-02-06 10:17:01.211992 D system Th{6604} [main/service_config.h:19] get_service_vector_config() compare cfg<msk-cn-351-node3 with <NIL>
2020-02-06 10:17:01.211992 D system Th{6604} [main/service_config.h:19] get_service_vector_config() compare cfg<msk-cn-351-srv1 with <NIL>
2020-02-06 10:17:01.211992 D system Th{6604} [main/service_config.h:19] get_service_vector_config() compare cfg<msk-cn-351-node2 with <NIL>
2020-02-06 10:17:01.211992 D system Th{6604} [main/service_config.h:19] get_service_vector_config() compare cfg<msk-cn-351-node3 with <NIL>
2020-02-06 10:17:01.211992 D system Th{6604} [main/service_config.h:19] get_service_vector_config() compare cfg<msk-cn-351-srv1 with <NIL>
2020-02-06 10:17:01.211992 D system Th{6604} [main/service_config.h:19] get_service_vector_config() compare cfg<msk-cn-351-node2 with <NIL>
2020-02-06 10:17:01.211992 D system Th{6604} [main/service_config.h:19] get_service_vector_config() compare cfg<msk-cn-351-node3 with <NIL>
2020-02-06 10:17:01.211992 D system Th{6604} [main/service_config.h:19] get_service_vector_config() compare cfg<msk-cn-351-srv1 with <NIL>
2020-02-06 10:17:01.211992 D system Th{6604} [main/service_config.h:19] get_service_vector_config() compare cfg<msk-cn-351-node2 with <NIL>
2020-02-06 10:17:01.211992 D system Th{6604} [main/service_config.h:19] get_service_vector_config() compare cfg<msk-cn-351-node3 with <NIL>
2020-02-06 10:17:01.211992 D system Th{6604} [main/service_config.h:19] get_service_vector_config() compare cfg<msk-cn-351-srv1 with <NIL>
2020-02-06 10:17:01.211992 D system Th{6604} [main/service_config.h:19] get_service_vector_config() compare cfg<msk-cn-351-node2 with <NIL>
2020-02-06 10:17:01.211992 D system Th{6604} [main/service_config.h:19] get_service_vector_config() compare cfg<msk-cn-351-node3 with <NIL>
2020-02-06 10:17:01.211992 D system Th{6604} [main/service_config.h:19] get_service_vector_config() compare cfg<msk-cn-351-srv1 with <NIL>
2020-02-06 10:17:01.211992 D system Th{6604} [main/service_config.h:19] get_service_vector_config() compare cfg<msk-cn-351-node2 with <NIL>
2020-02-06 10:17:01.211992 D system Th{6604} [main/service_config.h:19] get_service_vector_config() compare cfg<msk-cn-351-node3 with <NIL>
2020-02-06 10:17:01.211992 E system Th{6604} [main/service_config.h:60] get_service_config() no configuration found for target service
2020-02-06 10:17:01.211992 I system Th{6604} [main/server_main.cpp:237] load_config() detected gEodConfig=0x00005591AE31A7B0 gMassServiceConfig=0x00005591AE6E2DC0 gNctServiceConfig=0x00005591AE5BBBE0 gScantechServiceConfig=0x00005591AE7F39E0 gInpasServiceConfig=0x0000000000000000
2020-02-06 10:17:01.211992 I user Th{6604} [mcs_types/valuta.cpp:55] init() init valuta
2020-02-06 10:17:01.211992 I system Th{6604} [mcs_types/valuta.cpp:58] init() Current valuta char code: RUB
2020-02-06 10:17:01.212992 D db Th{6604} [dblib/dblib.cpp:1435] execute() SQLStmt::executing SELECT NumCode, Symbol,MinFraction, InCirculation FROM cbo.Valuta WHERE CharCode = ?
2020-02-06 10:17:01.213992 I system Th{6604} [db/db_valuta_data_provider.cpp:37] load() append to valuta info:mcs::Iso4217InfoEx={code=RUB, num=643, symbol=руб, iso4217_fraction=0.010, in_circulation=0.010}
2020-02-06 10:17:01.213992 D db Th{6604} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select id,denomination_value,denomination_type from cbo.valuta_denomination where valuta_CharCode = ?
2020-02-06 10:17:01.213992 I system Th{6604} [db/db_valuta_data_provider.cpp:58] load() append to valuta denomiation:
                                    x_vdid=1
                                    x_vdvl=10.00
                                    x_vddt=0
2020-02-06 10:17:01.213992 I system Th{6604} [db/db_valuta_data_provider.cpp:58] load() append to valuta denomiation:
                                    x_vdid=10
                                    x_vdvl=0.50
                                    x_vddt=1
2020-02-06 10:17:01.213992 I system Th{6604} [db/db_valuta_data_provider.cpp:58] load() append to valuta denomiation:
                                    x_vdid=11
                                    x_vdvl=1.00
                                    x_vddt=1
2020-02-06 10:17:01.213992 I system Th{6604} [db/db_valuta_data_provider.cpp:58] load() append to valuta denomiation:
                                    x_vdid=12
                                    x_vdvl=2.00
                                    x_vddt=1
2020-02-06 10:17:01.213992 I system Th{6604} [db/db_valuta_data_provider.cpp:58] load() append to valuta denomiation:
                                    x_vdid=13
                                    x_vdvl=5.00
                                    x_vddt=1
2020-02-06 10:17:01.213992 I system Th{6604} [db/db_valuta_data_provider.cpp:58] load() append to valuta denomiation:
                                    x_vdid=14
                                    x_vdvl=10.00
                                    x_vddt=1
2020-02-06 10:17:01.213992 I system Th{6604} [db/db_valuta_data_provider.cpp:58] load() append to valuta denomiation:
                                    x_vdid=2
                                    x_vdvl=50.00
                                    x_vddt=0
2020-02-06 10:17:01.213992 I system Th{6604} [db/db_valuta_data_provider.cpp:58] load() append to valuta denomiation:
                                    x_vdid=3
                                    x_vdvl=100.00
                                    x_vddt=0
2020-02-06 10:17:01.213992 I system Th{6604} [db/db_valuta_data_provider.cpp:58] load() append to valuta denomiation:
                                    x_vdid=4
                                    x_vdvl=500.00
                                    x_vddt=0
2020-02-06 10:17:01.213992 I system Th{6604} [db/db_valuta_data_provider.cpp:58] load() append to valuta denomiation:
                                    x_vdid=5
                                    x_vdvl=1000.00
                                    x_vddt=0
2020-02-06 10:17:01.213992 I system Th{6604} [db/db_valuta_data_provider.cpp:58] load() append to valuta denomiation:
                                    x_vdid=6
                                    x_vdvl=5000.00
                                    x_vddt=0
2020-02-06 10:17:01.213992 I system Th{6604} [db/db_valuta_data_provider.cpp:58] load() append to valuta denomiation:
                                    x_vdid=7
                                    x_vdvl=0.01
                                    x_vddt=1
2020-02-06 10:17:01.213992 I system Th{6604} [db/db_valuta_data_provider.cpp:58] load() append to valuta denomiation:
                                    x_vdid=8
                                    x_vdvl=0.05
                                    x_vddt=1
2020-02-06 10:17:01.213992 I system Th{6604} [db/db_valuta_data_provider.cpp:58] load() append to valuta denomiation:
                                    x_vdid=9
                                    x_vdvl=0.10
                                    x_vddt=1
2020-02-06 10:17:01.214992 I system Th{6604} [main/server_main.cpp:589] main() Checking config_db...
2020-02-06 10:17:01.214992 D db Th{6604} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select a.articleid,sa.subarticleid    from azk.mcs_subarticles sa    join azk.mcs_articles a on (a.articleid = sa.articleid and a.external_str_id = (select  ext_id_bonus from cbo.special_articles) ) limit 1
2020-02-06 10:17:01.215992 D db Th{6604} [mcs/db/db_config.cpp:570] _spec_db_load() sa_bonus=1000100 a_bonus=1000099
2020-02-06 10:17:01.215992 D db Th{6604} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select a.articleid,sa.subarticleid    from azk.mcs_subarticles sa    join azk.mcs_articles a on(a.articleid = sa.articleid and a.external_str_id = (select  ext_id_supply from cbo.special_articles) ) limit 1
2020-02-06 10:17:01.216992 D db Th{6604} [mcs/db/db_config.cpp:584] _spec_db_load() sa_supply=1000103 a_supply=1000102
2020-02-06 10:17:01.216992 D db Th{6604} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select a.articleid,sa.subarticleid    from azk.mcs_subarticles sa    join azk.mcs_articles a on(a.articleid = sa.articleid and a.external_str_id = (select  ext_id_voucher from cbo.special_articles) ) limit 1
2020-02-06 10:17:01.216992 D db Th{6604} [mcs/db/db_config.cpp:598] _spec_db_load() sa_voucher=1000106 a_voucher=1000105
2020-02-06 10:17:01.216992 I db Th{6604} [mcs/special_article_ids.cpp:27] init() set g_bonus_article=1000099 g_supply_article=1000102 g_voucher_article=1000105
                               load g_bonus_subarticle=1000100 g_supply_subarticle=1000103 g_voucher_subarticle=1000106
2020-02-06 10:17:01.216992 I system Th{6604} [mcs/hds_fmt.cpp:612] fill_hds_snap_shots() try to analize cans
2020-02-06 10:17:01.216992 D system Th{6604} [mcs/hds_fmt.cpp:486] _next() can tagged name=1>
2020-02-06 10:17:01.216992 I system Th{6604} [mcs/hds_fmt.cpp:489] _next() append j=0-th elem for can=1
2020-02-06 10:17:01.216992 I system Th{6604} [mcs/hds_fmt.cpp:489] _next() append j=1-th elem for can=1
2020-02-06 10:17:01.216992 D system Th{6604} [mcs/hds_fmt.cpp:588] append_branch_with_root() j=0x00005591AE59A4A0 m_g_e_ind=0 m_g_v_ind=1 size=1
2020-02-06 10:17:01.216992 D system Th{6604} [mcs/hds_fmt.cpp:597] append_branch_with_root() j=0x00005591AE59A4A0
2020-02-06 10:17:01.216992 D system Th{6604} [mcs/hds_fmt.cpp:588] append_branch_with_root() j=0x00005591AE757C90 m_g_e_ind=1 m_g_v_ind=2 size=0
2020-02-06 10:17:01.216992 D system Th{6604} [mcs/hds_fmt.cpp:597] append_branch_with_root() j=0x00005591AE757C90
2020-02-06 10:17:01.216992 D system Th{6604} [mcs/hds_fmt.cpp:588] append_branch_with_root() j=0x0000000000000000 m_g_e_ind=2 m_g_v_ind=3 size=0
2020-02-06 10:17:01.216992 D system Th{6604} [mcs/hds_fmt.cpp:597] append_branch_with_root() j=0x0000000000000000
2020-02-06 10:17:01.216992 I system Th{6604} [mcs/hds_fmt.cpp:599] append_branch_with_root() m_verts.size()=3
2020-02-06 10:17:01.216992 D system Th{6604} [mcs/hds_fmt.cpp:486] _next() can tagged name=2>
2020-02-06 10:17:01.216992 I system Th{6604} [mcs/hds_fmt.cpp:489] _next() append j=0-th elem for can=2
2020-02-06 10:17:01.216992 I system Th{6604} [mcs/hds_fmt.cpp:489] _next() append j=1-th elem for can=2
2020-02-06 10:17:01.216992 D system Th{6604} [mcs/hds_fmt.cpp:588] append_branch_with_root() j=0x00005591AE76CC00 m_g_e_ind=2 m_g_v_ind=4 size=1
2020-02-06 10:17:01.216992 D system Th{6604} [mcs/hds_fmt.cpp:597] append_branch_with_root() j=0x00005591AE76CC00
2020-02-06 10:17:01.216992 D system Th{6604} [mcs/hds_fmt.cpp:588] append_branch_with_root() j=0x00005591AE816CE0 m_g_e_ind=3 m_g_v_ind=5 size=0
2020-02-06 10:17:01.216992 D system Th{6604} [mcs/hds_fmt.cpp:597] append_branch_with_root() j=0x00005591AE816CE0
2020-02-06 10:17:01.216992 D system Th{6604} [mcs/hds_fmt.cpp:588] append_branch_with_root() j=0x0000000000000000 m_g_e_ind=4 m_g_v_ind=6 size=0
2020-02-06 10:17:01.216992 D system Th{6604} [mcs/hds_fmt.cpp:597] append_branch_with_root() j=0x0000000000000000
2020-02-06 10:17:01.216992 I system Th{6604} [mcs/hds_fmt.cpp:599] append_branch_with_root() m_verts.size()=6
2020-02-06 10:17:01.216992 D system Th{6604} [mcs/hds_fmt.cpp:486] _next() can tagged name=3>
2020-02-06 10:17:01.216992 I system Th{6604} [mcs/hds_fmt.cpp:489] _next() append j=0-th elem for can=3
2020-02-06 10:17:01.216992 I system Th{6604} [mcs/hds_fmt.cpp:489] _next() append j=1-th elem for can=3
2020-02-06 10:17:01.216992 D system Th{6604} [mcs/hds_fmt.cpp:588] append_branch_with_root() j=0x00005591AE79EDB0 m_g_e_ind=4 m_g_v_ind=7 size=1
2020-02-06 10:17:01.216992 D system Th{6604} [mcs/hds_fmt.cpp:597] append_branch_with_root() j=0x00005591AE79EDB0
2020-02-06 10:17:01.216992 D system Th{6604} [mcs/hds_fmt.cpp:588] append_branch_with_root() j=0x00005591AE8117A0 m_g_e_ind=5 m_g_v_ind=8 size=0
2020-02-06 10:17:01.216992 D system Th{6604} [mcs/hds_fmt.cpp:597] append_branch_with_root() j=0x00005591AE8117A0
2020-02-06 10:17:01.216992 D system Th{6604} [mcs/hds_fmt.cpp:588] append_branch_with_root() j=0x0000000000000000 m_g_e_ind=6 m_g_v_ind=9 size=0
2020-02-06 10:17:01.216992 D system Th{6604} [mcs/hds_fmt.cpp:597] append_branch_with_root() j=0x0000000000000000
2020-02-06 10:17:01.216992 I system Th{6604} [mcs/hds_fmt.cpp:599] append_branch_with_root() m_verts.size()=9
2020-02-06 10:17:01.216992 D system Th{6604} [mcs/hds_fmt.cpp:486] _next() can tagged name=4>
2020-02-06 10:17:01.216992 I system Th{6604} [mcs/hds_fmt.cpp:489] _next() append j=0-th elem for can=4
2020-02-06 10:17:01.216992 I system Th{6604} [mcs/hds_fmt.cpp:489] _next() append j=1-th elem for can=4
2020-02-06 10:17:01.216992 D system Th{6604} [mcs/hds_fmt.cpp:588] append_branch_with_root() j=0x00005591AE783C70 m_g_e_ind=6 m_g_v_ind=10 size=1
2020-02-06 10:17:01.216992 D system Th{6604} [mcs/hds_fmt.cpp:597] append_branch_with_root() j=0x00005591AE783C70
2020-02-06 10:17:01.216992 D system Th{6604} [mcs/hds_fmt.cpp:588] append_branch_with_root() j=0x00005591AE8366B0 m_g_e_ind=7 m_g_v_ind=11 size=0
2020-02-06 10:17:01.216992 D system Th{6604} [mcs/hds_fmt.cpp:597] append_branch_with_root() j=0x00005591AE8366B0
2020-02-06 10:17:01.216992 D system Th{6604} [mcs/hds_fmt.cpp:588] append_branch_with_root() j=0x0000000000000000 m_g_e_ind=8 m_g_v_ind=12 size=0
2020-02-06 10:17:01.216992 D system Th{6604} [mcs/hds_fmt.cpp:597] append_branch_with_root() j=0x0000000000000000
2020-02-06 10:17:01.216992 I system Th{6604} [mcs/hds_fmt.cpp:599] append_branch_with_root() m_verts.size()=12
2020-02-06 10:17:01.216992 D system Th{6604} [mcs/hds_fmt.cpp:486] _next() can tagged name=5>
2020-02-06 10:17:01.216992 I system Th{6604} [mcs/hds_fmt.cpp:489] _next() append j=0-th elem for can=5
2020-02-06 10:17:01.216992 I system Th{6604} [mcs/hds_fmt.cpp:489] _next() append j=1-th elem for can=5
2020-02-06 10:17:01.216992 D system Th{6604} [mcs/hds_fmt.cpp:588] append_branch_with_root() j=0x00005591AE7577B0 m_g_e_ind=8 m_g_v_ind=13 size=1
2020-02-06 10:17:01.216992 D system Th{6604} [mcs/hds_fmt.cpp:597] append_branch_with_root() j=0x00005591AE7577B0
2020-02-06 10:17:01.216992 D system Th{6604} [mcs/hds_fmt.cpp:588] append_branch_with_root() j=0x00005591AE7D8300 m_g_e_ind=9 m_g_v_ind=14 size=0
2020-02-06 10:17:01.216992 D system Th{6604} [mcs/hds_fmt.cpp:597] append_branch_with_root() j=0x00005591AE7D8300
2020-02-06 10:17:01.216992 D system Th{6604} [mcs/hds_fmt.cpp:588] append_branch_with_root() j=0x0000000000000000 m_g_e_ind=10 m_g_v_ind=15 size=0
2020-02-06 10:17:01.216992 D system Th{6604} [mcs/hds_fmt.cpp:597] append_branch_with_root() j=0x0000000000000000
2020-02-06 10:17:01.216992 I system Th{6604} [mcs/hds_fmt.cpp:599] append_branch_with_root() m_verts.size()=15
2020-02-06 10:17:01.216992 D system Th{6604} [mcs/hds_fmt.cpp:486] _next() can tagged name=6>
2020-02-06 10:17:01.216992 I system Th{6604} [mcs/hds_fmt.cpp:489] _next() append j=0-th elem for can=6
2020-02-06 10:17:01.216992 I system Th{6604} [mcs/hds_fmt.cpp:489] _next() append j=1-th elem for can=6
2020-02-06 10:17:01.216992 D system Th{6604} [mcs/hds_fmt.cpp:588] append_branch_with_root() j=0x00005591AE774F30 m_g_e_ind=10 m_g_v_ind=16 size=1
2020-02-06 10:17:01.216992 D system Th{6604} [mcs/hds_fmt.cpp:597] append_branch_with_root() j=0x00005591AE774F30
2020-02-06 10:17:01.216992 D system Th{6604} [mcs/hds_fmt.cpp:588] append_branch_with_root() j=0x00005591AE8184E0 m_g_e_ind=11 m_g_v_ind=17 size=0
2020-02-06 10:17:01.216992 D system Th{6604} [mcs/hds_fmt.cpp:597] append_branch_with_root() j=0x00005591AE8184E0
2020-02-06 10:17:01.216992 D system Th{6604} [mcs/hds_fmt.cpp:588] append_branch_with_root() j=0x0000000000000000 m_g_e_ind=12 m_g_v_ind=18 size=0
2020-02-06 10:17:01.216992 D system Th{6604} [mcs/hds_fmt.cpp:597] append_branch_with_root() j=0x0000000000000000
2020-02-06 10:17:01.216992 I system Th{6604} [mcs/hds_fmt.cpp:599] append_branch_with_root() m_verts.size()=18
2020-02-06 10:17:01.216992 I system Th{6604} [mcs/hds_fmt.cpp:617] fill_hds_snap_shots() try to analize mjs
2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:635] fill_hds_snap_shots() graph(1580973421)=
                                   graph G {
                                   0[ shape=doublecircle label=" i=0;R<1>"];
                                   1[ shape=box label=" i=1;"];
                                   2[ shape=hexagon label=" i=2;"];
                                   3[ shape=doublecircle label=" i=3;R<2>"];
                                   4[ shape=box label=" i=4;"];
                                   5[ shape=hexagon label=" i=5;"];
                                   6[ shape=doublecircle label=" i=6;R<3>"];
                                   7[ shape=box label=" i=7;"];
                                   8[ shape=hexagon label=" i=8;"];
                                   9[ shape=doublecircle label=" i=9;R<4>"];
                                   10[ shape=box label=" i=10;"];
                                   11[ shape=hexagon label=" i=11;"];
                                   12[ shape=doublecircle label=" i=12;R<5>"];
                                   13[ shape=box label=" i=13;"];
                                   14[ shape=hexagon label=" i=14;"];
                                   15[ shape=doublecircle label=" i=15;R<6>"];
                                   16[ shape=box label=" i=16;"];
                                   17[ shape=hexagon label=" i=17;"];
                                   0--1 [label="0"];
                                   0--2 [label="1"];
                                   3--4 [label="2"];
                                   3--5 [label="3"];
                                   6--7 [label="4"];
                                   6--8 [label="5"];
                                   9--10 [label="6"];
                                   9--11 [label="7"];
                                   12--13 [label="8"];
                                   12--14 [label="9"];
                                   15--16 [label="10"];
                                   15--17 [label="11"];
                                   }
                                   

2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:417] is_valid() m_evm.size=0>
2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:651] fill_hds_snap_shots() can skipped graph(1580973421,c=1)=
                                   graph G {
                                   1[ shape=box label=" i=1;"];
                                   2[ shape=hexagon label=" i=2;"];
                                   4[ shape=box label=" i=4;"];
                                   5[ shape=hexagon label=" i=5;"];
                                   7[ shape=box label=" i=7;"];
                                   8[ shape=hexagon label=" i=8;"];
                                   10[ shape=box label=" i=10;"];
                                   11[ shape=hexagon label=" i=11;"];
                                   13[ shape=box label=" i=13;"];
                                   14[ shape=hexagon label=" i=14;"];
                                   16[ shape=box label=" i=16;"];
                                   17[ shape=hexagon label=" i=17;"];
                                   }
                                   

2020-02-06 10:17:01.217992 I system Th{6604} [mcs/hds_fmt.cpp:218] ~HdsVisitor() regnum=18446744073709551615
2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:231] start_vertex() start_vertex > 1
2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:256] discover_vertex() discover_vertex > 1
2020-02-06 10:17:01.217992 E system Th{6604} [mcs/hds_fmt.cpp:285] discover_vertex() trunkpipeline found
2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:231] start_vertex() start_vertex > 2
2020-02-06 10:17:01.217992 I system Th{6604} [mcs/hds_fmt.cpp:348] analiz_previous_region()  found region cn=0pl=1 nk=0 de=0 m_wf=FILT_CANS_SKIP== m_cp=AMPTIR_Deny== 
2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:256] discover_vertex() discover_vertex > 2
2020-02-06 10:17:01.217992 E system Th{6604} [mcs/hds_fmt.cpp:303] discover_vertex() FillingNeck found
2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:231] start_vertex() start_vertex > 4
2020-02-06 10:17:01.217992 I system Th{6604} [mcs/hds_fmt.cpp:348] analiz_previous_region()  found region cn=0pl=0 nk=1 de=0 m_wf=FILT_CANS_SKIP== m_cp=AMPTIR_Deny== 
2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:256] discover_vertex() discover_vertex > 4
2020-02-06 10:17:01.217992 E system Th{6604} [mcs/hds_fmt.cpp:285] discover_vertex() trunkpipeline found
2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:231] start_vertex() start_vertex > 5
2020-02-06 10:17:01.217992 I system Th{6604} [mcs/hds_fmt.cpp:348] analiz_previous_region()  found region cn=0pl=1 nk=0 de=0 m_wf=FILT_CANS_SKIP== m_cp=AMPTIR_Deny== 
2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:256] discover_vertex() discover_vertex > 5
2020-02-06 10:17:01.217992 E system Th{6604} [mcs/hds_fmt.cpp:303] discover_vertex() FillingNeck found
2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:231] start_vertex() start_vertex > 7
2020-02-06 10:17:01.217992 I system Th{6604} [mcs/hds_fmt.cpp:348] analiz_previous_region()  found region cn=0pl=0 nk=1 de=0 m_wf=FILT_CANS_SKIP== m_cp=AMPTIR_Deny== 
2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:256] discover_vertex() discover_vertex > 7
2020-02-06 10:17:01.217992 E system Th{6604} [mcs/hds_fmt.cpp:285] discover_vertex() trunkpipeline found
2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:231] start_vertex() start_vertex > 8
2020-02-06 10:17:01.217992 I system Th{6604} [mcs/hds_fmt.cpp:348] analiz_previous_region()  found region cn=0pl=1 nk=0 de=0 m_wf=FILT_CANS_SKIP== m_cp=AMPTIR_Deny== 
2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:256] discover_vertex() discover_vertex > 8
2020-02-06 10:17:01.217992 E system Th{6604} [mcs/hds_fmt.cpp:303] discover_vertex() FillingNeck found
2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:231] start_vertex() start_vertex > 10
2020-02-06 10:17:01.217992 I system Th{6604} [mcs/hds_fmt.cpp:348] analiz_previous_region()  found region cn=0pl=0 nk=1 de=0 m_wf=FILT_CANS_SKIP== m_cp=AMPTIR_Deny== 
2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:256] discover_vertex() discover_vertex > 10
2020-02-06 10:17:01.217992 E system Th{6604} [mcs/hds_fmt.cpp:285] discover_vertex() trunkpipeline found
2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:231] start_vertex() start_vertex > 11
2020-02-06 10:17:01.217992 I system Th{6604} [mcs/hds_fmt.cpp:348] analiz_previous_region()  found region cn=0pl=1 nk=0 de=0 m_wf=FILT_CANS_SKIP== m_cp=AMPTIR_Deny== 
2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:256] discover_vertex() discover_vertex > 11
2020-02-06 10:17:01.217992 E system Th{6604} [mcs/hds_fmt.cpp:303] discover_vertex() FillingNeck found
2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:231] start_vertex() start_vertex > 13
2020-02-06 10:17:01.217992 I system Th{6604} [mcs/hds_fmt.cpp:348] analiz_previous_region()  found region cn=0pl=0 nk=1 de=0 m_wf=FILT_CANS_SKIP== m_cp=AMPTIR_Deny== 
2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:256] discover_vertex() discover_vertex > 13
2020-02-06 10:17:01.217992 E system Th{6604} [mcs/hds_fmt.cpp:285] discover_vertex() trunkpipeline found
2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:231] start_vertex() start_vertex > 14
2020-02-06 10:17:01.217992 I system Th{6604} [mcs/hds_fmt.cpp:348] analiz_previous_region()  found region cn=0pl=1 nk=0 de=0 m_wf=FILT_CANS_SKIP== m_cp=AMPTIR_Deny== 
2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:256] discover_vertex() discover_vertex > 14
2020-02-06 10:17:01.217992 E system Th{6604} [mcs/hds_fmt.cpp:303] discover_vertex() FillingNeck found
2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:231] start_vertex() start_vertex > 16
2020-02-06 10:17:01.217992 I system Th{6604} [mcs/hds_fmt.cpp:348] analiz_previous_region()  found region cn=0pl=0 nk=1 de=0 m_wf=FILT_CANS_SKIP== m_cp=AMPTIR_Deny== 
2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:256] discover_vertex() discover_vertex > 16
2020-02-06 10:17:01.217992 E system Th{6604} [mcs/hds_fmt.cpp:285] discover_vertex() trunkpipeline found
2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:231] start_vertex() start_vertex > 17
2020-02-06 10:17:01.217992 I system Th{6604} [mcs/hds_fmt.cpp:348] analiz_previous_region()  found region cn=0pl=1 nk=0 de=0 m_wf=FILT_CANS_SKIP== m_cp=AMPTIR_Deny== 
2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:256] discover_vertex() discover_vertex > 17
2020-02-06 10:17:01.217992 E system Th{6604} [mcs/hds_fmt.cpp:303] discover_vertex() FillingNeck found
2020-02-06 10:17:01.217992 I system Th{6604} [mcs/hds_fmt.cpp:218] ~HdsVisitor() regnum=11
2020-02-06 10:17:01.217992 I system Th{6604} [mcs/hds_fmt.cpp:348] analiz_previous_region()  found region cn=0pl=0 nk=1 de=0 m_wf=FILT_CANS_SKIP== m_cp=AMPTIR_Deny== 
2020-02-06 10:17:01.217992 I system Th{6604} [mcs/hds_fmt.cpp:218] ~HdsVisitor() regnum=18446744073709551615
2020-02-06 10:17:01.217992 I system Th{6604} [mcs/hds_fmt.cpp:218] ~HdsVisitor() regnum=18446744073709551615
2020-02-06 10:17:01.217992 I system Th{6604} [mcs/hds_fmt.cpp:680] fill_hds_snap_shots() next step k=0
2020-02-06 10:17:01.217992 I system Th{6604} [mcs/hds_fmt.cpp:684] fill_hds_snap_shots() next step
2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:711] fill_hds_snap_shots() filtered graph(1580973421,c=2)=
                                   graph G {
                                   0[ shape=doublecircle label=" i=0;R<1>"];
                                   1[ shape=box label=" i=1;"];
                                   2[ shape=hexagon label=" i=2;"];
                                   3[ shape=doublecircle label=" i=3;R<2>"];
                                   4[ shape=box label=" i=4;"];
                                   5[ shape=hexagon label=" i=5;"];
                                   6[ shape=doublecircle label=" i=6;R<3>"];
                                   7[ shape=box label=" i=7;"];
                                   8[ shape=hexagon label=" i=8;"];
                                   9[ shape=doublecircle label=" i=9;R<4>"];
                                   10[ shape=box label=" i=10;"];
                                   11[ shape=hexagon label=" i=11;"];
                                   12[ shape=doublecircle label=" i=12;R<5>"];
                                   13[ shape=box label=" i=13;"];
                                   14[ shape=hexagon label=" i=14;"];
                                   15[ shape=doublecircle label=" i=15;R<6>"];
                                   16[ shape=box label=" i=16;"];
                                   17[ shape=hexagon label=" i=17;"];
                                   0--1 [label="0"];
                                   0--2 [label="1"];
                                   3--4 [label="2"];
                                   3--5 [label="3"];
                                   6--7 [label="4"];
                                   6--8 [label="5"];
                                   9--10 [label="6"];
                                   9--11 [label="7"];
                                   12--13 [label="8"];
                                   12--14 [label="9"];
                                   15--16 [label="10"];
                                   15--17 [label="11"];
                                   }
                                   

2020-02-06 10:17:01.217992 I system Th{6604} [mcs/hds_fmt.cpp:218] ~HdsVisitor() regnum=18446744073709551615
2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:231] start_vertex() start_vertex > 0
2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:256] discover_vertex() discover_vertex > 0
2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:275] discover_vertex()  this is can=1
2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:323] tree_edge() discover_ tree edge> 0
2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:256] discover_vertex() discover_vertex > 1
2020-02-06 10:17:01.217992 E system Th{6604} [mcs/hds_fmt.cpp:285] discover_vertex() trunkpipeline found
2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:313] back_edge() discover_ back edge> 0
2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:323] tree_edge() discover_ tree edge> 1
2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:256] discover_vertex() discover_vertex > 2
2020-02-06 10:17:01.217992 E system Th{6604} [mcs/hds_fmt.cpp:303] discover_vertex() FillingNeck found
2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:313] back_edge() discover_ back edge> 1
2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:231] start_vertex() start_vertex > 3
2020-02-06 10:17:01.217992 I system Th{6604} [mcs/hds_fmt.cpp:348] analiz_previous_region()  found region cn=1pl=1 nk=1 de=0 m_wf=FILT_VALVE_PERM== m_cp=AMPTIR_Deny== 
2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:256] discover_vertex() discover_vertex > 3
2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:275] discover_vertex()  this is can=2
2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:323] tree_edge() discover_ tree edge> 2
2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:256] discover_vertex() discover_vertex > 4
2020-02-06 10:17:01.217992 E system Th{6604} [mcs/hds_fmt.cpp:285] discover_vertex() trunkpipeline found
2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:313] back_edge() discover_ back edge> 2
2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:323] tree_edge() discover_ tree edge> 3
2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:256] discover_vertex() discover_vertex > 5
2020-02-06 10:17:01.217992 E system Th{6604} [mcs/hds_fmt.cpp:303] discover_vertex() FillingNeck found
2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:313] back_edge() discover_ back edge> 3
2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:231] start_vertex() start_vertex > 6
2020-02-06 10:17:01.217992 I system Th{6604} [mcs/hds_fmt.cpp:348] analiz_previous_region()  found region cn=1pl=1 nk=1 de=0 m_wf=FILT_VALVE_PERM== m_cp=AMPTIR_Deny== 
2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:256] discover_vertex() discover_vertex > 6
2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:275] discover_vertex()  this is can=3
2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:323] tree_edge() discover_ tree edge> 4
2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:256] discover_vertex() discover_vertex > 7
2020-02-06 10:17:01.217992 E system Th{6604} [mcs/hds_fmt.cpp:285] discover_vertex() trunkpipeline found
2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:313] back_edge() discover_ back edge> 4
2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:323] tree_edge() discover_ tree edge> 5
2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:256] discover_vertex() discover_vertex > 8
2020-02-06 10:17:01.217992 E system Th{6604} [mcs/hds_fmt.cpp:303] discover_vertex() FillingNeck found
2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:313] back_edge() discover_ back edge> 5
2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:231] start_vertex() start_vertex > 9
2020-02-06 10:17:01.217992 I system Th{6604} [mcs/hds_fmt.cpp:348] analiz_previous_region()  found region cn=1pl=1 nk=1 de=0 m_wf=FILT_VALVE_PERM== m_cp=AMPTIR_Deny== 
2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:256] discover_vertex() discover_vertex > 9
2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:275] discover_vertex()  this is can=4
2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:323] tree_edge() discover_ tree edge> 6
2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:256] discover_vertex() discover_vertex > 10
2020-02-06 10:17:01.217992 E system Th{6604} [mcs/hds_fmt.cpp:285] discover_vertex() trunkpipeline found
2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:313] back_edge() discover_ back edge> 6
2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:323] tree_edge() discover_ tree edge> 7
2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:256] discover_vertex() discover_vertex > 11
2020-02-06 10:17:01.217992 E system Th{6604} [mcs/hds_fmt.cpp:303] discover_vertex() FillingNeck found
2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:313] back_edge() discover_ back edge> 7
2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:231] start_vertex() start_vertex > 12
2020-02-06 10:17:01.217992 I system Th{6604} [mcs/hds_fmt.cpp:348] analiz_previous_region()  found region cn=1pl=1 nk=1 de=0 m_wf=FILT_VALVE_PERM== m_cp=AMPTIR_Deny== 
2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:256] discover_vertex() discover_vertex > 12
2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:275] discover_vertex()  this is can=5
2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:323] tree_edge() discover_ tree edge> 8
2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:256] discover_vertex() discover_vertex > 13
2020-02-06 10:17:01.217992 E system Th{6604} [mcs/hds_fmt.cpp:285] discover_vertex() trunkpipeline found
2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:313] back_edge() discover_ back edge> 8
2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:323] tree_edge() discover_ tree edge> 9
2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:256] discover_vertex() discover_vertex > 14
2020-02-06 10:17:01.217992 E system Th{6604} [mcs/hds_fmt.cpp:303] discover_vertex() FillingNeck found
2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:313] back_edge() discover_ back edge> 9
2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:231] start_vertex() start_vertex > 15
2020-02-06 10:17:01.217992 I system Th{6604} [mcs/hds_fmt.cpp:348] analiz_previous_region()  found region cn=1pl=1 nk=1 de=0 m_wf=FILT_VALVE_PERM== m_cp=AMPTIR_Deny== 
2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:256] discover_vertex() discover_vertex > 15
2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:275] discover_vertex()  this is can=6
2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:323] tree_edge() discover_ tree edge> 10
2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:256] discover_vertex() discover_vertex > 16
2020-02-06 10:17:01.217992 E system Th{6604} [mcs/hds_fmt.cpp:285] discover_vertex() trunkpipeline found
2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:313] back_edge() discover_ back edge> 10
2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:323] tree_edge() discover_ tree edge> 11
2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:256] discover_vertex() discover_vertex > 17
2020-02-06 10:17:01.217992 E system Th{6604} [mcs/hds_fmt.cpp:303] discover_vertex() FillingNeck found
2020-02-06 10:17:01.217992 D system Th{6604} [mcs/hds_fmt.cpp:313] back_edge() discover_ back edge> 11
2020-02-06 10:17:01.217992 I system Th{6604} [mcs/hds_fmt.cpp:218] ~HdsVisitor() regnum=5
2020-02-06 10:17:01.217992 I system Th{6604} [mcs/hds_fmt.cpp:348] analiz_previous_region()  found region cn=1pl=1 nk=1 de=0 m_wf=FILT_VALVE_PERM== m_cp=AMPTIR_Deny== 
2020-02-06 10:17:01.217992 I system Th{6604} [mcs/hds_fmt.cpp:218] ~HdsVisitor() regnum=18446744073709551615
2020-02-06 10:17:01.217992 I system Th{6604} [mcs/hds_fmt.cpp:218] ~HdsVisitor() regnum=18446744073709551615
2020-02-06 10:17:01.217992 I system Th{6604} [mcs/hds_fmt.cpp:748] fill_hds_snap_shots() analize region r=0
2020-02-06 10:17:01.217992 I system Th{6604} [mcs/hds_fmt.cpp:748] fill_hds_snap_shots() analize region r=1
2020-02-06 10:17:01.218992 I system Th{6604} [mcs/hds_fmt.cpp:748] fill_hds_snap_shots() analize region r=2
2020-02-06 10:17:01.218992 I system Th{6604} [mcs/hds_fmt.cpp:748] fill_hds_snap_shots() analize region r=3
2020-02-06 10:17:01.218992 I system Th{6604} [mcs/hds_fmt.cpp:748] fill_hds_snap_shots() analize region r=4
2020-02-06 10:17:01.218992 I system Th{6604} [mcs/hds_fmt.cpp:748] fill_hds_snap_shots() analize region r=5
2020-02-06 10:17:01.218992 I system Th{6604} [mcs/hds_fmt.cpp:792] fill_hds_snap_shots() ok_all_rgs=1
2020-02-06 10:17:01.218992 I system Th{6604} [mcs/hds_fmt.cpp:795] fill_hds_snap_shots() okay this variant is not contradictable check duplicate mapping
2020-02-06 10:17:01.218992 I system Th{6604} [mcs/hds_fmt.cpp:835] fill_hds_snap_shots() okay insert new combination
2020-02-06 10:17:01.218992 I system Th{6604} [mcs/hds_fmt.cpp:863] fill_hds_snap_shots() TOTAL DIFFERED PERMUTATIONS=1
2020-02-06 10:17:01.218992 E system Th{6604} [mcs/db/db_config.cpp:449] _rebuild_can_to_nozzle() Now we check config consistancy with db templates
2020-02-06 10:17:01.218992 D db Th{6604} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select hds.id,hds.disabled,n.trkno,dn.nozzle,dn.canid,c.storageid,t.start_regime from azk.mcs_hds as hds join azk.mcs_hds_detail as dn on (hds.id = dn.hds_id)  join azk.mcs_dyn_nozzles as n on (n.nozzle = dn.nozzle)  join azk.mcs_cans as c on (c.canid = dn.canid)  join azk.mcs_trks as t on (n.trkno = t.trkno)  order by hds.id desc 
2020-02-06 10:17:01.219992 I db Th{6604} [mcs/db/hds_db.cpp:70] _insert_data_row_data_in_map() fetch trk=1> nozzle=15> can=1 stor=2 regime=TRKSTARTREGIME_AUTO
2020-02-06 10:17:01.219992 I db Th{6604} [mcs/db/hds_db.cpp:70] _insert_data_row_data_in_map() fetch trk=2> nozzle=25> can=1 stor=2 regime=TRKSTARTREGIME_AUTO
2020-02-06 10:17:01.219992 I db Th{6604} [mcs/db/hds_db.cpp:70] _insert_data_row_data_in_map() fetch trk=3> nozzle=35> can=1 stor=2 regime=TRKSTARTREGIME_AUTO
2020-02-06 10:17:01.219992 I db Th{6604} [mcs/db/hds_db.cpp:70] _insert_data_row_data_in_map() fetch trk=4> nozzle=45> can=1 stor=2 regime=TRKSTARTREGIME_AUTO
2020-02-06 10:17:01.219992 I db Th{6604} [mcs/db/hds_db.cpp:70] _insert_data_row_data_in_map() fetch trk=5> nozzle=55> can=1 stor=2 regime=TRKSTARTREGIME_AUTO
2020-02-06 10:17:01.219992 I db Th{6604} [mcs/db/hds_db.cpp:70] _insert_data_row_data_in_map() fetch trk=6> nozzle=65> can=1 stor=2 regime=TRKSTARTREGIME_AUTO
2020-02-06 10:17:01.219992 I db Th{6604} [mcs/db/hds_db.cpp:70] _insert_data_row_data_in_map() fetch trk=1> nozzle=14> can=2 stor=2 regime=TRKSTARTREGIME_AUTO
2020-02-06 10:17:01.219992 I db Th{6604} [mcs/db/hds_db.cpp:70] _insert_data_row_data_in_map() fetch trk=2> nozzle=24> can=2 stor=2 regime=TRKSTARTREGIME_AUTO
2020-02-06 10:17:01.219992 I db Th{6604} [mcs/db/hds_db.cpp:70] _insert_data_row_data_in_map() fetch trk=3> nozzle=34> can=2 stor=2 regime=TRKSTARTREGIME_AUTO
2020-02-06 10:17:01.219992 I db Th{6604} [mcs/db/hds_db.cpp:70] _insert_data_row_data_in_map() fetch trk=4> nozzle=44> can=2 stor=2 regime=TRKSTARTREGIME_AUTO
2020-02-06 10:17:01.219992 I db Th{6604} [mcs/db/hds_db.cpp:70] _insert_data_row_data_in_map() fetch trk=5> nozzle=54> can=2 stor=2 regime=TRKSTARTREGIME_AUTO
2020-02-06 10:17:01.219992 I db Th{6604} [mcs/db/hds_db.cpp:70] _insert_data_row_data_in_map() fetch trk=6> nozzle=64> can=2 stor=2 regime=TRKSTARTREGIME_AUTO
2020-02-06 10:17:01.219992 I db Th{6604} [mcs/db/hds_db.cpp:70] _insert_data_row_data_in_map() fetch trk=1> nozzle=13> can=3 stor=2 regime=TRKSTARTREGIME_AUTO
2020-02-06 10:17:01.219992 I db Th{6604} [mcs/db/hds_db.cpp:70] _insert_data_row_data_in_map() fetch trk=2> nozzle=23> can=3 stor=2 regime=TRKSTARTREGIME_AUTO
2020-02-06 10:17:01.219992 I db Th{6604} [mcs/db/hds_db.cpp:70] _insert_data_row_data_in_map() fetch trk=3> nozzle=33> can=3 stor=2 regime=TRKSTARTREGIME_AUTO
2020-02-06 10:17:01.219992 I db Th{6604} [mcs/db/hds_db.cpp:70] _insert_data_row_data_in_map() fetch trk=4> nozzle=43> can=3 stor=2 regime=TRKSTARTREGIME_AUTO
2020-02-06 10:17:01.219992 I db Th{6604} [mcs/db/hds_db.cpp:70] _insert_data_row_data_in_map() fetch trk=5> nozzle=53> can=3 stor=2 regime=TRKSTARTREGIME_AUTO
2020-02-06 10:17:01.219992 I db Th{6604} [mcs/db/hds_db.cpp:70] _insert_data_row_data_in_map() fetch trk=6> nozzle=63> can=3 stor=2 regime=TRKSTARTREGIME_AUTO
2020-02-06 10:17:01.219992 I db Th{6604} [mcs/db/hds_db.cpp:70] _insert_data_row_data_in_map() fetch trk=1> nozzle=12> can=4 stor=2 regime=TRKSTARTREGIME_AUTO
2020-02-06 10:17:01.219992 I db Th{6604} [mcs/db/hds_db.cpp:70] _insert_data_row_data_in_map() fetch trk=2> nozzle=22> can=4 stor=2 regime=TRKSTARTREGIME_AUTO
2020-02-06 10:17:01.219992 I db Th{6604} [mcs/db/hds_db.cpp:70] _insert_data_row_data_in_map() fetch trk=3> nozzle=32> can=4 stor=2 regime=TRKSTARTREGIME_AUTO
2020-02-06 10:17:01.219992 I db Th{6604} [mcs/db/hds_db.cpp:70] _insert_data_row_data_in_map() fetch trk=4> nozzle=42> can=4 stor=2 regime=TRKSTARTREGIME_AUTO
2020-02-06 10:17:01.219992 I db Th{6604} [mcs/db/hds_db.cpp:70] _insert_data_row_data_in_map() fetch trk=5> nozzle=52> can=4 stor=2 regime=TRKSTARTREGIME_AUTO
2020-02-06 10:17:01.219992 I db Th{6604} [mcs/db/hds_db.cpp:70] _insert_data_row_data_in_map() fetch trk=6> nozzle=62> can=4 stor=2 regime=TRKSTARTREGIME_AUTO
2020-02-06 10:17:01.219992 I db Th{6604} [mcs/db/hds_db.cpp:70] _insert_data_row_data_in_map() fetch trk=1> nozzle=11> can=5 stor=2 regime=TRKSTARTREGIME_AUTO
2020-02-06 10:17:01.219992 I db Th{6604} [mcs/db/hds_db.cpp:70] _insert_data_row_data_in_map() fetch trk=2> nozzle=21> can=5 stor=2 regime=TRKSTARTREGIME_AUTO
2020-02-06 10:17:01.219992 I db Th{6604} [mcs/db/hds_db.cpp:70] _insert_data_row_data_in_map() fetch trk=3> nozzle=31> can=5 stor=2 regime=TRKSTARTREGIME_AUTO
2020-02-06 10:17:01.219992 I db Th{6604} [mcs/db/hds_db.cpp:70] _insert_data_row_data_in_map() fetch trk=4> nozzle=41> can=5 stor=2 regime=TRKSTARTREGIME_AUTO
2020-02-06 10:17:01.219992 I db Th{6604} [mcs/db/hds_db.cpp:70] _insert_data_row_data_in_map() fetch trk=5> nozzle=51> can=5 stor=2 regime=TRKSTARTREGIME_AUTO
2020-02-06 10:17:01.219992 I db Th{6604} [mcs/db/hds_db.cpp:70] _insert_data_row_data_in_map() fetch trk=6> nozzle=61> can=5 stor=2 regime=TRKSTARTREGIME_AUTO
2020-02-06 10:17:01.219992 I db Th{6604} [mcs/db/hds_db.cpp:70] _insert_data_row_data_in_map() fetch trk=7> nozzle=71> can=6 stor=2 regime=TRKSTARTREGIME_OPERATOR
2020-02-06 10:17:01.219992 I db Th{6604} [mcs/db/hds_db.cpp:70] _insert_data_row_data_in_map() fetch trk=8> nozzle=81> can=6 stor=2 regime=TRKSTARTREGIME_OPERATOR
2020-02-06 10:17:01.219992 I db Th{6604} [mcs/db/hds_db.cpp:70] _insert_data_row_data_in_map() fetch trk=8> nozzle=82> can=6 stor=2 regime=TRKSTARTREGIME_OPERATOR
2020-02-06 10:17:01.219992 D db Th{6604} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select hds_id,valve_id,valve_opened,valvename from azk.mcs_hds_valve_states as vs join azk.mcs_hds_valves as v on (vs.valve_id = v.id)
2020-02-06 10:17:01.220992 D db Th{6604} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select id,hds_id from azk.mcs_hds_log where activity = ?
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:462] _rebuild_can_to_nozzle() g_trk_def_map_stub=TrkDefMap={
                                    TrkId=1: TrkStartRegime=TRKSTARTREGIME_OFF
                                   Nozzles=[   NozzleId=11: canid=NIL subpetrol=NIL storageid=NIL
                                      NozzleId=12: canid=NIL subpetrol=NIL storageid=NIL
                                      NozzleId=13: canid=NIL subpetrol=NIL storageid=NIL
                                      NozzleId=14: canid=NIL subpetrol=NIL storageid=NIL
                                      NozzleId=15: canid=NIL subpetrol=NIL storageid=NIL
                                   ]
                                    TrkId=2: TrkStartRegime=TRKSTARTREGIME_OFF
                                   Nozzles=[   NozzleId=21: canid=NIL subpetrol=NIL storageid=NIL
                                      NozzleId=22: canid=NIL subpetrol=NIL storageid=NIL
                                      NozzleId=23: canid=NIL subpetrol=NIL storageid=NIL
                                      NozzleId=24: canid=NIL subpetrol=NIL storageid=NIL
                                      NozzleId=25: canid=NIL subpetrol=NIL storageid=NIL
                                   ]
                                    TrkId=3: TrkStartRegime=TRKSTARTREGIME_OFF
                                   Nozzles=[   NozzleId=31: canid=NIL subpetrol=NIL storageid=NIL
                                      NozzleId=32: canid=NIL subpetrol=NIL storageid=NIL
                                      NozzleId=33: canid=NIL subpetrol=NIL storageid=NIL
                                      NozzleId=34: canid=NIL subpetrol=NIL storageid=NIL
                                      NozzleId=35: canid=NIL subpetrol=NIL storageid=NIL
                                   ]
                                    TrkId=4: TrkStartRegime=TRKSTARTREGIME_OFF
                                   Nozzles=[   NozzleId=41: canid=NIL subpetrol=NIL storageid=NIL
                                      NozzleId=42: canid=NIL subpetrol=NIL storageid=NIL
                                      NozzleId=43: canid=NIL subpetrol=NIL storageid=NIL
                                      NozzleId=44: canid=NIL subpetrol=NIL storageid=NIL
                                      NozzleId=45: canid=NIL subpetrol=NIL storageid=NIL
                                   ]
                                    TrkId=5: TrkStartRegime=TRKSTARTREGIME_OFF
                                   Nozzles=[   NozzleId=51: canid=NIL subpetrol=NIL storageid=NIL
                                      NozzleId=52: canid=NIL subpetrol=NIL storageid=NIL
                                      NozzleId=53: canid=NIL subpetrol=NIL storageid=NIL
                                      NozzleId=54: canid=NIL subpetrol=NIL storageid=NIL
                                      NozzleId=55: canid=NIL subpetrol=NIL storageid=NIL
                                   ]
                                    TrkId=6: TrkStartRegime=TRKSTARTREGIME_OFF
                                   Nozzles=[   NozzleId=61: canid=NIL subpetrol=NIL storageid=NIL
                                      NozzleId=62: canid=NIL subpetrol=NIL storageid=NIL
                                      NozzleId=63: canid=NIL subpetrol=NIL storageid=NIL
                                      NozzleId=64: canid=NIL subpetrol=NIL storageid=NIL
                                      NozzleId=65: canid=NIL subpetrol=NIL storageid=NIL
                                   ]
                                    TrkId=7: TrkStartRegime=TRKSTARTREGIME_OFF
                                   Nozzles=[   NozzleId=71: canid=NIL subpetrol=NIL storageid=NIL
                                   ]
                                    TrkId=8: TrkStartRegime=TRKSTARTREGIME_OFF
                                   Nozzles=[   NozzleId=81: canid=NIL subpetrol=NIL storageid=NIL
                                      NozzleId=82: canid=NIL subpetrol=NIL storageid=NIL
                                   ]

2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:39] is_hds_db_cfg_consistent() try to compare db with config hds 
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:42] is_hds_db_cfg_consistent() analize trkno=1
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:54] is_hds_db_cfg_consistent()  trkno=1 matched compare nozzles  nozzle_petrol_map size=5 config nozzles=5
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:42] is_hds_db_cfg_consistent() analize trkno=2
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:54] is_hds_db_cfg_consistent()  trkno=2 matched compare nozzles  nozzle_petrol_map size=5 config nozzles=5
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:42] is_hds_db_cfg_consistent() analize trkno=3
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:54] is_hds_db_cfg_consistent()  trkno=3 matched compare nozzles  nozzle_petrol_map size=5 config nozzles=5
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:42] is_hds_db_cfg_consistent() analize trkno=4
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:54] is_hds_db_cfg_consistent()  trkno=4 matched compare nozzles  nozzle_petrol_map size=5 config nozzles=5
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:42] is_hds_db_cfg_consistent() analize trkno=5
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:54] is_hds_db_cfg_consistent()  trkno=5 matched compare nozzles  nozzle_petrol_map size=5 config nozzles=5
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:42] is_hds_db_cfg_consistent() analize trkno=6
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:54] is_hds_db_cfg_consistent()  trkno=6 matched compare nozzles  nozzle_petrol_map size=5 config nozzles=5
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:42] is_hds_db_cfg_consistent() analize trkno=7
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:54] is_hds_db_cfg_consistent()  trkno=7 matched compare nozzles  nozzle_petrol_map size=1 config nozzles=1
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:42] is_hds_db_cfg_consistent() analize trkno=8
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:54] is_hds_db_cfg_consistent()  trkno=8 matched compare nozzles  nozzle_petrol_map size=2 config nozzles=2
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:99] is_hds_db_cfg_consistent() cfg variants check valve_list=ValveList=[
                                   ]
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:101] is_hds_db_cfg_consistent() can=1
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:101] is_hds_db_cfg_consistent() can=2
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:101] is_hds_db_cfg_consistent() can=3
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:101] is_hds_db_cfg_consistent() can=4
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:101] is_hds_db_cfg_consistent() can=5
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:101] is_hds_db_cfg_consistent() can=6
2020-02-06 10:17:01.221992 D system Th{6604} [mcs_types/valve.cpp:40] is_included_in()  n_matches=0 size=0
2020-02-06 10:17:01.221992 I db Th{6604} [mcs/db/db_config.cpp:112] is_hds_db_cfg_consistent() valve list matched cnt=0
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:129] is_hds_db_cfg_consistent() SECOND STAGE analize trkno=1
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:135] is_hds_db_cfg_consistent() found in bd nozzle=11 bcan=5
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:138] is_hds_db_cfg_consistent() okay can found
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:141] is_hds_db_cfg_consistent() okay nozzle found
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:135] is_hds_db_cfg_consistent() found in bd nozzle=12 bcan=4
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:138] is_hds_db_cfg_consistent() okay can found
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:141] is_hds_db_cfg_consistent() okay nozzle found
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:135] is_hds_db_cfg_consistent() found in bd nozzle=13 bcan=3
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:138] is_hds_db_cfg_consistent() okay can found
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:141] is_hds_db_cfg_consistent() okay nozzle found
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:135] is_hds_db_cfg_consistent() found in bd nozzle=14 bcan=2
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:138] is_hds_db_cfg_consistent() okay can found
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:141] is_hds_db_cfg_consistent() okay nozzle found
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:135] is_hds_db_cfg_consistent() found in bd nozzle=15 bcan=1
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:138] is_hds_db_cfg_consistent() okay can found
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:141] is_hds_db_cfg_consistent() okay nozzle found
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:129] is_hds_db_cfg_consistent() SECOND STAGE analize trkno=2
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:135] is_hds_db_cfg_consistent() found in bd nozzle=21 bcan=5
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:138] is_hds_db_cfg_consistent() okay can found
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:141] is_hds_db_cfg_consistent() okay nozzle found
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:135] is_hds_db_cfg_consistent() found in bd nozzle=22 bcan=4
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:138] is_hds_db_cfg_consistent() okay can found
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:141] is_hds_db_cfg_consistent() okay nozzle found
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:135] is_hds_db_cfg_consistent() found in bd nozzle=23 bcan=3
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:138] is_hds_db_cfg_consistent() okay can found
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:141] is_hds_db_cfg_consistent() okay nozzle found
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:135] is_hds_db_cfg_consistent() found in bd nozzle=24 bcan=2
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:138] is_hds_db_cfg_consistent() okay can found
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:141] is_hds_db_cfg_consistent() okay nozzle found
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:135] is_hds_db_cfg_consistent() found in bd nozzle=25 bcan=1
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:138] is_hds_db_cfg_consistent() okay can found
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:141] is_hds_db_cfg_consistent() okay nozzle found
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:129] is_hds_db_cfg_consistent() SECOND STAGE analize trkno=3
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:135] is_hds_db_cfg_consistent() found in bd nozzle=31 bcan=5
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:138] is_hds_db_cfg_consistent() okay can found
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:141] is_hds_db_cfg_consistent() okay nozzle found
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:135] is_hds_db_cfg_consistent() found in bd nozzle=32 bcan=4
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:138] is_hds_db_cfg_consistent() okay can found
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:141] is_hds_db_cfg_consistent() okay nozzle found
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:135] is_hds_db_cfg_consistent() found in bd nozzle=33 bcan=3
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:138] is_hds_db_cfg_consistent() okay can found
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:141] is_hds_db_cfg_consistent() okay nozzle found
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:135] is_hds_db_cfg_consistent() found in bd nozzle=34 bcan=2
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:138] is_hds_db_cfg_consistent() okay can found
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:141] is_hds_db_cfg_consistent() okay nozzle found
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:135] is_hds_db_cfg_consistent() found in bd nozzle=35 bcan=1
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:138] is_hds_db_cfg_consistent() okay can found
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:141] is_hds_db_cfg_consistent() okay nozzle found
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:129] is_hds_db_cfg_consistent() SECOND STAGE analize trkno=4
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:135] is_hds_db_cfg_consistent() found in bd nozzle=41 bcan=5
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:138] is_hds_db_cfg_consistent() okay can found
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:141] is_hds_db_cfg_consistent() okay nozzle found
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:135] is_hds_db_cfg_consistent() found in bd nozzle=42 bcan=4
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:138] is_hds_db_cfg_consistent() okay can found
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:141] is_hds_db_cfg_consistent() okay nozzle found
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:135] is_hds_db_cfg_consistent() found in bd nozzle=43 bcan=3
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:138] is_hds_db_cfg_consistent() okay can found
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:141] is_hds_db_cfg_consistent() okay nozzle found
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:135] is_hds_db_cfg_consistent() found in bd nozzle=44 bcan=2
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:138] is_hds_db_cfg_consistent() okay can found
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:141] is_hds_db_cfg_consistent() okay nozzle found
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:135] is_hds_db_cfg_consistent() found in bd nozzle=45 bcan=1
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:138] is_hds_db_cfg_consistent() okay can found
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:141] is_hds_db_cfg_consistent() okay nozzle found
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:129] is_hds_db_cfg_consistent() SECOND STAGE analize trkno=5
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:135] is_hds_db_cfg_consistent() found in bd nozzle=51 bcan=5
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:138] is_hds_db_cfg_consistent() okay can found
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:141] is_hds_db_cfg_consistent() okay nozzle found
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:135] is_hds_db_cfg_consistent() found in bd nozzle=52 bcan=4
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:138] is_hds_db_cfg_consistent() okay can found
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:141] is_hds_db_cfg_consistent() okay nozzle found
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:135] is_hds_db_cfg_consistent() found in bd nozzle=53 bcan=3
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:138] is_hds_db_cfg_consistent() okay can found
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:141] is_hds_db_cfg_consistent() okay nozzle found
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:135] is_hds_db_cfg_consistent() found in bd nozzle=54 bcan=2
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:138] is_hds_db_cfg_consistent() okay can found
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:141] is_hds_db_cfg_consistent() okay nozzle found
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:135] is_hds_db_cfg_consistent() found in bd nozzle=55 bcan=1
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:138] is_hds_db_cfg_consistent() okay can found
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:141] is_hds_db_cfg_consistent() okay nozzle found
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:129] is_hds_db_cfg_consistent() SECOND STAGE analize trkno=6
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:135] is_hds_db_cfg_consistent() found in bd nozzle=61 bcan=5
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:138] is_hds_db_cfg_consistent() okay can found
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:141] is_hds_db_cfg_consistent() okay nozzle found
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:135] is_hds_db_cfg_consistent() found in bd nozzle=62 bcan=4
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:138] is_hds_db_cfg_consistent() okay can found
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:141] is_hds_db_cfg_consistent() okay nozzle found
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:135] is_hds_db_cfg_consistent() found in bd nozzle=63 bcan=3
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:138] is_hds_db_cfg_consistent() okay can found
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:141] is_hds_db_cfg_consistent() okay nozzle found
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:135] is_hds_db_cfg_consistent() found in bd nozzle=64 bcan=2
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:138] is_hds_db_cfg_consistent() okay can found
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:141] is_hds_db_cfg_consistent() okay nozzle found
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:135] is_hds_db_cfg_consistent() found in bd nozzle=65 bcan=1
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:138] is_hds_db_cfg_consistent() okay can found
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:141] is_hds_db_cfg_consistent() okay nozzle found
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:129] is_hds_db_cfg_consistent() SECOND STAGE analize trkno=7
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:135] is_hds_db_cfg_consistent() found in bd nozzle=71 bcan=6
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:138] is_hds_db_cfg_consistent() okay can found
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:141] is_hds_db_cfg_consistent() okay nozzle found
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:129] is_hds_db_cfg_consistent() SECOND STAGE analize trkno=8
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:135] is_hds_db_cfg_consistent() found in bd nozzle=81 bcan=6
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:138] is_hds_db_cfg_consistent() okay can found
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:141] is_hds_db_cfg_consistent() okay nozzle found
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:135] is_hds_db_cfg_consistent() found in bd nozzle=82 bcan=6
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:138] is_hds_db_cfg_consistent() okay can found
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:141] is_hds_db_cfg_consistent() okay nozzle found
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:159] is_hds_db_cfg_consistent() valve_matched_list.size()=1 enabled_perms_in_bd=1
2020-02-06 10:17:01.221992 I system Th{6604} [mcs/db/db_config.cpp:168] is_hds_db_cfg_consistent() HDS-VALIDATION-OKAY
2020-02-06 10:17:01.221992 W system Th{6604} [mcs/db/db_config.cpp:467] _rebuild_can_to_nozzle() DB config is in consistent with config
2020-02-06 10:17:01.222992 I system Th{6604} [fc/selfdiag.cpp:143] log() Диагностика ошибок не выявила
2020-02-06 10:20:04.812004 E system Th{5772} [fc/main_utils.cpp:29] fc_check_uid() uid=998 euid=998
2020-02-06 10:20:05.175004 I system Th{5772} [fc/main_utils.cpp:43] fc_block() lock file name build</tmp/mcc_server.BLOCK>

2020-02-06 10:20:05.175004 I system Th{5772} [fc/main_utils.cpp:49] fc_block() LOCK file opened </tmp/mcc_server.BLOCK>

2020-02-06 10:20:05.175004 I system Th{5772} [fc/main_utils.cpp:60] fc_block() LOCK file locked </tmp/mcc_server.BLOCK> 

2020-02-06 10:20:05.175004 I system Th{5772} [main/server_main.cpp:509] main() *************************** STARTING SERVER*****************************MCS_PROJECT_RELEASE=rev 24855> omniORB=4.2.2
2020-02-06 10:20:05.175004 I system Th{5772} [main/server_main.cpp:170] tune_signal() RLIMIT_NPROC res=0  rlim_cur=15046 rlim_max=15046>
2020-02-06 10:20:05.175004 I system Th{5772} [main/server_main.cpp:519] main() Каталог спулинга мониторинга задан переменной окружения: /var/spool/statmon/
2020-02-06 10:20:05.177004 I system Th{5772} [corba/sslContext_mcc.cpp:290] test_serts() rc=1
2020-02-06 10:20:05.178004 I system Th{5772} [db_connection/db_connection.cpp:27] g_get_env_qtsql() env var QTSQL_CONNECTION = qtdriver=QPSQL host=msk-cn-351-srv1 port=5432 dbname=mcc_db user=mcs password=station
2020-02-06 10:20:05.183004 I system Th{5772} [db_connection/db_connection.cpp:73] g_ensure_from_oql_db() host=msk-cn-351-srv1== port=5432== dbname=mk_0f56f186_257a_11ea_8394_00505692c775== user=mcs== password=station
2020-02-06 10:20:05.183004 I system Th{5772} [db_connection/db_connection.cpp:79] g_ensure_from_oql_db() HEAD host=msk-cn-351-srv1== port=5432== dbname=mcc_db== user=mcs== password=station
2020-02-06 10:20:05.183004 D sale Th{5772} [dblib/db_start.cpp:56] open_default_database_n() try connect to ODBC: SOURCE=PostgreSQL ANSI, DSN=mk_0f56f186_257a_11ea_8394_00505692c775, PORT=5432, USERNAME=mcs, SERVER_ADDR=msk-cn-351-srv1 PASSWORD=station
2020-02-06 10:20:05.187004 D db Th{5772} [fc/symm_crypt.cpp:16] mcc_set_symm_key() setup key ===<<
                               OrdqaE6rvgiJ8TOK94+svOpgLlI2o900ZGwBfDYZlBzOquJF+zcTbmlz0CYm6klP
                               l9MGRvLAkcK7fhhlNTm2tQ==
                               >>===
2020-02-06 10:20:05.187004 D sale Th{5772} [dblib/db_start.cpp:56] open_default_database_n() try connect to ODBC: SOURCE=PostgreSQL ANSI, DSN=mcc_db, PORT=5432, USERNAME=mcs, SERVER_ADDR=msk-cn-351-srv1 PASSWORD=station
2020-02-06 10:20:05.653004 I user Th{5772} [corba/corba_config_client.cpp:79] init() attempt server connection k=0
2020-02-06 10:20:05.653004 I system Th{5772} [corba/corba_utils.cpp:287] getObjectReference() getObjectReference: client try to do rir
2020-02-06 10:20:05.653004 I system Th{5772} [corba/corba_utils.cpp:319] getObjectReference() getObjectReference: resolved
2020-02-06 10:20:05.654004 E system Th{5772} [corba/corba_utils.cpp:323] getObjectReference() Context not found.
2020-02-06 10:20:05.654004 I user Th{5772} [corba/corba_config_client.cpp:87] init() wanna load config0
2020-02-06 10:20:05.663004 E system Th{5772} [corba/corba_config_client.cpp:168] get_actual() exception catched to separate it
2020-02-06 10:20:06.663004 I user Th{5772} [corba/corba_config_client.cpp:79] init() attempt server connection k=1
2020-02-06 10:20:06.663004 I system Th{5772} [corba/corba_utils.cpp:287] getObjectReference() getObjectReference: client try to do rir
2020-02-06 10:20:06.663004 I system Th{5772} [corba/corba_utils.cpp:319] getObjectReference() getObjectReference: resolved
2020-02-06 10:20:06.664004 E system Th{5772} [corba/corba_utils.cpp:323] getObjectReference() Context not found.
2020-02-06 10:20:06.664004 I user Th{5772} [corba/corba_config_client.cpp:87] init() wanna load config1
2020-02-06 10:20:06.664004 E system Th{5772} [corba/corba_config_client.cpp:168] get_actual() exception catched to separate it
2020-02-06 10:20:07.664004 I user Th{5772} [corba/corba_config_client.cpp:79] init() attempt server connection k=2
2020-02-06 10:20:07.664004 I system Th{5772} [corba/corba_utils.cpp:287] getObjectReference() getObjectReference: client try to do rir
2020-02-06 10:20:07.664004 I system Th{5772} [corba/corba_utils.cpp:319] getObjectReference() getObjectReference: resolved
2020-02-06 10:20:07.664004 E system Th{5772} [corba/corba_utils.cpp:323] getObjectReference() Context not found.
2020-02-06 10:20:07.664004 I user Th{5772} [corba/corba_config_client.cpp:87] init() wanna load config2
2020-02-06 10:20:07.664004 E system Th{5772} [corba/corba_config_client.cpp:168] get_actual() exception catched to separate it
2020-02-06 10:20:08.664004 I user Th{5772} [corba/corba_config_client.cpp:79] init() attempt server connection k=3
2020-02-06 10:20:08.664004 I system Th{5772} [corba/corba_utils.cpp:287] getObjectReference() getObjectReference: client try to do rir
2020-02-06 10:20:08.664004 I system Th{5772} [corba/corba_utils.cpp:319] getObjectReference() getObjectReference: resolved
2020-02-06 10:20:08.664004 E system Th{5772} [corba/corba_utils.cpp:323] getObjectReference() Context not found.
2020-02-06 10:20:08.664004 I user Th{5772} [corba/corba_config_client.cpp:87] init() wanna load config3
2020-02-06 10:20:08.664004 E system Th{5772} [corba/corba_config_client.cpp:168] get_actual() exception catched to separate it
2020-02-06 10:20:09.665004 I user Th{5772} [corba/corba_config_client.cpp:79] init() attempt server connection k=4
2020-02-06 10:20:09.665004 I system Th{5772} [corba/corba_utils.cpp:287] getObjectReference() getObjectReference: client try to do rir
2020-02-06 10:20:09.665004 I system Th{5772} [corba/corba_utils.cpp:319] getObjectReference() getObjectReference: resolved
2020-02-06 10:20:09.665004 E system Th{5772} [corba/corba_utils.cpp:323] getObjectReference() Context not found.
2020-02-06 10:20:09.665004 I user Th{5772} [corba/corba_config_client.cpp:87] init() wanna load config4
2020-02-06 10:20:09.665004 E system Th{5772} [corba/corba_config_client.cpp:168] get_actual() exception catched to separate it
2020-02-06 10:20:10.665004 I user Th{5772} [corba/corba_config_client.cpp:79] init() attempt server connection k=5
2020-02-06 10:20:10.665004 I system Th{5772} [corba/corba_utils.cpp:287] getObjectReference() getObjectReference: client try to do rir
2020-02-06 10:20:10.665004 I system Th{5772} [corba/corba_utils.cpp:319] getObjectReference() getObjectReference: resolved
2020-02-06 10:20:10.666004 I user Th{5772} [corba/corba_config_client.cpp:87] init() wanna load config5
2020-02-06 10:20:12.354004 I user Th{5772} [corba/corba_config_client.cpp:98] init() okay server connection k=5
2020-02-06 10:20:12.354004 D system Th{5772} [main/service_config.h:19] get_service_vector_config() compare cfg<msk-cn-351-srv1 with <msk-cn-351-srv1>
2020-02-06 10:20:12.354004 D system Th{5772} [main/service_config.h:19] get_service_vector_config() compare cfg<msk-cn-351-node2 with <msk-cn-351-srv1>
2020-02-06 10:20:12.354004 D system Th{5772} [main/service_config.h:19] get_service_vector_config() compare cfg<msk-cn-351-node3 with <msk-cn-351-srv1>
2020-02-06 10:20:12.354004 D system Th{5772} [main/service_config.h:19] get_service_vector_config() compare cfg<msk-cn-351-srv1 with <NIL>
2020-02-06 10:20:12.354004 D system Th{5772} [main/service_config.h:19] get_service_vector_config() compare cfg<msk-cn-351-node2 with <NIL>
2020-02-06 10:20:12.354004 D system Th{5772} [main/service_config.h:19] get_service_vector_config() compare cfg<msk-cn-351-node3 with <NIL>
2020-02-06 10:20:12.354004 D system Th{5772} [main/service_config.h:19] get_service_vector_config() compare cfg<msk-cn-351-srv1 with <NIL>
2020-02-06 10:20:12.354004 D system Th{5772} [main/service_config.h:19] get_service_vector_config() compare cfg<msk-cn-351-node2 with <NIL>
2020-02-06 10:20:12.354004 D system Th{5772} [main/service_config.h:19] get_service_vector_config() compare cfg<msk-cn-351-node3 with <NIL>
2020-02-06 10:20:12.354004 D system Th{5772} [main/service_config.h:19] get_service_vector_config() compare cfg<msk-cn-351-srv1 with <NIL>
2020-02-06 10:20:12.354004 D system Th{5772} [main/service_config.h:19] get_service_vector_config() compare cfg<msk-cn-351-node2 with <NIL>
2020-02-06 10:20:12.354004 D system Th{5772} [main/service_config.h:19] get_service_vector_config() compare cfg<msk-cn-351-node3 with <NIL>
2020-02-06 10:20:12.354004 D system Th{5772} [main/service_config.h:19] get_service_vector_config() compare cfg<msk-cn-351-srv1 with <NIL>
2020-02-06 10:20:12.354004 D system Th{5772} [main/service_config.h:19] get_service_vector_config() compare cfg<msk-cn-351-node2 with <NIL>
2020-02-06 10:20:12.354004 D system Th{5772} [main/service_config.h:19] get_service_vector_config() compare cfg<msk-cn-351-node3 with <NIL>
2020-02-06 10:20:12.354004 D system Th{5772} [main/service_config.h:19] get_service_vector_config() compare cfg<msk-cn-351-srv1 with <NIL>
2020-02-06 10:20:12.354004 D system Th{5772} [main/service_config.h:19] get_service_vector_config() compare cfg<msk-cn-351-node2 with <NIL>
2020-02-06 10:20:12.354004 D system Th{5772} [main/service_config.h:19] get_service_vector_config() compare cfg<msk-cn-351-node3 with <NIL>
2020-02-06 10:20:12.354004 D system Th{5772} [main/service_config.h:19] get_service_vector_config() compare cfg<msk-cn-351-srv1 with <NIL>
2020-02-06 10:20:12.354004 D system Th{5772} [main/service_config.h:19] get_service_vector_config() compare cfg<msk-cn-351-node2 with <NIL>
2020-02-06 10:20:12.354004 D system Th{5772} [main/service_config.h:19] get_service_vector_config() compare cfg<msk-cn-351-node3 with <NIL>
2020-02-06 10:20:12.354004 E system Th{5772} [main/service_config.h:60] get_service_config() no configuration found for target service
2020-02-06 10:20:12.354004 I system Th{5772} [main/server_main.cpp:237] load_config() detected gEodConfig=0x000055EA79060410 gMassServiceConfig=0x000055EA79004080 gNctServiceConfig=0x000055EA790CFE70 gScantechServiceConfig=0x000055EA790ECD10 gInpasServiceConfig=0x0000000000000000
2020-02-06 10:20:12.354004 I user Th{5772} [mcs_types/valuta.cpp:55] init() init valuta
2020-02-06 10:20:12.355004 I system Th{5772} [mcs_types/valuta.cpp:58] init() Current valuta char code: RUB
2020-02-06 10:20:12.355004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing SELECT NumCode, Symbol,MinFraction, InCirculation FROM cbo.Valuta WHERE CharCode = ?
2020-02-06 10:20:12.355004 I system Th{5772} [db/db_valuta_data_provider.cpp:37] load() append to valuta info:mcs::Iso4217InfoEx={code=RUB, num=643, symbol=руб, iso4217_fraction=0.010, in_circulation=0.010}
2020-02-06 10:20:12.356004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select id,denomination_value,denomination_type from cbo.valuta_denomination where valuta_CharCode = ?
2020-02-06 10:20:12.356004 I system Th{5772} [db/db_valuta_data_provider.cpp:58] load() append to valuta denomiation:
                                    x_vdid=1
                                    x_vdvl=10.00
                                    x_vddt=0
2020-02-06 10:20:12.356004 I system Th{5772} [db/db_valuta_data_provider.cpp:58] load() append to valuta denomiation:
                                    x_vdid=10
                                    x_vdvl=0.50
                                    x_vddt=1
2020-02-06 10:20:12.356004 I system Th{5772} [db/db_valuta_data_provider.cpp:58] load() append to valuta denomiation:
                                    x_vdid=11
                                    x_vdvl=1.00
                                    x_vddt=1
2020-02-06 10:20:12.356004 I system Th{5772} [db/db_valuta_data_provider.cpp:58] load() append to valuta denomiation:
                                    x_vdid=12
                                    x_vdvl=2.00
                                    x_vddt=1
2020-02-06 10:20:12.356004 I system Th{5772} [db/db_valuta_data_provider.cpp:58] load() append to valuta denomiation:
                                    x_vdid=13
                                    x_vdvl=5.00
                                    x_vddt=1
2020-02-06 10:20:12.356004 I system Th{5772} [db/db_valuta_data_provider.cpp:58] load() append to valuta denomiation:
                                    x_vdid=14
                                    x_vdvl=10.00
                                    x_vddt=1
2020-02-06 10:20:12.356004 I system Th{5772} [db/db_valuta_data_provider.cpp:58] load() append to valuta denomiation:
                                    x_vdid=2
                                    x_vdvl=50.00
                                    x_vddt=0
2020-02-06 10:20:12.356004 I system Th{5772} [db/db_valuta_data_provider.cpp:58] load() append to valuta denomiation:
                                    x_vdid=3
                                    x_vdvl=100.00
                                    x_vddt=0
2020-02-06 10:20:12.356004 I system Th{5772} [db/db_valuta_data_provider.cpp:58] load() append to valuta denomiation:
                                    x_vdid=4
                                    x_vdvl=500.00
                                    x_vddt=0
2020-02-06 10:20:12.356004 I system Th{5772} [db/db_valuta_data_provider.cpp:58] load() append to valuta denomiation:
                                    x_vdid=5
                                    x_vdvl=1000.00
                                    x_vddt=0
2020-02-06 10:20:12.356004 I system Th{5772} [db/db_valuta_data_provider.cpp:58] load() append to valuta denomiation:
                                    x_vdid=6
                                    x_vdvl=5000.00
                                    x_vddt=0
2020-02-06 10:20:12.356004 I system Th{5772} [db/db_valuta_data_provider.cpp:58] load() append to valuta denomiation:
                                    x_vdid=7
                                    x_vdvl=0.01
                                    x_vddt=1
2020-02-06 10:20:12.356004 I system Th{5772} [db/db_valuta_data_provider.cpp:58] load() append to valuta denomiation:
                                    x_vdid=8
                                    x_vdvl=0.05
                                    x_vddt=1
2020-02-06 10:20:12.356004 I system Th{5772} [db/db_valuta_data_provider.cpp:58] load() append to valuta denomiation:
                                    x_vdid=9
                                    x_vdvl=0.10
                                    x_vddt=1
2020-02-06 10:20:12.356004 I system Th{5772} [main/server_main.cpp:589] main() Checking config_db...
2020-02-06 10:20:12.356004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select a.articleid,sa.subarticleid    from azk.mcs_subarticles sa    join azk.mcs_articles a on (a.articleid = sa.articleid and a.external_str_id = (select  ext_id_bonus from cbo.special_articles) ) limit 1
2020-02-06 10:20:12.357004 D db Th{5772} [mcs/db/db_config.cpp:570] _spec_db_load() sa_bonus=1000100 a_bonus=1000099
2020-02-06 10:20:12.357004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select a.articleid,sa.subarticleid    from azk.mcs_subarticles sa    join azk.mcs_articles a on(a.articleid = sa.articleid and a.external_str_id = (select  ext_id_supply from cbo.special_articles) ) limit 1
2020-02-06 10:20:12.358004 D db Th{5772} [mcs/db/db_config.cpp:584] _spec_db_load() sa_supply=1000103 a_supply=1000102
2020-02-06 10:20:12.358004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select a.articleid,sa.subarticleid    from azk.mcs_subarticles sa    join azk.mcs_articles a on(a.articleid = sa.articleid and a.external_str_id = (select  ext_id_voucher from cbo.special_articles) ) limit 1
2020-02-06 10:20:12.358004 D db Th{5772} [mcs/db/db_config.cpp:598] _spec_db_load() sa_voucher=1000106 a_voucher=1000105
2020-02-06 10:20:12.358004 I db Th{5772} [mcs/special_article_ids.cpp:27] init() set g_bonus_article=1000099 g_supply_article=1000102 g_voucher_article=1000105
                               load g_bonus_subarticle=1000100 g_supply_subarticle=1000103 g_voucher_subarticle=1000106
2020-02-06 10:20:12.358004 I system Th{5772} [mcs/hds_fmt.cpp:612] fill_hds_snap_shots() try to analize cans
2020-02-06 10:20:12.358004 D system Th{5772} [mcs/hds_fmt.cpp:486] _next() can tagged name=1>
2020-02-06 10:20:12.358004 I system Th{5772} [mcs/hds_fmt.cpp:489] _next() append j=0-th elem for can=1
2020-02-06 10:20:12.358004 I system Th{5772} [mcs/hds_fmt.cpp:489] _next() append j=1-th elem for can=1
2020-02-06 10:20:12.358004 D system Th{5772} [mcs/hds_fmt.cpp:588] append_branch_with_root() j=0x000055EA78F7C020 m_g_e_ind=0 m_g_v_ind=1 size=1
2020-02-06 10:20:12.358004 D system Th{5772} [mcs/hds_fmt.cpp:597] append_branch_with_root() j=0x000055EA78F7C020
2020-02-06 10:20:12.358004 D system Th{5772} [mcs/hds_fmt.cpp:588] append_branch_with_root() j=0x000055EA790905B0 m_g_e_ind=1 m_g_v_ind=2 size=0
2020-02-06 10:20:12.358004 D system Th{5772} [mcs/hds_fmt.cpp:597] append_branch_with_root() j=0x000055EA790905B0
2020-02-06 10:20:12.358004 D system Th{5772} [mcs/hds_fmt.cpp:588] append_branch_with_root() j=0x0000000000000000 m_g_e_ind=2 m_g_v_ind=3 size=0
2020-02-06 10:20:12.358004 D system Th{5772} [mcs/hds_fmt.cpp:597] append_branch_with_root() j=0x0000000000000000
2020-02-06 10:20:12.358004 I system Th{5772} [mcs/hds_fmt.cpp:599] append_branch_with_root() m_verts.size()=3
2020-02-06 10:20:12.358004 D system Th{5772} [mcs/hds_fmt.cpp:486] _next() can tagged name=2>
2020-02-06 10:20:12.358004 I system Th{5772} [mcs/hds_fmt.cpp:489] _next() append j=0-th elem for can=2
2020-02-06 10:20:12.358004 I system Th{5772} [mcs/hds_fmt.cpp:489] _next() append j=1-th elem for can=2
2020-02-06 10:20:12.358004 D system Th{5772} [mcs/hds_fmt.cpp:588] append_branch_with_root() j=0x000055EA78DFC110 m_g_e_ind=2 m_g_v_ind=4 size=1
2020-02-06 10:20:12.358004 D system Th{5772} [mcs/hds_fmt.cpp:597] append_branch_with_root() j=0x000055EA78DFC110
2020-02-06 10:20:12.358004 D system Th{5772} [mcs/hds_fmt.cpp:588] append_branch_with_root() j=0x000055EA790D9AE0 m_g_e_ind=3 m_g_v_ind=5 size=0
2020-02-06 10:20:12.358004 D system Th{5772} [mcs/hds_fmt.cpp:597] append_branch_with_root() j=0x000055EA790D9AE0
2020-02-06 10:20:12.358004 D system Th{5772} [mcs/hds_fmt.cpp:588] append_branch_with_root() j=0x0000000000000000 m_g_e_ind=4 m_g_v_ind=6 size=0
2020-02-06 10:20:12.358004 D system Th{5772} [mcs/hds_fmt.cpp:597] append_branch_with_root() j=0x0000000000000000
2020-02-06 10:20:12.358004 I system Th{5772} [mcs/hds_fmt.cpp:599] append_branch_with_root() m_verts.size()=6
2020-02-06 10:20:12.358004 D system Th{5772} [mcs/hds_fmt.cpp:486] _next() can tagged name=3>
2020-02-06 10:20:12.359004 I system Th{5772} [mcs/hds_fmt.cpp:489] _next() append j=0-th elem for can=3
2020-02-06 10:20:12.359004 I system Th{5772} [mcs/hds_fmt.cpp:489] _next() append j=1-th elem for can=3
2020-02-06 10:20:12.359004 D system Th{5772} [mcs/hds_fmt.cpp:588] append_branch_with_root() j=0x000055EA78E26410 m_g_e_ind=4 m_g_v_ind=7 size=1
2020-02-06 10:20:12.359004 D system Th{5772} [mcs/hds_fmt.cpp:597] append_branch_with_root() j=0x000055EA78E26410
2020-02-06 10:20:12.359004 D system Th{5772} [mcs/hds_fmt.cpp:588] append_branch_with_root() j=0x000055EA79097A10 m_g_e_ind=5 m_g_v_ind=8 size=0
2020-02-06 10:20:12.359004 D system Th{5772} [mcs/hds_fmt.cpp:597] append_branch_with_root() j=0x000055EA79097A10
2020-02-06 10:20:12.359004 D system Th{5772} [mcs/hds_fmt.cpp:588] append_branch_with_root() j=0x0000000000000000 m_g_e_ind=6 m_g_v_ind=9 size=0
2020-02-06 10:20:12.359004 D system Th{5772} [mcs/hds_fmt.cpp:597] append_branch_with_root() j=0x0000000000000000
2020-02-06 10:20:12.359004 I system Th{5772} [mcs/hds_fmt.cpp:599] append_branch_with_root() m_verts.size()=9
2020-02-06 10:20:12.359004 D system Th{5772} [mcs/hds_fmt.cpp:486] _next() can tagged name=4>
2020-02-06 10:20:12.359004 I system Th{5772} [mcs/hds_fmt.cpp:489] _next() append j=0-th elem for can=4
2020-02-06 10:20:12.359004 I system Th{5772} [mcs/hds_fmt.cpp:489] _next() append j=1-th elem for can=4
2020-02-06 10:20:12.359004 D system Th{5772} [mcs/hds_fmt.cpp:588] append_branch_with_root() j=0x000055EA78F80620 m_g_e_ind=6 m_g_v_ind=10 size=1
2020-02-06 10:20:12.359004 D system Th{5772} [mcs/hds_fmt.cpp:597] append_branch_with_root() j=0x000055EA78F80620
2020-02-06 10:20:12.359004 D system Th{5772} [mcs/hds_fmt.cpp:588] append_branch_with_root() j=0x000055EA79024020 m_g_e_ind=7 m_g_v_ind=11 size=0
2020-02-06 10:20:12.359004 D system Th{5772} [mcs/hds_fmt.cpp:597] append_branch_with_root() j=0x000055EA79024020
2020-02-06 10:20:12.359004 D system Th{5772} [mcs/hds_fmt.cpp:588] append_branch_with_root() j=0x0000000000000000 m_g_e_ind=8 m_g_v_ind=12 size=0
2020-02-06 10:20:12.359004 D system Th{5772} [mcs/hds_fmt.cpp:597] append_branch_with_root() j=0x0000000000000000
2020-02-06 10:20:12.359004 I system Th{5772} [mcs/hds_fmt.cpp:599] append_branch_with_root() m_verts.size()=12
2020-02-06 10:20:12.359004 D system Th{5772} [mcs/hds_fmt.cpp:486] _next() can tagged name=5>
2020-02-06 10:20:12.359004 I system Th{5772} [mcs/hds_fmt.cpp:489] _next() append j=0-th elem for can=5
2020-02-06 10:20:12.359004 I system Th{5772} [mcs/hds_fmt.cpp:489] _next() append j=1-th elem for can=5
2020-02-06 10:20:12.359004 D system Th{5772} [mcs/hds_fmt.cpp:588] append_branch_with_root() j=0x000055EA7902A230 m_g_e_ind=8 m_g_v_ind=13 size=1
2020-02-06 10:20:12.359004 D system Th{5772} [mcs/hds_fmt.cpp:597] append_branch_with_root() j=0x000055EA7902A230
2020-02-06 10:20:12.359004 D system Th{5772} [mcs/hds_fmt.cpp:588] append_branch_with_root() j=0x000055EA7901D110 m_g_e_ind=9 m_g_v_ind=14 size=0
2020-02-06 10:20:12.359004 D system Th{5772} [mcs/hds_fmt.cpp:597] append_branch_with_root() j=0x000055EA7901D110
2020-02-06 10:20:12.359004 D system Th{5772} [mcs/hds_fmt.cpp:588] append_branch_with_root() j=0x0000000000000000 m_g_e_ind=10 m_g_v_ind=15 size=0
2020-02-06 10:20:12.359004 D system Th{5772} [mcs/hds_fmt.cpp:597] append_branch_with_root() j=0x0000000000000000
2020-02-06 10:20:12.359004 I system Th{5772} [mcs/hds_fmt.cpp:599] append_branch_with_root() m_verts.size()=15
2020-02-06 10:20:12.359004 D system Th{5772} [mcs/hds_fmt.cpp:486] _next() can tagged name=6>
2020-02-06 10:20:12.359004 I system Th{5772} [mcs/hds_fmt.cpp:489] _next() append j=0-th elem for can=6
2020-02-06 10:20:12.359004 I system Th{5772} [mcs/hds_fmt.cpp:489] _next() append j=1-th elem for can=6
2020-02-06 10:20:12.359004 D system Th{5772} [mcs/hds_fmt.cpp:588] append_branch_with_root() j=0x000055EA78F57280 m_g_e_ind=10 m_g_v_ind=16 size=1
2020-02-06 10:20:12.359004 D system Th{5772} [mcs/hds_fmt.cpp:597] append_branch_with_root() j=0x000055EA78F57280
2020-02-06 10:20:12.359004 D system Th{5772} [mcs/hds_fmt.cpp:588] append_branch_with_root() j=0x000055EA78F892E0 m_g_e_ind=11 m_g_v_ind=17 size=0
2020-02-06 10:20:12.359004 D system Th{5772} [mcs/hds_fmt.cpp:597] append_branch_with_root() j=0x000055EA78F892E0
2020-02-06 10:20:12.359004 D system Th{5772} [mcs/hds_fmt.cpp:588] append_branch_with_root() j=0x0000000000000000 m_g_e_ind=12 m_g_v_ind=18 size=0
2020-02-06 10:20:12.359004 D system Th{5772} [mcs/hds_fmt.cpp:597] append_branch_with_root() j=0x0000000000000000
2020-02-06 10:20:12.359004 I system Th{5772} [mcs/hds_fmt.cpp:599] append_branch_with_root() m_verts.size()=18
2020-02-06 10:20:12.359004 I system Th{5772} [mcs/hds_fmt.cpp:617] fill_hds_snap_shots() try to analize mjs
2020-02-06 10:20:12.359004 D system Th{5772} [mcs/hds_fmt.cpp:635] fill_hds_snap_shots() graph(1580973612)=
                                   graph G {
                                   0[ shape=doublecircle label=" i=0;R<1>"];
                                   1[ shape=box label=" i=1;"];
                                   2[ shape=hexagon label=" i=2;"];
                                   3[ shape=doublecircle label=" i=3;R<2>"];
                                   4[ shape=box label=" i=4;"];
                                   5[ shape=hexagon label=" i=5;"];
                                   6[ shape=doublecircle label=" i=6;R<3>"];
                                   7[ shape=box label=" i=7;"];
                                   8[ shape=hexagon label=" i=8;"];
                                   9[ shape=doublecircle label=" i=9;R<4>"];
                                   10[ shape=box label=" i=10;"];
                                   11[ shape=hexagon label=" i=11;"];
                                   12[ shape=doublecircle label=" i=12;R<5>"];
                                   13[ shape=box label=" i=13;"];
                                   14[ shape=hexagon label=" i=14;"];
                                   15[ shape=doublecircle label=" i=15;R<6>"];
                                   16[ shape=box label=" i=16;"];
                                   17[ shape=hexagon label=" i=17;"];
                                   0--1 [label="0"];
                                   0--2 [label="1"];
                                   3--4 [label="2"];
                                   3--5 [label="3"];
                                   6--7 [label="4"];
                                   6--8 [label="5"];
                                   9--10 [label="6"];
                                   9--11 [label="7"];
                                   12--13 [label="8"];
                                   12--14 [label="9"];
                                   15--16 [label="10"];
                                   15--17 [label="11"];
                                   }
                                   

2020-02-06 10:20:12.359004 D system Th{5772} [mcs/hds_fmt.cpp:417] is_valid() m_evm.size=0>
2020-02-06 10:20:12.359004 D system Th{5772} [mcs/hds_fmt.cpp:651] fill_hds_snap_shots() can skipped graph(1580973612,c=1)=
                                   graph G {
                                   1[ shape=box label=" i=1;"];
                                   2[ shape=hexagon label=" i=2;"];
                                   4[ shape=box label=" i=4;"];
                                   5[ shape=hexagon label=" i=5;"];
                                   7[ shape=box label=" i=7;"];
                                   8[ shape=hexagon label=" i=8;"];
                                   10[ shape=box label=" i=10;"];
                                   11[ shape=hexagon label=" i=11;"];
                                   13[ shape=box label=" i=13;"];
                                   14[ shape=hexagon label=" i=14;"];
                                   16[ shape=box label=" i=16;"];
                                   17[ shape=hexagon label=" i=17;"];
                                   }
                                   

2020-02-06 10:20:12.359004 I system Th{5772} [mcs/hds_fmt.cpp:218] ~HdsVisitor() regnum=18446744073709551615
2020-02-06 10:20:12.359004 D system Th{5772} [mcs/hds_fmt.cpp:231] start_vertex() start_vertex > 1
2020-02-06 10:20:12.359004 D system Th{5772} [mcs/hds_fmt.cpp:256] discover_vertex() discover_vertex > 1
2020-02-06 10:20:12.359004 E system Th{5772} [mcs/hds_fmt.cpp:285] discover_vertex() trunkpipeline found
2020-02-06 10:20:12.359004 D system Th{5772} [mcs/hds_fmt.cpp:231] start_vertex() start_vertex > 2
2020-02-06 10:20:12.359004 I system Th{5772} [mcs/hds_fmt.cpp:348] analiz_previous_region()  found region cn=0pl=1 nk=0 de=0 m_wf=FILT_CANS_SKIP== m_cp=AMPTIR_Deny== 
2020-02-06 10:20:12.359004 D system Th{5772} [mcs/hds_fmt.cpp:256] discover_vertex() discover_vertex > 2
2020-02-06 10:20:12.359004 E system Th{5772} [mcs/hds_fmt.cpp:303] discover_vertex() FillingNeck found
2020-02-06 10:20:12.359004 D system Th{5772} [mcs/hds_fmt.cpp:231] start_vertex() start_vertex > 4
2020-02-06 10:20:12.359004 I system Th{5772} [mcs/hds_fmt.cpp:348] analiz_previous_region()  found region cn=0pl=0 nk=1 de=0 m_wf=FILT_CANS_SKIP== m_cp=AMPTIR_Deny== 
2020-02-06 10:20:12.359004 D system Th{5772} [mcs/hds_fmt.cpp:256] discover_vertex() discover_vertex > 4
2020-02-06 10:20:12.359004 E system Th{5772} [mcs/hds_fmt.cpp:285] discover_vertex() trunkpipeline found
2020-02-06 10:20:12.359004 D system Th{5772} [mcs/hds_fmt.cpp:231] start_vertex() start_vertex > 5
2020-02-06 10:20:12.359004 I system Th{5772} [mcs/hds_fmt.cpp:348] analiz_previous_region()  found region cn=0pl=1 nk=0 de=0 m_wf=FILT_CANS_SKIP== m_cp=AMPTIR_Deny== 
2020-02-06 10:20:12.359004 D system Th{5772} [mcs/hds_fmt.cpp:256] discover_vertex() discover_vertex > 5
2020-02-06 10:20:12.359004 E system Th{5772} [mcs/hds_fmt.cpp:303] discover_vertex() FillingNeck found
2020-02-06 10:20:12.359004 D system Th{5772} [mcs/hds_fmt.cpp:231] start_vertex() start_vertex > 7
2020-02-06 10:20:12.359004 I system Th{5772} [mcs/hds_fmt.cpp:348] analiz_previous_region()  found region cn=0pl=0 nk=1 de=0 m_wf=FILT_CANS_SKIP== m_cp=AMPTIR_Deny== 
2020-02-06 10:20:12.359004 D system Th{5772} [mcs/hds_fmt.cpp:256] discover_vertex() discover_vertex > 7
2020-02-06 10:20:12.359004 E system Th{5772} [mcs/hds_fmt.cpp:285] discover_vertex() trunkpipeline found
2020-02-06 10:20:12.359004 D system Th{5772} [mcs/hds_fmt.cpp:231] start_vertex() start_vertex > 8
2020-02-06 10:20:12.359004 I system Th{5772} [mcs/hds_fmt.cpp:348] analiz_previous_region()  found region cn=0pl=1 nk=0 de=0 m_wf=FILT_CANS_SKIP== m_cp=AMPTIR_Deny== 
2020-02-06 10:20:12.359004 D system Th{5772} [mcs/hds_fmt.cpp:256] discover_vertex() discover_vertex > 8
2020-02-06 10:20:12.359004 E system Th{5772} [mcs/hds_fmt.cpp:303] discover_vertex() FillingNeck found
2020-02-06 10:20:12.359004 D system Th{5772} [mcs/hds_fmt.cpp:231] start_vertex() start_vertex > 10
2020-02-06 10:20:12.359004 I system Th{5772} [mcs/hds_fmt.cpp:348] analiz_previous_region()  found region cn=0pl=0 nk=1 de=0 m_wf=FILT_CANS_SKIP== m_cp=AMPTIR_Deny== 
2020-02-06 10:20:12.359004 D system Th{5772} [mcs/hds_fmt.cpp:256] discover_vertex() discover_vertex > 10
2020-02-06 10:20:12.359004 E system Th{5772} [mcs/hds_fmt.cpp:285] discover_vertex() trunkpipeline found
2020-02-06 10:20:12.359004 D system Th{5772} [mcs/hds_fmt.cpp:231] start_vertex() start_vertex > 11
2020-02-06 10:20:12.359004 I system Th{5772} [mcs/hds_fmt.cpp:348] analiz_previous_region()  found region cn=0pl=1 nk=0 de=0 m_wf=FILT_CANS_SKIP== m_cp=AMPTIR_Deny== 
2020-02-06 10:20:12.359004 D system Th{5772} [mcs/hds_fmt.cpp:256] discover_vertex() discover_vertex > 11
2020-02-06 10:20:12.359004 E system Th{5772} [mcs/hds_fmt.cpp:303] discover_vertex() FillingNeck found
2020-02-06 10:20:12.359004 D system Th{5772} [mcs/hds_fmt.cpp:231] start_vertex() start_vertex > 13
2020-02-06 10:20:12.359004 I system Th{5772} [mcs/hds_fmt.cpp:348] analiz_previous_region()  found region cn=0pl=0 nk=1 de=0 m_wf=FILT_CANS_SKIP== m_cp=AMPTIR_Deny== 
2020-02-06 10:20:12.359004 D system Th{5772} [mcs/hds_fmt.cpp:256] discover_vertex() discover_vertex > 13
2020-02-06 10:20:12.359004 E system Th{5772} [mcs/hds_fmt.cpp:285] discover_vertex() trunkpipeline found
2020-02-06 10:20:12.359004 D system Th{5772} [mcs/hds_fmt.cpp:231] start_vertex() start_vertex > 14
2020-02-06 10:20:12.359004 I system Th{5772} [mcs/hds_fmt.cpp:348] analiz_previous_region()  found region cn=0pl=1 nk=0 de=0 m_wf=FILT_CANS_SKIP== m_cp=AMPTIR_Deny== 
2020-02-06 10:20:12.359004 D system Th{5772} [mcs/hds_fmt.cpp:256] discover_vertex() discover_vertex > 14
2020-02-06 10:20:12.359004 E system Th{5772} [mcs/hds_fmt.cpp:303] discover_vertex() FillingNeck found
2020-02-06 10:20:12.359004 D system Th{5772} [mcs/hds_fmt.cpp:231] start_vertex() start_vertex > 16
2020-02-06 10:20:12.359004 I system Th{5772} [mcs/hds_fmt.cpp:348] analiz_previous_region()  found region cn=0pl=0 nk=1 de=0 m_wf=FILT_CANS_SKIP== m_cp=AMPTIR_Deny== 
2020-02-06 10:20:12.359004 D system Th{5772} [mcs/hds_fmt.cpp:256] discover_vertex() discover_vertex > 16
2020-02-06 10:20:12.359004 E system Th{5772} [mcs/hds_fmt.cpp:285] discover_vertex() trunkpipeline found
2020-02-06 10:20:12.359004 D system Th{5772} [mcs/hds_fmt.cpp:231] start_vertex() start_vertex > 17
2020-02-06 10:20:12.359004 I system Th{5772} [mcs/hds_fmt.cpp:348] analiz_previous_region()  found region cn=0pl=1 nk=0 de=0 m_wf=FILT_CANS_SKIP== m_cp=AMPTIR_Deny== 
2020-02-06 10:20:12.359004 D system Th{5772} [mcs/hds_fmt.cpp:256] discover_vertex() discover_vertex > 17
2020-02-06 10:20:12.359004 E system Th{5772} [mcs/hds_fmt.cpp:303] discover_vertex() FillingNeck found
2020-02-06 10:20:12.359004 I system Th{5772} [mcs/hds_fmt.cpp:218] ~HdsVisitor() regnum=11
2020-02-06 10:20:12.359004 I system Th{5772} [mcs/hds_fmt.cpp:348] analiz_previous_region()  found region cn=0pl=0 nk=1 de=0 m_wf=FILT_CANS_SKIP== m_cp=AMPTIR_Deny== 
2020-02-06 10:20:12.359004 I system Th{5772} [mcs/hds_fmt.cpp:218] ~HdsVisitor() regnum=18446744073709551615
2020-02-06 10:20:12.359004 I system Th{5772} [mcs/hds_fmt.cpp:218] ~HdsVisitor() regnum=18446744073709551615
2020-02-06 10:20:12.359004 I system Th{5772} [mcs/hds_fmt.cpp:680] fill_hds_snap_shots() next step k=0
2020-02-06 10:20:12.359004 I system Th{5772} [mcs/hds_fmt.cpp:684] fill_hds_snap_shots() next step
2020-02-06 10:20:12.359004 D system Th{5772} [mcs/hds_fmt.cpp:711] fill_hds_snap_shots() filtered graph(1580973612,c=2)=
                                   graph G {
                                   0[ shape=doublecircle label=" i=0;R<1>"];
                                   1[ shape=box label=" i=1;"];
                                   2[ shape=hexagon label=" i=2;"];
                                   3[ shape=doublecircle label=" i=3;R<2>"];
                                   4[ shape=box label=" i=4;"];
                                   5[ shape=hexagon label=" i=5;"];
                                   6[ shape=doublecircle label=" i=6;R<3>"];
                                   7[ shape=box label=" i=7;"];
                                   8[ shape=hexagon label=" i=8;"];
                                   9[ shape=doublecircle label=" i=9;R<4>"];
                                   10[ shape=box label=" i=10;"];
                                   11[ shape=hexagon label=" i=11;"];
                                   12[ shape=doublecircle label=" i=12;R<5>"];
                                   13[ shape=box label=" i=13;"];
                                   14[ shape=hexagon label=" i=14;"];
                                   15[ shape=doublecircle label=" i=15;R<6>"];
                                   16[ shape=box label=" i=16;"];
                                   17[ shape=hexagon label=" i=17;"];
                                   0--1 [label="0"];
                                   0--2 [label="1"];
                                   3--4 [label="2"];
                                   3--5 [label="3"];
                                   6--7 [label="4"];
                                   6--8 [label="5"];
                                   9--10 [label="6"];
                                   9--11 [label="7"];
                                   12--13 [label="8"];
                                   12--14 [label="9"];
                                   15--16 [label="10"];
                                   15--17 [label="11"];
                                   }
                                   

2020-02-06 10:20:12.359004 I system Th{5772} [mcs/hds_fmt.cpp:218] ~HdsVisitor() regnum=18446744073709551615
2020-02-06 10:20:12.359004 D system Th{5772} [mcs/hds_fmt.cpp:231] start_vertex() start_vertex > 0
2020-02-06 10:20:12.359004 D system Th{5772} [mcs/hds_fmt.cpp:256] discover_vertex() discover_vertex > 0
2020-02-06 10:20:12.359004 D system Th{5772} [mcs/hds_fmt.cpp:275] discover_vertex()  this is can=1
2020-02-06 10:20:12.359004 D system Th{5772} [mcs/hds_fmt.cpp:323] tree_edge() discover_ tree edge> 0
2020-02-06 10:20:12.359004 D system Th{5772} [mcs/hds_fmt.cpp:256] discover_vertex() discover_vertex > 1
2020-02-06 10:20:12.359004 E system Th{5772} [mcs/hds_fmt.cpp:285] discover_vertex() trunkpipeline found
2020-02-06 10:20:12.359004 D system Th{5772} [mcs/hds_fmt.cpp:313] back_edge() discover_ back edge> 0
2020-02-06 10:20:12.359004 D system Th{5772} [mcs/hds_fmt.cpp:323] tree_edge() discover_ tree edge> 1
2020-02-06 10:20:12.359004 D system Th{5772} [mcs/hds_fmt.cpp:256] discover_vertex() discover_vertex > 2
2020-02-06 10:20:12.359004 E system Th{5772} [mcs/hds_fmt.cpp:303] discover_vertex() FillingNeck found
2020-02-06 10:20:12.359004 D system Th{5772} [mcs/hds_fmt.cpp:313] back_edge() discover_ back edge> 1
2020-02-06 10:20:12.359004 D system Th{5772} [mcs/hds_fmt.cpp:231] start_vertex() start_vertex > 3
2020-02-06 10:20:12.359004 I system Th{5772} [mcs/hds_fmt.cpp:348] analiz_previous_region()  found region cn=1pl=1 nk=1 de=0 m_wf=FILT_VALVE_PERM== m_cp=AMPTIR_Deny== 
2020-02-06 10:20:12.359004 D system Th{5772} [mcs/hds_fmt.cpp:256] discover_vertex() discover_vertex > 3
2020-02-06 10:20:12.359004 D system Th{5772} [mcs/hds_fmt.cpp:275] discover_vertex()  this is can=2
2020-02-06 10:20:12.359004 D system Th{5772} [mcs/hds_fmt.cpp:323] tree_edge() discover_ tree edge> 2
2020-02-06 10:20:12.359004 D system Th{5772} [mcs/hds_fmt.cpp:256] discover_vertex() discover_vertex > 4
2020-02-06 10:20:12.359004 E system Th{5772} [mcs/hds_fmt.cpp:285] discover_vertex() trunkpipeline found
2020-02-06 10:20:12.359004 D system Th{5772} [mcs/hds_fmt.cpp:313] back_edge() discover_ back edge> 2
2020-02-06 10:20:12.359004 D system Th{5772} [mcs/hds_fmt.cpp:323] tree_edge() discover_ tree edge> 3
2020-02-06 10:20:12.359004 D system Th{5772} [mcs/hds_fmt.cpp:256] discover_vertex() discover_vertex > 5
2020-02-06 10:20:12.359004 E system Th{5772} [mcs/hds_fmt.cpp:303] discover_vertex() FillingNeck found
2020-02-06 10:20:12.359004 D system Th{5772} [mcs/hds_fmt.cpp:313] back_edge() discover_ back edge> 3
2020-02-06 10:20:12.359004 D system Th{5772} [mcs/hds_fmt.cpp:231] start_vertex() start_vertex > 6
2020-02-06 10:20:12.359004 I system Th{5772} [mcs/hds_fmt.cpp:348] analiz_previous_region()  found region cn=1pl=1 nk=1 de=0 m_wf=FILT_VALVE_PERM== m_cp=AMPTIR_Deny== 
2020-02-06 10:20:12.359004 D system Th{5772} [mcs/hds_fmt.cpp:256] discover_vertex() discover_vertex > 6
2020-02-06 10:20:12.359004 D system Th{5772} [mcs/hds_fmt.cpp:275] discover_vertex()  this is can=3
2020-02-06 10:20:12.359004 D system Th{5772} [mcs/hds_fmt.cpp:323] tree_edge() discover_ tree edge> 4
2020-02-06 10:20:12.360004 D system Th{5772} [mcs/hds_fmt.cpp:256] discover_vertex() discover_vertex > 7
2020-02-06 10:20:12.360004 E system Th{5772} [mcs/hds_fmt.cpp:285] discover_vertex() trunkpipeline found
2020-02-06 10:20:12.360004 D system Th{5772} [mcs/hds_fmt.cpp:313] back_edge() discover_ back edge> 4
2020-02-06 10:20:12.360004 D system Th{5772} [mcs/hds_fmt.cpp:323] tree_edge() discover_ tree edge> 5
2020-02-06 10:20:12.360004 D system Th{5772} [mcs/hds_fmt.cpp:256] discover_vertex() discover_vertex > 8
2020-02-06 10:20:12.360004 E system Th{5772} [mcs/hds_fmt.cpp:303] discover_vertex() FillingNeck found
2020-02-06 10:20:12.360004 D system Th{5772} [mcs/hds_fmt.cpp:313] back_edge() discover_ back edge> 5
2020-02-06 10:20:12.360004 D system Th{5772} [mcs/hds_fmt.cpp:231] start_vertex() start_vertex > 9
2020-02-06 10:20:12.360004 I system Th{5772} [mcs/hds_fmt.cpp:348] analiz_previous_region()  found region cn=1pl=1 nk=1 de=0 m_wf=FILT_VALVE_PERM== m_cp=AMPTIR_Deny== 
2020-02-06 10:20:12.360004 D system Th{5772} [mcs/hds_fmt.cpp:256] discover_vertex() discover_vertex > 9
2020-02-06 10:20:12.360004 D system Th{5772} [mcs/hds_fmt.cpp:275] discover_vertex()  this is can=4
2020-02-06 10:20:12.360004 D system Th{5772} [mcs/hds_fmt.cpp:323] tree_edge() discover_ tree edge> 6
2020-02-06 10:20:12.360004 D system Th{5772} [mcs/hds_fmt.cpp:256] discover_vertex() discover_vertex > 10
2020-02-06 10:20:12.360004 E system Th{5772} [mcs/hds_fmt.cpp:285] discover_vertex() trunkpipeline found
2020-02-06 10:20:12.360004 D system Th{5772} [mcs/hds_fmt.cpp:313] back_edge() discover_ back edge> 6
2020-02-06 10:20:12.360004 D system Th{5772} [mcs/hds_fmt.cpp:323] tree_edge() discover_ tree edge> 7
2020-02-06 10:20:12.360004 D system Th{5772} [mcs/hds_fmt.cpp:256] discover_vertex() discover_vertex > 11
2020-02-06 10:20:12.360004 E system Th{5772} [mcs/hds_fmt.cpp:303] discover_vertex() FillingNeck found
2020-02-06 10:20:12.360004 D system Th{5772} [mcs/hds_fmt.cpp:313] back_edge() discover_ back edge> 7
2020-02-06 10:20:12.360004 D system Th{5772} [mcs/hds_fmt.cpp:231] start_vertex() start_vertex > 12
2020-02-06 10:20:12.360004 I system Th{5772} [mcs/hds_fmt.cpp:348] analiz_previous_region()  found region cn=1pl=1 nk=1 de=0 m_wf=FILT_VALVE_PERM== m_cp=AMPTIR_Deny== 
2020-02-06 10:20:12.360004 D system Th{5772} [mcs/hds_fmt.cpp:256] discover_vertex() discover_vertex > 12
2020-02-06 10:20:12.360004 D system Th{5772} [mcs/hds_fmt.cpp:275] discover_vertex()  this is can=5
2020-02-06 10:20:12.360004 D system Th{5772} [mcs/hds_fmt.cpp:323] tree_edge() discover_ tree edge> 8
2020-02-06 10:20:12.360004 D system Th{5772} [mcs/hds_fmt.cpp:256] discover_vertex() discover_vertex > 13
2020-02-06 10:20:12.360004 E system Th{5772} [mcs/hds_fmt.cpp:285] discover_vertex() trunkpipeline found
2020-02-06 10:20:12.360004 D system Th{5772} [mcs/hds_fmt.cpp:313] back_edge() discover_ back edge> 8
2020-02-06 10:20:12.360004 D system Th{5772} [mcs/hds_fmt.cpp:323] tree_edge() discover_ tree edge> 9
2020-02-06 10:20:12.360004 D system Th{5772} [mcs/hds_fmt.cpp:256] discover_vertex() discover_vertex > 14
2020-02-06 10:20:12.360004 E system Th{5772} [mcs/hds_fmt.cpp:303] discover_vertex() FillingNeck found
2020-02-06 10:20:12.360004 D system Th{5772} [mcs/hds_fmt.cpp:313] back_edge() discover_ back edge> 9
2020-02-06 10:20:12.360004 D system Th{5772} [mcs/hds_fmt.cpp:231] start_vertex() start_vertex > 15
2020-02-06 10:20:12.360004 I system Th{5772} [mcs/hds_fmt.cpp:348] analiz_previous_region()  found region cn=1pl=1 nk=1 de=0 m_wf=FILT_VALVE_PERM== m_cp=AMPTIR_Deny== 
2020-02-06 10:20:12.360004 D system Th{5772} [mcs/hds_fmt.cpp:256] discover_vertex() discover_vertex > 15
2020-02-06 10:20:12.360004 D system Th{5772} [mcs/hds_fmt.cpp:275] discover_vertex()  this is can=6
2020-02-06 10:20:12.360004 D system Th{5772} [mcs/hds_fmt.cpp:323] tree_edge() discover_ tree edge> 10
2020-02-06 10:20:12.360004 D system Th{5772} [mcs/hds_fmt.cpp:256] discover_vertex() discover_vertex > 16
2020-02-06 10:20:12.360004 E system Th{5772} [mcs/hds_fmt.cpp:285] discover_vertex() trunkpipeline found
2020-02-06 10:20:12.360004 D system Th{5772} [mcs/hds_fmt.cpp:313] back_edge() discover_ back edge> 10
2020-02-06 10:20:12.360004 D system Th{5772} [mcs/hds_fmt.cpp:323] tree_edge() discover_ tree edge> 11
2020-02-06 10:20:12.360004 D system Th{5772} [mcs/hds_fmt.cpp:256] discover_vertex() discover_vertex > 17
2020-02-06 10:20:12.360004 E system Th{5772} [mcs/hds_fmt.cpp:303] discover_vertex() FillingNeck found
2020-02-06 10:20:12.360004 D system Th{5772} [mcs/hds_fmt.cpp:313] back_edge() discover_ back edge> 11
2020-02-06 10:20:12.360004 I system Th{5772} [mcs/hds_fmt.cpp:218] ~HdsVisitor() regnum=5
2020-02-06 10:20:12.360004 I system Th{5772} [mcs/hds_fmt.cpp:348] analiz_previous_region()  found region cn=1pl=1 nk=1 de=0 m_wf=FILT_VALVE_PERM== m_cp=AMPTIR_Deny== 
2020-02-06 10:20:12.360004 I system Th{5772} [mcs/hds_fmt.cpp:218] ~HdsVisitor() regnum=18446744073709551615
2020-02-06 10:20:12.360004 I system Th{5772} [mcs/hds_fmt.cpp:218] ~HdsVisitor() regnum=18446744073709551615
2020-02-06 10:20:12.360004 I system Th{5772} [mcs/hds_fmt.cpp:748] fill_hds_snap_shots() analize region r=0
2020-02-06 10:20:12.360004 I system Th{5772} [mcs/hds_fmt.cpp:748] fill_hds_snap_shots() analize region r=1
2020-02-06 10:20:12.360004 I system Th{5772} [mcs/hds_fmt.cpp:748] fill_hds_snap_shots() analize region r=2
2020-02-06 10:20:12.360004 I system Th{5772} [mcs/hds_fmt.cpp:748] fill_hds_snap_shots() analize region r=3
2020-02-06 10:20:12.360004 I system Th{5772} [mcs/hds_fmt.cpp:748] fill_hds_snap_shots() analize region r=4
2020-02-06 10:20:12.360004 I system Th{5772} [mcs/hds_fmt.cpp:748] fill_hds_snap_shots() analize region r=5
2020-02-06 10:20:12.360004 I system Th{5772} [mcs/hds_fmt.cpp:792] fill_hds_snap_shots() ok_all_rgs=1
2020-02-06 10:20:12.360004 I system Th{5772} [mcs/hds_fmt.cpp:795] fill_hds_snap_shots() okay this variant is not contradictable check duplicate mapping
2020-02-06 10:20:12.360004 I system Th{5772} [mcs/hds_fmt.cpp:835] fill_hds_snap_shots() okay insert new combination
2020-02-06 10:20:12.360004 I system Th{5772} [mcs/hds_fmt.cpp:863] fill_hds_snap_shots() TOTAL DIFFERED PERMUTATIONS=1
2020-02-06 10:20:12.360004 E system Th{5772} [mcs/db/db_config.cpp:449] _rebuild_can_to_nozzle() Now we check config consistancy with db templates
2020-02-06 10:20:12.360004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select hds.id,hds.disabled,n.trkno,dn.nozzle,dn.canid,c.storageid,t.start_regime from azk.mcs_hds as hds join azk.mcs_hds_detail as dn on (hds.id = dn.hds_id)  join azk.mcs_dyn_nozzles as n on (n.nozzle = dn.nozzle)  join azk.mcs_cans as c on (c.canid = dn.canid)  join azk.mcs_trks as t on (n.trkno = t.trkno)  order by hds.id desc 
2020-02-06 10:20:12.368004 I db Th{5772} [mcs/db/hds_db.cpp:70] _insert_data_row_data_in_map() fetch trk=1> nozzle=15> can=1 stor=2 regime=TRKSTARTREGIME_AUTO
2020-02-06 10:20:12.368004 I db Th{5772} [mcs/db/hds_db.cpp:70] _insert_data_row_data_in_map() fetch trk=2> nozzle=25> can=1 stor=2 regime=TRKSTARTREGIME_AUTO
2020-02-06 10:20:12.368004 I db Th{5772} [mcs/db/hds_db.cpp:70] _insert_data_row_data_in_map() fetch trk=3> nozzle=35> can=1 stor=2 regime=TRKSTARTREGIME_AUTO
2020-02-06 10:20:12.368004 I db Th{5772} [mcs/db/hds_db.cpp:70] _insert_data_row_data_in_map() fetch trk=4> nozzle=45> can=1 stor=2 regime=TRKSTARTREGIME_AUTO
2020-02-06 10:20:12.368004 I db Th{5772} [mcs/db/hds_db.cpp:70] _insert_data_row_data_in_map() fetch trk=5> nozzle=55> can=1 stor=2 regime=TRKSTARTREGIME_AUTO
2020-02-06 10:20:12.368004 I db Th{5772} [mcs/db/hds_db.cpp:70] _insert_data_row_data_in_map() fetch trk=6> nozzle=65> can=1 stor=2 regime=TRKSTARTREGIME_AUTO
2020-02-06 10:20:12.368004 I db Th{5772} [mcs/db/hds_db.cpp:70] _insert_data_row_data_in_map() fetch trk=1> nozzle=14> can=2 stor=2 regime=TRKSTARTREGIME_AUTO
2020-02-06 10:20:12.368004 I db Th{5772} [mcs/db/hds_db.cpp:70] _insert_data_row_data_in_map() fetch trk=2> nozzle=24> can=2 stor=2 regime=TRKSTARTREGIME_AUTO
2020-02-06 10:20:12.368004 I db Th{5772} [mcs/db/hds_db.cpp:70] _insert_data_row_data_in_map() fetch trk=3> nozzle=34> can=2 stor=2 regime=TRKSTARTREGIME_AUTO
2020-02-06 10:20:12.368004 I db Th{5772} [mcs/db/hds_db.cpp:70] _insert_data_row_data_in_map() fetch trk=4> nozzle=44> can=2 stor=2 regime=TRKSTARTREGIME_AUTO
2020-02-06 10:20:12.368004 I db Th{5772} [mcs/db/hds_db.cpp:70] _insert_data_row_data_in_map() fetch trk=5> nozzle=54> can=2 stor=2 regime=TRKSTARTREGIME_AUTO
2020-02-06 10:20:12.368004 I db Th{5772} [mcs/db/hds_db.cpp:70] _insert_data_row_data_in_map() fetch trk=6> nozzle=64> can=2 stor=2 regime=TRKSTARTREGIME_AUTO
2020-02-06 10:20:12.368004 I db Th{5772} [mcs/db/hds_db.cpp:70] _insert_data_row_data_in_map() fetch trk=1> nozzle=13> can=3 stor=2 regime=TRKSTARTREGIME_AUTO
2020-02-06 10:20:12.368004 I db Th{5772} [mcs/db/hds_db.cpp:70] _insert_data_row_data_in_map() fetch trk=2> nozzle=23> can=3 stor=2 regime=TRKSTARTREGIME_AUTO
2020-02-06 10:20:12.368004 I db Th{5772} [mcs/db/hds_db.cpp:70] _insert_data_row_data_in_map() fetch trk=3> nozzle=33> can=3 stor=2 regime=TRKSTARTREGIME_AUTO
2020-02-06 10:20:12.368004 I db Th{5772} [mcs/db/hds_db.cpp:70] _insert_data_row_data_in_map() fetch trk=4> nozzle=43> can=3 stor=2 regime=TRKSTARTREGIME_AUTO
2020-02-06 10:20:12.368004 I db Th{5772} [mcs/db/hds_db.cpp:70] _insert_data_row_data_in_map() fetch trk=5> nozzle=53> can=3 stor=2 regime=TRKSTARTREGIME_AUTO
2020-02-06 10:20:12.368004 I db Th{5772} [mcs/db/hds_db.cpp:70] _insert_data_row_data_in_map() fetch trk=6> nozzle=63> can=3 stor=2 regime=TRKSTARTREGIME_AUTO
2020-02-06 10:20:12.368004 I db Th{5772} [mcs/db/hds_db.cpp:70] _insert_data_row_data_in_map() fetch trk=1> nozzle=12> can=4 stor=2 regime=TRKSTARTREGIME_AUTO
2020-02-06 10:20:12.368004 I db Th{5772} [mcs/db/hds_db.cpp:70] _insert_data_row_data_in_map() fetch trk=2> nozzle=22> can=4 stor=2 regime=TRKSTARTREGIME_AUTO
2020-02-06 10:20:12.368004 I db Th{5772} [mcs/db/hds_db.cpp:70] _insert_data_row_data_in_map() fetch trk=3> nozzle=32> can=4 stor=2 regime=TRKSTARTREGIME_AUTO
2020-02-06 10:20:12.368004 I db Th{5772} [mcs/db/hds_db.cpp:70] _insert_data_row_data_in_map() fetch trk=4> nozzle=42> can=4 stor=2 regime=TRKSTARTREGIME_AUTO
2020-02-06 10:20:12.368004 I db Th{5772} [mcs/db/hds_db.cpp:70] _insert_data_row_data_in_map() fetch trk=5> nozzle=52> can=4 stor=2 regime=TRKSTARTREGIME_AUTO
2020-02-06 10:20:12.368004 I db Th{5772} [mcs/db/hds_db.cpp:70] _insert_data_row_data_in_map() fetch trk=6> nozzle=62> can=4 stor=2 regime=TRKSTARTREGIME_AUTO
2020-02-06 10:20:12.368004 I db Th{5772} [mcs/db/hds_db.cpp:70] _insert_data_row_data_in_map() fetch trk=1> nozzle=11> can=5 stor=2 regime=TRKSTARTREGIME_AUTO
2020-02-06 10:20:12.368004 I db Th{5772} [mcs/db/hds_db.cpp:70] _insert_data_row_data_in_map() fetch trk=2> nozzle=21> can=5 stor=2 regime=TRKSTARTREGIME_AUTO
2020-02-06 10:20:12.368004 I db Th{5772} [mcs/db/hds_db.cpp:70] _insert_data_row_data_in_map() fetch trk=3> nozzle=31> can=5 stor=2 regime=TRKSTARTREGIME_AUTO
2020-02-06 10:20:12.368004 I db Th{5772} [mcs/db/hds_db.cpp:70] _insert_data_row_data_in_map() fetch trk=4> nozzle=41> can=5 stor=2 regime=TRKSTARTREGIME_AUTO
2020-02-06 10:20:12.368004 I db Th{5772} [mcs/db/hds_db.cpp:70] _insert_data_row_data_in_map() fetch trk=5> nozzle=51> can=5 stor=2 regime=TRKSTARTREGIME_AUTO
2020-02-06 10:20:12.368004 I db Th{5772} [mcs/db/hds_db.cpp:70] _insert_data_row_data_in_map() fetch trk=6> nozzle=61> can=5 stor=2 regime=TRKSTARTREGIME_AUTO
2020-02-06 10:20:12.368004 I db Th{5772} [mcs/db/hds_db.cpp:70] _insert_data_row_data_in_map() fetch trk=7> nozzle=71> can=6 stor=2 regime=TRKSTARTREGIME_OPERATOR
2020-02-06 10:20:12.368004 I db Th{5772} [mcs/db/hds_db.cpp:70] _insert_data_row_data_in_map() fetch trk=8> nozzle=81> can=6 stor=2 regime=TRKSTARTREGIME_OPERATOR
2020-02-06 10:20:12.368004 I db Th{5772} [mcs/db/hds_db.cpp:70] _insert_data_row_data_in_map() fetch trk=8> nozzle=82> can=6 stor=2 regime=TRKSTARTREGIME_OPERATOR
2020-02-06 10:20:12.368004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select hds_id,valve_id,valve_opened,valvename from azk.mcs_hds_valve_states as vs join azk.mcs_hds_valves as v on (vs.valve_id = v.id)
2020-02-06 10:20:12.369004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select id,hds_id from azk.mcs_hds_log where activity = ?
2020-02-06 10:20:12.369004 I system Th{5772} [mcs/db/db_config.cpp:462] _rebuild_can_to_nozzle() g_trk_def_map_stub=TrkDefMap={
                                    TrkId=1: TrkStartRegime=TRKSTARTREGIME_OFF
                                   Nozzles=[   NozzleId=11: canid=NIL subpetrol=NIL storageid=NIL
                                      NozzleId=12: canid=NIL subpetrol=NIL storageid=NIL
                                      NozzleId=13: canid=NIL subpetrol=NIL storageid=NIL
                                      NozzleId=14: canid=NIL subpetrol=NIL storageid=NIL
                                      NozzleId=15: canid=NIL subpetrol=NIL storageid=NIL
                                   ]
                                    TrkId=2: TrkStartRegime=TRKSTARTREGIME_OFF
                                   Nozzles=[   NozzleId=21: canid=NIL subpetrol=NIL storageid=NIL
                                      NozzleId=22: canid=NIL subpetrol=NIL storageid=NIL
                                      NozzleId=23: canid=NIL subpetrol=NIL storageid=NIL
                                      NozzleId=24: canid=NIL subpetrol=NIL storageid=NIL
                                      NozzleId=25: canid=NIL subpetrol=NIL storageid=NIL
                                   ]
                                    TrkId=3: TrkStartRegime=TRKSTARTREGIME_OFF
                                   Nozzles=[   NozzleId=31: canid=NIL subpetrol=NIL storageid=NIL
                                      NozzleId=32: canid=NIL subpetrol=NIL storageid=NIL
                                      NozzleId=33: canid=NIL subpetrol=NIL storageid=NIL
                                      NozzleId=34: canid=NIL subpetrol=NIL storageid=NIL
                                      NozzleId=35: canid=NIL subpetrol=NIL storageid=NIL
                                   ]
                                    TrkId=4: TrkStartRegime=TRKSTARTREGIME_OFF
                                   Nozzles=[   NozzleId=41: canid=NIL subpetrol=NIL storageid=NIL
                                      NozzleId=42: canid=NIL subpetrol=NIL storageid=NIL
                                      NozzleId=43: canid=NIL subpetrol=NIL storageid=NIL
                                      NozzleId=44: canid=NIL subpetrol=NIL storageid=NIL
                                      NozzleId=45: canid=NIL subpetrol=NIL storageid=NIL
                                   ]
                                    TrkId=5: TrkStartRegime=TRKSTARTREGIME_OFF
                                   Nozzles=[   NozzleId=51: canid=NIL subpetrol=NIL storageid=NIL
                                      NozzleId=52: canid=NIL subpetrol=NIL storageid=NIL
                                      NozzleId=53: canid=NIL subpetrol=NIL storageid=NIL
                                      NozzleId=54: canid=NIL subpetrol=NIL storageid=NIL
                                      NozzleId=55: canid=NIL subpetrol=NIL storageid=NIL
                                   ]
                                    TrkId=6: TrkStartRegime=TRKSTARTREGIME_OFF
                                   Nozzles=[   NozzleId=61: canid=NIL subpetrol=NIL storageid=NIL
                                      NozzleId=62: canid=NIL subpetrol=NIL storageid=NIL
                                      NozzleId=63: canid=NIL subpetrol=NIL storageid=NIL
                                      NozzleId=64: canid=NIL subpetrol=NIL storageid=NIL
                                      NozzleId=65: canid=NIL subpetrol=NIL storageid=NIL
                                   ]
                                    TrkId=7: TrkStartRegime=TRKSTARTREGIME_OFF
                                   Nozzles=[   NozzleId=71: canid=NIL subpetrol=NIL storageid=NIL
                                   ]
                                    TrkId=8: TrkStartRegime=TRKSTARTREGIME_OFF
                                   Nozzles=[   NozzleId=81: canid=NIL subpetrol=NIL storageid=NIL
                                      NozzleId=82: canid=NIL subpetrol=NIL storageid=NIL
                                   ]

2020-02-06 10:20:12.369004 I system Th{5772} [mcs/db/db_config.cpp:39] is_hds_db_cfg_consistent() try to compare db with config hds 
2020-02-06 10:20:12.369004 I system Th{5772} [mcs/db/db_config.cpp:42] is_hds_db_cfg_consistent() analize trkno=1
2020-02-06 10:20:12.369004 I system Th{5772} [mcs/db/db_config.cpp:54] is_hds_db_cfg_consistent()  trkno=1 matched compare nozzles  nozzle_petrol_map size=5 config nozzles=5
2020-02-06 10:20:12.369004 I system Th{5772} [mcs/db/db_config.cpp:42] is_hds_db_cfg_consistent() analize trkno=2
2020-02-06 10:20:12.369004 I system Th{5772} [mcs/db/db_config.cpp:54] is_hds_db_cfg_consistent()  trkno=2 matched compare nozzles  nozzle_petrol_map size=5 config nozzles=5
2020-02-06 10:20:12.369004 I system Th{5772} [mcs/db/db_config.cpp:42] is_hds_db_cfg_consistent() analize trkno=3
2020-02-06 10:20:12.369004 I system Th{5772} [mcs/db/db_config.cpp:54] is_hds_db_cfg_consistent()  trkno=3 matched compare nozzles  nozzle_petrol_map size=5 config nozzles=5
2020-02-06 10:20:12.369004 I system Th{5772} [mcs/db/db_config.cpp:42] is_hds_db_cfg_consistent() analize trkno=4
2020-02-06 10:20:12.369004 I system Th{5772} [mcs/db/db_config.cpp:54] is_hds_db_cfg_consistent()  trkno=4 matched compare nozzles  nozzle_petrol_map size=5 config nozzles=5
2020-02-06 10:20:12.369004 I system Th{5772} [mcs/db/db_config.cpp:42] is_hds_db_cfg_consistent() analize trkno=5
2020-02-06 10:20:12.369004 I system Th{5772} [mcs/db/db_config.cpp:54] is_hds_db_cfg_consistent()  trkno=5 matched compare nozzles  nozzle_petrol_map size=5 config nozzles=5
2020-02-06 10:20:12.369004 I system Th{5772} [mcs/db/db_config.cpp:42] is_hds_db_cfg_consistent() analize trkno=6
2020-02-06 10:20:12.369004 I system Th{5772} [mcs/db/db_config.cpp:54] is_hds_db_cfg_consistent()  trkno=6 matched compare nozzles  nozzle_petrol_map size=5 config nozzles=5
2020-02-06 10:20:12.369004 I system Th{5772} [mcs/db/db_config.cpp:42] is_hds_db_cfg_consistent() analize trkno=7
2020-02-06 10:20:12.369004 I system Th{5772} [mcs/db/db_config.cpp:54] is_hds_db_cfg_consistent()  trkno=7 matched compare nozzles  nozzle_petrol_map size=1 config nozzles=1
2020-02-06 10:20:12.369004 I system Th{5772} [mcs/db/db_config.cpp:42] is_hds_db_cfg_consistent() analize trkno=8
2020-02-06 10:20:12.369004 I system Th{5772} [mcs/db/db_config.cpp:54] is_hds_db_cfg_consistent()  trkno=8 matched compare nozzles  nozzle_petrol_map size=2 config nozzles=2
2020-02-06 10:20:12.369004 I system Th{5772} [mcs/db/db_config.cpp:99] is_hds_db_cfg_consistent() cfg variants check valve_list=ValveList=[
                                   ]
2020-02-06 10:20:12.369004 I system Th{5772} [mcs/db/db_config.cpp:101] is_hds_db_cfg_consistent() can=1
2020-02-06 10:20:12.369004 I system Th{5772} [mcs/db/db_config.cpp:101] is_hds_db_cfg_consistent() can=2
2020-02-06 10:20:12.369004 I system Th{5772} [mcs/db/db_config.cpp:101] is_hds_db_cfg_consistent() can=3
2020-02-06 10:20:12.369004 I system Th{5772} [mcs/db/db_config.cpp:101] is_hds_db_cfg_consistent() can=4
2020-02-06 10:20:12.369004 I system Th{5772} [mcs/db/db_config.cpp:101] is_hds_db_cfg_consistent() can=5
2020-02-06 10:20:12.369004 I system Th{5772} [mcs/db/db_config.cpp:101] is_hds_db_cfg_consistent() can=6
2020-02-06 10:20:12.370004 D system Th{5772} [mcs_types/valve.cpp:40] is_included_in()  n_matches=0 size=0
2020-02-06 10:20:12.370004 I db Th{5772} [mcs/db/db_config.cpp:112] is_hds_db_cfg_consistent() valve list matched cnt=0
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:129] is_hds_db_cfg_consistent() SECOND STAGE analize trkno=1
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:135] is_hds_db_cfg_consistent() found in bd nozzle=11 bcan=5
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:138] is_hds_db_cfg_consistent() okay can found
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:141] is_hds_db_cfg_consistent() okay nozzle found
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:135] is_hds_db_cfg_consistent() found in bd nozzle=12 bcan=4
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:138] is_hds_db_cfg_consistent() okay can found
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:141] is_hds_db_cfg_consistent() okay nozzle found
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:135] is_hds_db_cfg_consistent() found in bd nozzle=13 bcan=3
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:138] is_hds_db_cfg_consistent() okay can found
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:141] is_hds_db_cfg_consistent() okay nozzle found
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:135] is_hds_db_cfg_consistent() found in bd nozzle=14 bcan=2
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:138] is_hds_db_cfg_consistent() okay can found
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:141] is_hds_db_cfg_consistent() okay nozzle found
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:135] is_hds_db_cfg_consistent() found in bd nozzle=15 bcan=1
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:138] is_hds_db_cfg_consistent() okay can found
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:141] is_hds_db_cfg_consistent() okay nozzle found
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:129] is_hds_db_cfg_consistent() SECOND STAGE analize trkno=2
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:135] is_hds_db_cfg_consistent() found in bd nozzle=21 bcan=5
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:138] is_hds_db_cfg_consistent() okay can found
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:141] is_hds_db_cfg_consistent() okay nozzle found
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:135] is_hds_db_cfg_consistent() found in bd nozzle=22 bcan=4
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:138] is_hds_db_cfg_consistent() okay can found
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:141] is_hds_db_cfg_consistent() okay nozzle found
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:135] is_hds_db_cfg_consistent() found in bd nozzle=23 bcan=3
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:138] is_hds_db_cfg_consistent() okay can found
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:141] is_hds_db_cfg_consistent() okay nozzle found
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:135] is_hds_db_cfg_consistent() found in bd nozzle=24 bcan=2
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:138] is_hds_db_cfg_consistent() okay can found
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:141] is_hds_db_cfg_consistent() okay nozzle found
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:135] is_hds_db_cfg_consistent() found in bd nozzle=25 bcan=1
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:138] is_hds_db_cfg_consistent() okay can found
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:141] is_hds_db_cfg_consistent() okay nozzle found
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:129] is_hds_db_cfg_consistent() SECOND STAGE analize trkno=3
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:135] is_hds_db_cfg_consistent() found in bd nozzle=31 bcan=5
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:138] is_hds_db_cfg_consistent() okay can found
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:141] is_hds_db_cfg_consistent() okay nozzle found
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:135] is_hds_db_cfg_consistent() found in bd nozzle=32 bcan=4
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:138] is_hds_db_cfg_consistent() okay can found
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:141] is_hds_db_cfg_consistent() okay nozzle found
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:135] is_hds_db_cfg_consistent() found in bd nozzle=33 bcan=3
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:138] is_hds_db_cfg_consistent() okay can found
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:141] is_hds_db_cfg_consistent() okay nozzle found
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:135] is_hds_db_cfg_consistent() found in bd nozzle=34 bcan=2
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:138] is_hds_db_cfg_consistent() okay can found
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:141] is_hds_db_cfg_consistent() okay nozzle found
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:135] is_hds_db_cfg_consistent() found in bd nozzle=35 bcan=1
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:138] is_hds_db_cfg_consistent() okay can found
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:141] is_hds_db_cfg_consistent() okay nozzle found
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:129] is_hds_db_cfg_consistent() SECOND STAGE analize trkno=4
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:135] is_hds_db_cfg_consistent() found in bd nozzle=41 bcan=5
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:138] is_hds_db_cfg_consistent() okay can found
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:141] is_hds_db_cfg_consistent() okay nozzle found
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:135] is_hds_db_cfg_consistent() found in bd nozzle=42 bcan=4
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:138] is_hds_db_cfg_consistent() okay can found
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:141] is_hds_db_cfg_consistent() okay nozzle found
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:135] is_hds_db_cfg_consistent() found in bd nozzle=43 bcan=3
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:138] is_hds_db_cfg_consistent() okay can found
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:141] is_hds_db_cfg_consistent() okay nozzle found
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:135] is_hds_db_cfg_consistent() found in bd nozzle=44 bcan=2
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:138] is_hds_db_cfg_consistent() okay can found
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:141] is_hds_db_cfg_consistent() okay nozzle found
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:135] is_hds_db_cfg_consistent() found in bd nozzle=45 bcan=1
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:138] is_hds_db_cfg_consistent() okay can found
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:141] is_hds_db_cfg_consistent() okay nozzle found
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:129] is_hds_db_cfg_consistent() SECOND STAGE analize trkno=5
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:135] is_hds_db_cfg_consistent() found in bd nozzle=51 bcan=5
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:138] is_hds_db_cfg_consistent() okay can found
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:141] is_hds_db_cfg_consistent() okay nozzle found
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:135] is_hds_db_cfg_consistent() found in bd nozzle=52 bcan=4
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:138] is_hds_db_cfg_consistent() okay can found
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:141] is_hds_db_cfg_consistent() okay nozzle found
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:135] is_hds_db_cfg_consistent() found in bd nozzle=53 bcan=3
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:138] is_hds_db_cfg_consistent() okay can found
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:141] is_hds_db_cfg_consistent() okay nozzle found
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:135] is_hds_db_cfg_consistent() found in bd nozzle=54 bcan=2
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:138] is_hds_db_cfg_consistent() okay can found
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:141] is_hds_db_cfg_consistent() okay nozzle found
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:135] is_hds_db_cfg_consistent() found in bd nozzle=55 bcan=1
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:138] is_hds_db_cfg_consistent() okay can found
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:141] is_hds_db_cfg_consistent() okay nozzle found
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:129] is_hds_db_cfg_consistent() SECOND STAGE analize trkno=6
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:135] is_hds_db_cfg_consistent() found in bd nozzle=61 bcan=5
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:138] is_hds_db_cfg_consistent() okay can found
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:141] is_hds_db_cfg_consistent() okay nozzle found
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:135] is_hds_db_cfg_consistent() found in bd nozzle=62 bcan=4
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:138] is_hds_db_cfg_consistent() okay can found
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:141] is_hds_db_cfg_consistent() okay nozzle found
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:135] is_hds_db_cfg_consistent() found in bd nozzle=63 bcan=3
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:138] is_hds_db_cfg_consistent() okay can found
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:141] is_hds_db_cfg_consistent() okay nozzle found
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:135] is_hds_db_cfg_consistent() found in bd nozzle=64 bcan=2
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:138] is_hds_db_cfg_consistent() okay can found
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:141] is_hds_db_cfg_consistent() okay nozzle found
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:135] is_hds_db_cfg_consistent() found in bd nozzle=65 bcan=1
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:138] is_hds_db_cfg_consistent() okay can found
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:141] is_hds_db_cfg_consistent() okay nozzle found
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:129] is_hds_db_cfg_consistent() SECOND STAGE analize trkno=7
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:135] is_hds_db_cfg_consistent() found in bd nozzle=71 bcan=6
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:138] is_hds_db_cfg_consistent() okay can found
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:141] is_hds_db_cfg_consistent() okay nozzle found
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:129] is_hds_db_cfg_consistent() SECOND STAGE analize trkno=8
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:135] is_hds_db_cfg_consistent() found in bd nozzle=81 bcan=6
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:138] is_hds_db_cfg_consistent() okay can found
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:141] is_hds_db_cfg_consistent() okay nozzle found
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:135] is_hds_db_cfg_consistent() found in bd nozzle=82 bcan=6
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:138] is_hds_db_cfg_consistent() okay can found
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:141] is_hds_db_cfg_consistent() okay nozzle found
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:159] is_hds_db_cfg_consistent() valve_matched_list.size()=1 enabled_perms_in_bd=1
2020-02-06 10:20:12.370004 I system Th{5772} [mcs/db/db_config.cpp:168] is_hds_db_cfg_consistent() HDS-VALIDATION-OKAY
2020-02-06 10:20:12.370004 W system Th{5772} [mcs/db/db_config.cpp:467] _rebuild_can_to_nozzle() DB config is in consistent with config
2020-02-06 10:20:12.370004 I system Th{5772} [fc/selfdiag.cpp:143] log() Диагностика ошибок не выявила
2020-02-06 10:20:13.178004 I system Th{5772} [mcs/mcs_user_manager.cpp:36] append() real push_back ua=UserAcc={userid=NIL,systemid=12255241,guid=bba1124e-411f-4fd0-af67-91d95d970ed3,username=Пустовой Ю. В.,ecrname=Пустовой Ю. В.,userrole=Администратор операт,active=1,internal=0,is_manager=1,inn=}
2020-02-06 10:20:13.178004 I system Th{5772} [mcs/mcs_user_manager.cpp:167] load_from_config() A append user ua=UserAcc={userid=NIL,systemid=12255241,guid=bba1124e-411f-4fd0-af67-91d95d970ed3,username=Пустовой Ю. В.,ecrname=Пустовой Ю. В.,userrole=Администратор операт,active=1,internal=0,is_manager=1,inn=} nick_name=Pustovoy_JuV_AZS_12351==
2020-02-06 10:20:13.428004 I system Th{5772} [mcs/mcs_user_manager.cpp:36] append() real push_back ua=UserAcc={userid=NIL,systemid=12255240,guid=bc313027-8a46-4241-a0e6-4110730ca22f,username=Чернова Л. А.,ecrname=Чернова Л. А.,userrole=Оператор АЗС,active=1,internal=0,is_manager=0,inn=}
2020-02-06 10:20:13.428004 I system Th{5772} [mcs/mcs_user_manager.cpp:167] load_from_config() A append user ua=UserAcc={userid=NIL,systemid=12255240,guid=bc313027-8a46-4241-a0e6-4110730ca22f,username=Чернова Л. А.,ecrname=Чернова Л. А.,userrole=Оператор АЗС,active=1,internal=0,is_manager=0,inn=} nick_name=Chernovoy_LA_AZS_12351==
2020-02-06 10:20:13.688004 I system Th{5772} [mcs/mcs_user_manager.cpp:36] append() real push_back ua=UserAcc={userid=NIL,systemid=12255239,guid=cc760a99-b52e-4cbd-ada7-17df75c3b1f2,username=Залётина Н. В.,ecrname=Залётина Н. В.,userrole=Оператор АЗС,active=1,internal=0,is_manager=0,inn=}
2020-02-06 10:20:13.689004 I system Th{5772} [mcs/mcs_user_manager.cpp:167] load_from_config() A append user ua=UserAcc={userid=NIL,systemid=12255239,guid=cc760a99-b52e-4cbd-ada7-17df75c3b1f2,username=Залётина Н. В.,ecrname=Залётина Н. В.,userrole=Оператор АЗС,active=1,internal=0,is_manager=0,inn=} nick_name=Zaletina_NV_AZS_12351==
2020-02-06 10:20:13.835004 I system Th{5772} [mcs/mcs_user_manager.cpp:36] append() real push_back ua=UserAcc={userid=NIL,systemid=12255238,guid=0974e7b3-2e65-4469-9e92-2fc3586a05d7,username=Мартынова А. А.,ecrname=Мартынова А. А.,userrole=Оператор АЗС,active=1,internal=0,is_manager=0,inn=}
2020-02-06 10:20:13.836004 I system Th{5772} [mcs/mcs_user_manager.cpp:167] load_from_config() A append user ua=UserAcc={userid=NIL,systemid=12255238,guid=0974e7b3-2e65-4469-9e92-2fc3586a05d7,username=Мартынова А. А.,ecrname=Мартынова А. А.,userrole=Оператор АЗС,active=1,internal=0,is_manager=0,inn=} nick_name=Martinova_AA_AZS_12351==
2020-02-06 10:20:13.943004 I system Th{5772} [mcs/mcs_user_manager.cpp:36] append() real push_back ua=UserAcc={userid=NIL,systemid=12255237,guid=0adf46fe-cb5f-4271-b5ff-c700d0353c10,username=Маркова М. Ю.,ecrname=Маркова М. Ю.,userrole=Оператор АЗС,active=1,internal=0,is_manager=0,inn=}
2020-02-06 10:20:13.943004 I system Th{5772} [mcs/mcs_user_manager.cpp:167] load_from_config() A append user ua=UserAcc={userid=NIL,systemid=12255237,guid=0adf46fe-cb5f-4271-b5ff-c700d0353c10,username=Маркова М. Ю.,ecrname=Маркова М. Ю.,userrole=Оператор АЗС,active=1,internal=0,is_manager=0,inn=} nick_name=Markova_MJu_AZS_12351==
2020-02-06 10:20:14.054004 I system Th{5772} [mcs/mcs_user_manager.cpp:36] append() real push_back ua=UserAcc={userid=NIL,systemid=12255236,guid=358445c7-b903-4abb-a3d9-68ac17964e77,username=Викулина С. В.,ecrname=Викулина С. В.,userrole=Оператор АЗС,active=1,internal=0,is_manager=0,inn=}
2020-02-06 10:20:14.054004 I system Th{5772} [mcs/mcs_user_manager.cpp:167] load_from_config() A append user ua=UserAcc={userid=NIL,systemid=12255236,guid=358445c7-b903-4abb-a3d9-68ac17964e77,username=Викулина С. В.,ecrname=Викулина С. В.,userrole=Оператор АЗС,active=1,internal=0,is_manager=0,inn=} nick_name=Vikulina_SV_AZS_12351==
2020-02-06 10:20:14.162004 I system Th{5772} [mcs/mcs_user_manager.cpp:36] append() real push_back ua=UserAcc={userid=NIL,systemid=12255235,guid=181b121c-924a-4619-ac46-8e48e57ef82d,username=Антонова К. А.,ecrname=Антонова К. А.,userrole=Оператор АЗС,active=1,internal=0,is_manager=0,inn=}
2020-02-06 10:20:14.163004 I system Th{5772} [mcs/mcs_user_manager.cpp:167] load_from_config() A append user ua=UserAcc={userid=NIL,systemid=12255235,guid=181b121c-924a-4619-ac46-8e48e57ef82d,username=Антонова К. А.,ecrname=Антонова К. А.,userrole=Оператор АЗС,active=1,internal=0,is_manager=0,inn=} nick_name=Antonova_KA_AZS_12351==
2020-02-06 10:20:14.272004 I system Th{5772} [mcs/mcs_user_manager.cpp:36] append() real push_back ua=UserAcc={userid=NIL,systemid=12255234,guid=180867f4-b4b3-405a-9072-4237b6f72dea,username=Волошина И. В.,ecrname=Волошина И. В.,userrole=Оператор АЗС,active=1,internal=0,is_manager=0,inn=}
2020-02-06 10:20:14.272004 I system Th{5772} [mcs/mcs_user_manager.cpp:167] load_from_config() A append user ua=UserAcc={userid=NIL,systemid=12255234,guid=180867f4-b4b3-405a-9072-4237b6f72dea,username=Волошина И. В.,ecrname=Волошина И. В.,userrole=Оператор АЗС,active=1,internal=0,is_manager=0,inn=} nick_name=Voloshina_IV_AZS_12351==
2020-02-06 10:20:14.381004 I system Th{5772} [mcs/mcs_user_manager.cpp:36] append() real push_back ua=UserAcc={userid=NIL,systemid=12255233,guid=4022e1cb-4f00-4668-a90c-4313c1cd874c,username=Дроздова Д. М.,ecrname=Дроздова Д. М.,userrole=Оператор АЗС,active=1,internal=0,is_manager=0,inn=}
2020-02-06 10:20:14.381004 I system Th{5772} [mcs/mcs_user_manager.cpp:167] load_from_config() A append user ua=UserAcc={userid=NIL,systemid=12255233,guid=4022e1cb-4f00-4668-a90c-4313c1cd874c,username=Дроздова Д. М.,ecrname=Дроздова Д. М.,userrole=Оператор АЗС,active=1,internal=0,is_manager=0,inn=} nick_name=Drozdova_DM_AZS_12351==
2020-02-06 10:20:14.489004 I system Th{5772} [mcs/mcs_user_manager.cpp:36] append() real push_back ua=UserAcc={userid=NIL,systemid=12255232,guid=34567a3d-a67c-4b99-84ec-d7e43954df39,username=Купчина О. Н.,ecrname=Купчина О. Н.,userrole=Оператор АЗС,active=1,internal=0,is_manager=0,inn=}
2020-02-06 10:20:14.489004 I system Th{5772} [mcs/mcs_user_manager.cpp:167] load_from_config() A append user ua=UserAcc={userid=NIL,systemid=12255232,guid=34567a3d-a67c-4b99-84ec-d7e43954df39,username=Купчина О. Н.,ecrname=Купчина О. Н.,userrole=Оператор АЗС,active=1,internal=0,is_manager=0,inn=} nick_name=Kupchina_ON_AZS_12351==
2020-02-06 10:20:14.598004 I system Th{5772} [mcs/mcs_user_manager.cpp:36] append() real push_back ua=UserAcc={userid=NIL,systemid=131207,guid=38f4f70d-bd34-4dbc-bd42-02ba2d2944f4,username=Operator User ,ecrname=Operator User ,userrole=Оператор АЗС,active=1,internal=0,is_manager=0,inn=}
2020-02-06 10:20:14.598004 I system Th{5772} [mcs/mcs_user_manager.cpp:167] load_from_config() A append user ua=UserAcc={userid=NIL,systemid=131207,guid=38f4f70d-bd34-4dbc-bd42-02ba2d2944f4,username=Operator User ,ecrname=Operator User ,userrole=Оператор АЗС,active=1,internal=0,is_manager=0,inn=} nick_name=op_azs12351==
2020-02-06 10:20:14.598004 I system Th{5772} [mcs/mcs_user_manager.cpp:36] append() real push_back ua=UserAcc={userid=NIL,systemid=2002,guid=a0c6a929-6829-44f8-aa56-02a09f33fc7c,username=  ,ecrname=  ,userrole=Оператор,active=1,internal=0,is_manager=0,inn=}
2020-02-06 10:20:14.598004 I system Th{5772} [mcs/mcs_user_manager.cpp:167] load_from_config() A append user ua=UserAcc={userid=NIL,systemid=2002,guid=a0c6a929-6829-44f8-aa56-02a09f33fc7c,username=  ,ecrname=  ,userrole=Оператор,active=1,internal=0,is_manager=0,inn=} nick_name=se==
2020-02-06 10:20:14.598004 I system Th{5772} [mcs/mcs_user_manager.cpp:36] append() real push_back ua=UserAcc={userid=NIL,systemid=2001,guid=2e349e22-8866-4329-91e8-48c4b2f8e846,username=  ,ecrname=  ,userrole=Оператор,active=1,internal=0,is_manager=0,inn=}
2020-02-06 10:20:14.598004 I system Th{5772} [mcs/mcs_user_manager.cpp:167] load_from_config() A append user ua=UserAcc={userid=NIL,systemid=2001,guid=2e349e22-8866-4329-91e8-48c4b2f8e846,username=  ,ecrname=  ,userrole=Оператор,active=1,internal=0,is_manager=0,inn=} nick_name=se_adm==
2020-02-06 10:20:14.598004 I system Th{5772} [mcs/mcs_user_manager.cpp:151] load_from_config() NOT special non system user detectedroot skip it
2020-02-06 10:20:14.598004 I system Th{5772} [mcs/mcs_user_manager.cpp:144] load_from_config()  special non system user detectedmcc_station add it
2020-02-06 10:20:14.598004 I system Th{5772} [mcs/mcs_user_manager.cpp:36] append() real push_back ua=UserAcc={userid=999,systemid=2000,guid=906ecb0b-caa9-3d29-62d4-733744045bf0,username= mcc_station ,ecrname= mcc_station ,userrole=Оператор,active=1,internal=1,is_manager=0,inn=}
2020-02-06 10:20:14.598004 I system Th{5772} [mcs/mcs_user_manager.cpp:167] load_from_config() A append user ua=UserAcc={userid=999,systemid=2000,guid=906ecb0b-caa9-3d29-62d4-733744045bf0,username= mcc_station ,ecrname= mcc_station ,userrole=Оператор,active=1,internal=1,is_manager=0,inn=} nick_name=mcc_station==
2020-02-06 10:20:14.601004 I system Th{5772} [mcs/mcs_user_manager.cpp:96] start() loading users from config done USERS ARE==>McsUserSet=[
                                   UserAcc={userid=NIL,systemid=12255241,guid=bba1124e-411f-4fd0-af67-91d95d970ed3,username=Пустовой Ю. В.,ecrname=Пустовой Ю. В.,userrole=Администратор операт,active=1,internal=0,is_manager=1,inn=}
                                   UserAcc={userid=NIL,systemid=12255240,guid=bc313027-8a46-4241-a0e6-4110730ca22f,username=Чернова Л. А.,ecrname=Чернова Л. А.,userrole=Оператор АЗС,active=1,internal=0,is_manager=0,inn=}
                                   UserAcc={userid=NIL,systemid=12255239,guid=cc760a99-b52e-4cbd-ada7-17df75c3b1f2,username=Залётина Н. В.,ecrname=Залётина Н. В.,userrole=Оператор АЗС,active=1,internal=0,is_manager=0,inn=}
                                   UserAcc={userid=NIL,systemid=12255238,guid=0974e7b3-2e65-4469-9e92-2fc3586a05d7,username=Мартынова А. А.,ecrname=Мартынова А. А.,userrole=Оператор АЗС,active=1,internal=0,is_manager=0,inn=}
                                   UserAcc={userid=NIL,systemid=12255237,guid=0adf46fe-cb5f-4271-b5ff-c700d0353c10,username=Маркова М. Ю.,ecrname=Маркова М. Ю.,userrole=Оператор АЗС,active=1,internal=0,is_manager=0,inn=}
                                   UserAcc={userid=NIL,systemid=12255236,guid=358445c7-b903-4abb-a3d9-68ac17964e77,username=Викулина С. В.,ecrname=Викулина С. В.,userrole=Оператор АЗС,active=1,internal=0,is_manager=0,inn=}
                                   UserAcc={userid=NIL,systemid=12255235,guid=181b121c-924a-4619-ac46-8e48e57ef82d,username=Антонова К. А.,ecrname=Антонова К. А.,userrole=Оператор АЗС,active=1,internal=0,is_manager=0,inn=}
                                   UserAcc={userid=NIL,systemid=12255234,guid=180867f4-b4b3-405a-9072-4237b6f72dea,username=Волошина И. В.,ecrname=Волошина И. В.,userrole=Оператор АЗС,active=1,internal=0,is_manager=0,inn=}
                                   UserAcc={userid=NIL,systemid=12255233,guid=4022e1cb-4f00-4668-a90c-4313c1cd874c,username=Дроздова Д. М.,ecrname=Дроздова Д. М.,userrole=Оператор АЗС,active=1,internal=0,is_manager=0,inn=}
                                   UserAcc={userid=NIL,systemid=12255232,guid=34567a3d-a67c-4b99-84ec-d7e43954df39,username=Купчина О. Н.,ecrname=Купчина О. Н.,userrole=Оператор АЗС,active=1,internal=0,is_manager=0,inn=}
                                   UserAcc={userid=NIL,systemid=131207,guid=38f4f70d-bd34-4dbc-bd42-02ba2d2944f4,username=Operator User ,ecrname=Operator User ,userrole=Оператор АЗС,active=1,internal=0,is_manager=0,inn=}
                                   UserAcc={userid=NIL,systemid=2002,guid=a0c6a929-6829-44f8-aa56-02a09f33fc7c,username=  ,ecrname=  ,userrole=Оператор,active=1,internal=0,is_manager=0,inn=}
                                   UserAcc={userid=NIL,systemid=2001,guid=2e349e22-8866-4329-91e8-48c4b2f8e846,username=  ,ecrname=  ,userrole=Оператор,active=1,internal=0,is_manager=0,inn=}
                                   UserAcc={userid=999,systemid=2000,guid=906ecb0b-caa9-3d29-62d4-733744045bf0,username= mcc_station ,ecrname= mcc_station ,userrole=Оператор,active=1,internal=1,is_manager=0,inn=}
                                   ]<==
2020-02-06 10:20:14.601004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select userid,lower(guid::text),realname,ecrname,rolename,active,internal,coalesce(inn,'')::text from azk.mcs_users
2020-02-06 10:20:14.621004 I system Th{5772} [mcs/mcs_user_manager.cpp:36] append() real push_back ua=UserAcc={userid=1102895,systemid=NIL,guid=38f4f70d-bd34-4dbc-bd42-02ba2d2944f4,username=Operator User ,ecrname=Operator User ,userrole=Оператор АЗС,active=1,internal=0,is_manager=0,inn=}
2020-02-06 10:20:14.621004 I system Th{5772} [mcs/mcs_user_manager.cpp:36] append() real push_back ua=UserAcc={userid=1102896,systemid=NIL,guid=a0c6a929-6829-44f8-aa56-02a09f33fc7c,username=  ,ecrname=  ,userrole=Оператор,active=1,internal=0,is_manager=0,inn=}
2020-02-06 10:20:14.621004 I system Th{5772} [mcs/mcs_user_manager.cpp:36] append() real push_back ua=UserAcc={userid=1102897,systemid=NIL,guid=2e349e22-8866-4329-91e8-48c4b2f8e846,username=  ,ecrname=  ,userrole=Оператор,active=1,internal=0,is_manager=0,inn=}
2020-02-06 10:20:14.621004 I system Th{5772} [mcs/mcs_user_manager.cpp:36] append() real push_back ua=UserAcc={userid=999,systemid=NIL,guid=906ecb0b-caa9-3d29-62d4-733744045bf0,username= mcc_station ,ecrname= mcc_station ,userrole=Оператор,active=1,internal=1,is_manager=0,inn=}
2020-02-06 10:20:14.621004 I system Th{5772} [mcs/mcs_user_manager.cpp:36] append() real push_back ua=UserAcc={userid=1103060,systemid=NIL,guid=bba1124e-411f-4fd0-af67-91d95d970ed3,username=Пустовой Ю. В.,ecrname=Пустовой Ю. В.,userrole=Администратор операт,active=1,internal=0,is_manager=0,inn=}
2020-02-06 10:20:14.621004 I system Th{5772} [mcs/mcs_user_manager.cpp:36] append() real push_back ua=UserAcc={userid=1103061,systemid=NIL,guid=bc313027-8a46-4241-a0e6-4110730ca22f,username=Чернова Л. А.,ecrname=Чернова Л. А.,userrole=Оператор АЗС,active=1,internal=0,is_manager=0,inn=}
2020-02-06 10:20:14.621004 I system Th{5772} [mcs/mcs_user_manager.cpp:36] append() real push_back ua=UserAcc={userid=1103062,systemid=NIL,guid=cc760a99-b52e-4cbd-ada7-17df75c3b1f2,username=Залётина Н. В.,ecrname=Залётина Н. В.,userrole=Оператор АЗС,active=1,internal=0,is_manager=0,inn=}
2020-02-06 10:20:14.621004 I system Th{5772} [mcs/mcs_user_manager.cpp:36] append() real push_back ua=UserAcc={userid=1103063,systemid=NIL,guid=0974e7b3-2e65-4469-9e92-2fc3586a05d7,username=Мартынова А. А.,ecrname=Мартынова А. А.,userrole=Оператор АЗС,active=1,internal=0,is_manager=0,inn=}
2020-02-06 10:20:14.621004 I system Th{5772} [mcs/mcs_user_manager.cpp:36] append() real push_back ua=UserAcc={userid=1103064,systemid=NIL,guid=0adf46fe-cb5f-4271-b5ff-c700d0353c10,username=Маркова М. Ю.,ecrname=Маркова М. Ю.,userrole=Оператор АЗС,active=1,internal=0,is_manager=0,inn=}
2020-02-06 10:20:14.621004 I system Th{5772} [mcs/mcs_user_manager.cpp:36] append() real push_back ua=UserAcc={userid=1103065,systemid=NIL,guid=358445c7-b903-4abb-a3d9-68ac17964e77,username=Викулина С. В.,ecrname=Викулина С. В.,userrole=Оператор АЗС,active=1,internal=0,is_manager=0,inn=}
2020-02-06 10:20:14.621004 I system Th{5772} [mcs/mcs_user_manager.cpp:36] append() real push_back ua=UserAcc={userid=1103066,systemid=NIL,guid=181b121c-924a-4619-ac46-8e48e57ef82d,username=Антонова К. А.,ecrname=Антонова К. А.,userrole=Оператор АЗС,active=1,internal=0,is_manager=0,inn=}
2020-02-06 10:20:14.621004 I system Th{5772} [mcs/mcs_user_manager.cpp:36] append() real push_back ua=UserAcc={userid=1103067,systemid=NIL,guid=180867f4-b4b3-405a-9072-4237b6f72dea,username=Волошина И. В.,ecrname=Волошина И. В.,userrole=Оператор АЗС,active=1,internal=0,is_manager=0,inn=}
2020-02-06 10:20:14.621004 I system Th{5772} [mcs/mcs_user_manager.cpp:36] append() real push_back ua=UserAcc={userid=1103068,systemid=NIL,guid=4022e1cb-4f00-4668-a90c-4313c1cd874c,username=Дроздова Д. М.,ecrname=Дроздова Д. М.,userrole=Оператор АЗС,active=1,internal=0,is_manager=0,inn=}
2020-02-06 10:20:14.621004 I system Th{5772} [mcs/mcs_user_manager.cpp:36] append() real push_back ua=UserAcc={userid=1103069,systemid=NIL,guid=34567a3d-a67c-4b99-84ec-d7e43954df39,username=Купчина О. Н.,ecrname=Купчина О. Н.,userrole=Оператор АЗС,active=1,internal=0,is_manager=0,inn=}
2020-02-06 10:20:14.621004 I system Th{5772} [mcs/mcs_user_manager.cpp:215] pump_to_active_node() DB DATA=McsUserSet=[
                                   UserAcc={userid=1102895,systemid=NIL,guid=38f4f70d-bd34-4dbc-bd42-02ba2d2944f4,username=Operator User ,ecrname=Operator User ,userrole=Оператор АЗС,active=1,internal=0,is_manager=0,inn=}
                                   UserAcc={userid=1102896,systemid=NIL,guid=a0c6a929-6829-44f8-aa56-02a09f33fc7c,username=  ,ecrname=  ,userrole=Оператор,active=1,internal=0,is_manager=0,inn=}
                                   UserAcc={userid=1102897,systemid=NIL,guid=2e349e22-8866-4329-91e8-48c4b2f8e846,username=  ,ecrname=  ,userrole=Оператор,active=1,internal=0,is_manager=0,inn=}
                                   UserAcc={userid=999,systemid=NIL,guid=906ecb0b-caa9-3d29-62d4-733744045bf0,username= mcc_station ,ecrname= mcc_station ,userrole=Оператор,active=1,internal=1,is_manager=0,inn=}
                                   UserAcc={userid=1103060,systemid=NIL,guid=bba1124e-411f-4fd0-af67-91d95d970ed3,username=Пустовой Ю. В.,ecrname=Пустовой Ю. В.,userrole=Администратор операт,active=1,internal=0,is_manager=0,inn=}
                                   UserAcc={userid=1103061,systemid=NIL,guid=bc313027-8a46-4241-a0e6-4110730ca22f,username=Чернова Л. А.,ecrname=Чернова Л. А.,userrole=Оператор АЗС,active=1,internal=0,is_manager=0,inn=}
                                   UserAcc={userid=1103062,systemid=NIL,guid=cc760a99-b52e-4cbd-ada7-17df75c3b1f2,username=Залётина Н. В.,ecrname=Залётина Н. В.,userrole=Оператор АЗС,active=1,internal=0,is_manager=0,inn=}
                                   UserAcc={userid=1103063,systemid=NIL,guid=0974e7b3-2e65-4469-9e92-2fc3586a05d7,username=Мартынова А. А.,ecrname=Мартынова А. А.,userrole=Оператор АЗС,active=1,internal=0,is_manager=0,inn=}
                                   UserAcc={userid=1103064,systemid=NIL,guid=0adf46fe-cb5f-4271-b5ff-c700d0353c10,username=Маркова М. Ю.,ecrname=Маркова М. Ю.,userrole=Оператор АЗС,active=1,internal=0,is_manager=0,inn=}
                                   UserAcc={userid=1103065,systemid=NIL,guid=358445c7-b903-4abb-a3d9-68ac17964e77,username=Викулина С. В.,ecrname=Викулина С. В.,userrole=Оператор АЗС,active=1,internal=0,is_manager=0,inn=}
                                   UserAcc={userid=1103066,systemid=NIL,guid=181b121c-924a-4619-ac46-8e48e57ef82d,username=Антонова К. А.,ecrname=Антонова К. А.,userrole=Оператор АЗС,active=1,internal=0,is_manager=0,inn=}
                                   UserAcc={userid=1103067,systemid=NIL,guid=180867f4-b4b3-405a-9072-4237b6f72dea,username=Волошина И. В.,ecrname=Волошина И. В.,userrole=Оператор АЗС,active=1,internal=0,is_manager=0,inn=}
                                   UserAcc={userid=1103068,systemid=NIL,guid=4022e1cb-4f00-4668-a90c-4313c1cd874c,username=Дроздова Д. М.,ecrname=Дроздова Д. М.,userrole=Оператор АЗС,active=1,internal=0,is_manager=0,inn=}
                                   UserAcc={userid=1103069,systemid=NIL,guid=34567a3d-a67c-4b99-84ec-d7e43954df39,username=Купчина О. Н.,ecrname=Купчина О. Н.,userrole=Оператор АЗС,active=1,internal=0,is_manager=0,inn=}
                                   ]<==
                                    has_many_manags=0
2020-02-06 10:20:14.621004 I system Th{5772} [mcs/mcs_user_manager.cpp:219] pump_to_active_node() analize user it=UserAcc={userid=NIL,systemid=12255241,guid=bba1124e-411f-4fd0-af67-91d95d970ed3,username=Пустовой Ю. В.,ecrname=Пустовой Ю. В.,userrole=Администратор операт,active=1,internal=0,is_manager=1,inn=}
2020-02-06 10:20:14.621004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select manager_name from azk.mcs_info_t limit 1
2020-02-06 10:20:14.621004 I system Th{5772} [mcs/mcs_user_manager.cpp:219] pump_to_active_node() analize user it=UserAcc={userid=NIL,systemid=12255240,guid=bc313027-8a46-4241-a0e6-4110730ca22f,username=Чернова Л. А.,ecrname=Чернова Л. А.,userrole=Оператор АЗС,active=1,internal=0,is_manager=0,inn=}
2020-02-06 10:20:14.621004 I system Th{5772} [mcs/mcs_user_manager.cpp:219] pump_to_active_node() analize user it=UserAcc={userid=NIL,systemid=12255239,guid=cc760a99-b52e-4cbd-ada7-17df75c3b1f2,username=Залётина Н. В.,ecrname=Залётина Н. В.,userrole=Оператор АЗС,active=1,internal=0,is_manager=0,inn=}
2020-02-06 10:20:14.621004 I system Th{5772} [mcs/mcs_user_manager.cpp:219] pump_to_active_node() analize user it=UserAcc={userid=NIL,systemid=12255238,guid=0974e7b3-2e65-4469-9e92-2fc3586a05d7,username=Мартынова А. А.,ecrname=Мартынова А. А.,userrole=Оператор АЗС,active=1,internal=0,is_manager=0,inn=}
2020-02-06 10:20:14.621004 I system Th{5772} [mcs/mcs_user_manager.cpp:219] pump_to_active_node() analize user it=UserAcc={userid=NIL,systemid=12255237,guid=0adf46fe-cb5f-4271-b5ff-c700d0353c10,username=Маркова М. Ю.,ecrname=Маркова М. Ю.,userrole=Оператор АЗС,active=1,internal=0,is_manager=0,inn=}
2020-02-06 10:20:14.621004 I system Th{5772} [mcs/mcs_user_manager.cpp:219] pump_to_active_node() analize user it=UserAcc={userid=NIL,systemid=12255236,guid=358445c7-b903-4abb-a3d9-68ac17964e77,username=Викулина С. В.,ecrname=Викулина С. В.,userrole=Оператор АЗС,active=1,internal=0,is_manager=0,inn=}
2020-02-06 10:20:14.621004 I system Th{5772} [mcs/mcs_user_manager.cpp:219] pump_to_active_node() analize user it=UserAcc={userid=NIL,systemid=12255235,guid=181b121c-924a-4619-ac46-8e48e57ef82d,username=Антонова К. А.,ecrname=Антонова К. А.,userrole=Оператор АЗС,active=1,internal=0,is_manager=0,inn=}
2020-02-06 10:20:14.621004 I system Th{5772} [mcs/mcs_user_manager.cpp:219] pump_to_active_node() analize user it=UserAcc={userid=NIL,systemid=12255234,guid=180867f4-b4b3-405a-9072-4237b6f72dea,username=Волошина И. В.,ecrname=Волошина И. В.,userrole=Оператор АЗС,active=1,internal=0,is_manager=0,inn=}
2020-02-06 10:20:14.621004 I system Th{5772} [mcs/mcs_user_manager.cpp:219] pump_to_active_node() analize user it=UserAcc={userid=NIL,systemid=12255233,guid=4022e1cb-4f00-4668-a90c-4313c1cd874c,username=Дроздова Д. М.,ecrname=Дроздова Д. М.,userrole=Оператор АЗС,active=1,internal=0,is_manager=0,inn=}
2020-02-06 10:20:14.621004 I system Th{5772} [mcs/mcs_user_manager.cpp:219] pump_to_active_node() analize user it=UserAcc={userid=NIL,systemid=12255232,guid=34567a3d-a67c-4b99-84ec-d7e43954df39,username=Купчина О. Н.,ecrname=Купчина О. Н.,userrole=Оператор АЗС,active=1,internal=0,is_manager=0,inn=}
2020-02-06 10:20:14.621004 I system Th{5772} [mcs/mcs_user_manager.cpp:219] pump_to_active_node() analize user it=UserAcc={userid=NIL,systemid=131207,guid=38f4f70d-bd34-4dbc-bd42-02ba2d2944f4,username=Operator User ,ecrname=Operator User ,userrole=Оператор АЗС,active=1,internal=0,is_manager=0,inn=}
2020-02-06 10:20:14.621004 I system Th{5772} [mcs/mcs_user_manager.cpp:219] pump_to_active_node() analize user it=UserAcc={userid=NIL,systemid=2002,guid=a0c6a929-6829-44f8-aa56-02a09f33fc7c,username=  ,ecrname=  ,userrole=Оператор,active=1,internal=0,is_manager=0,inn=}
2020-02-06 10:20:14.621004 I system Th{5772} [mcs/mcs_user_manager.cpp:219] pump_to_active_node() analize user it=UserAcc={userid=NIL,systemid=2001,guid=2e349e22-8866-4329-91e8-48c4b2f8e846,username=  ,ecrname=  ,userrole=Оператор,active=1,internal=0,is_manager=0,inn=}
2020-02-06 10:20:14.621004 I system Th{5772} [mcs/mcs_user_manager.cpp:219] pump_to_active_node() analize user it=UserAcc={userid=999,systemid=2000,guid=906ecb0b-caa9-3d29-62d4-733744045bf0,username= mcc_station ,ecrname= mcc_station ,userrole=Оператор,active=1,internal=1,is_manager=0,inn=}
2020-02-06 10:20:14.621004 I system Th{5772} [mcs/mcs_user_manager.cpp:100] start() pumping users into active node done USERS ARE==>McsUserSet=[
                                   UserAcc={userid=1103060,systemid=12255241,guid=bba1124e-411f-4fd0-af67-91d95d970ed3,username=Пустовой Ю. В.,ecrname=Пустовой Ю. В.,userrole=Администратор операт,active=1,internal=0,is_manager=1,inn=}
                                   UserAcc={userid=1103061,systemid=12255240,guid=bc313027-8a46-4241-a0e6-4110730ca22f,username=Чернова Л. А.,ecrname=Чернова Л. А.,userrole=Оператор АЗС,active=1,internal=0,is_manager=0,inn=}
                                   UserAcc={userid=1103062,systemid=12255239,guid=cc760a99-b52e-4cbd-ada7-17df75c3b1f2,username=Залётина Н. В.,ecrname=Залётина Н. В.,userrole=Оператор АЗС,active=1,internal=0,is_manager=0,inn=}
                                   UserAcc={userid=1103063,systemid=12255238,guid=0974e7b3-2e65-4469-9e92-2fc3586a05d7,username=Мартынова А. А.,ecrname=Мартынова А. А.,userrole=Оператор АЗС,active=1,internal=0,is_manager=0,inn=}
                                   UserAcc={userid=1103064,systemid=12255237,guid=0adf46fe-cb5f-4271-b5ff-c700d0353c10,username=Маркова М. Ю.,ecrname=Маркова М. Ю.,userrole=Оператор АЗС,active=1,internal=0,is_manager=0,inn=}
                                   UserAcc={userid=1103065,systemid=12255236,guid=358445c7-b903-4abb-a3d9-68ac17964e77,username=Викулина С. В.,ecrname=Викулина С. В.,userrole=Оператор АЗС,active=1,internal=0,is_manager=0,inn=}
                                   UserAcc={userid=1103066,systemid=12255235,guid=181b121c-924a-4619-ac46-8e48e57ef82d,username=Антонова К. А.,ecrname=Антонова К. А.,userrole=Оператор АЗС,active=1,internal=0,is_manager=0,inn=}
                                   UserAcc={userid=1103067,systemid=12255234,guid=180867f4-b4b3-405a-9072-4237b6f72dea,username=Волошина И. В.,ecrname=Волошина И. В.,userrole=Оператор АЗС,active=1,internal=0,is_manager=0,inn=}
                                   UserAcc={userid=1103068,systemid=12255233,guid=4022e1cb-4f00-4668-a90c-4313c1cd874c,username=Дроздова Д. М.,ecrname=Дроздова Д. М.,userrole=Оператор АЗС,active=1,internal=0,is_manager=0,inn=}
                                   UserAcc={userid=1103069,systemid=12255232,guid=34567a3d-a67c-4b99-84ec-d7e43954df39,username=Купчина О. Н.,ecrname=Купчина О. Н.,userrole=Оператор АЗС,active=1,internal=0,is_manager=0,inn=}
                                   UserAcc={userid=1102895,systemid=131207,guid=38f4f70d-bd34-4dbc-bd42-02ba2d2944f4,username=Operator User ,ecrname=Operator User ,userrole=Оператор АЗС,active=1,internal=0,is_manager=0,inn=}
                                   UserAcc={userid=1102896,systemid=2002,guid=a0c6a929-6829-44f8-aa56-02a09f33fc7c,username=  ,ecrname=  ,userrole=Оператор,active=1,internal=0,is_manager=0,inn=}
                                   UserAcc={userid=1102897,systemid=2001,guid=2e349e22-8866-4329-91e8-48c4b2f8e846,username=  ,ecrname=  ,userrole=Оператор,active=1,internal=0,is_manager=0,inn=}
                                   UserAcc={userid=999,systemid=2000,guid=906ecb0b-caa9-3d29-62d4-733744045bf0,username= mcc_station ,ecrname= mcc_station ,userrole=Оператор,active=1,internal=1,is_manager=0,inn=}
                                   ]<==
2020-02-06 10:20:14.621004 I system Th{5772} [main/server_main.cpp:606] main() Success user manager initialized
2020-02-06 10:20:14.621004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select 1 from azk.mcs_hds_log where activity='HDSSS_ACTIVE' limit 1 
2020-02-06 10:20:14.622004 I db Th{5772} [mcs/db/hds_db.cpp:440] check_scheme_once_activated() g_scheme_once_activated=1
2020-02-06 10:20:14.622004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select s.shiftno, s.shift_state, s.date_beg, s.userid, u.realname,mcs_seq_value from azk.mcs_shifts s left outer join azk.mcs_users u on (s.userid=u.userid) where s.shiftno = Coalesce( ?, s.shiftno ) order by s.shiftno desc limit 1 
2020-02-06 10:20:14.622004 I sale Th{5772} [mcs/db/shift_db.cpp:88] _db_load_shiftinfo()  info loaded=ShiftInfoExt={ShiftInfo={ shiftno=88020, shiftstate=SHIFT_CLOSED(2), date_begin=2020-02-06 00:03:52.477, uid=1103068, uname=Дроздова Д. М., first_mcs_seq_in_shift=0x000000000023D39E, perist_closing=0}
2020-02-06 10:20:14.683004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select count(id) from cbo.mcs_ecr_virtual_sections
2020-02-06 10:20:14.688004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select count(id) from cbo.mcs_ecr_model_grp
2020-02-06 10:20:14.689004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select count(id) from cbo.mcs_ecr_virtual_sections ms inner join cbo.mcs_ecr_section_map em on (em.virtual_section_id = ms.id) inner join cbo.mcs_ecr_section_pool ep on (ep.ecr_sec_number = em.ecr_sec_number and ep.ecr_model_grp_id = em.ecr_model_grp_id)
2020-02-06 10:20:14.705004 I db Th{5772} [mcs/db/ecr_db.cpp:1041] define_section_map() EcrDB::define_section_map read list of mcs_ecr_virtual_sections size=18 n_model=7 n_mult=126
2020-02-06 10:20:14.705004 I db Th{5772} [mcs/db/ecr_db.cpp:1046] define_section_map() 
                                OKAY VIRTUAL SECTION MAPPING. Switch to strict virtual section database-map
2020-02-06 10:20:14.705004 D db Th{5772} [mcs/db/ecr_db.cpp:1116] define_payment_map() validate_payment_map  started
2020-02-06 10:20:14.705004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select count(paytypeid) from cbo.mcs_paytypes
2020-02-06 10:20:14.705004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select count(id) from cbo.mcs_ecr_model_grp
2020-02-06 10:20:14.706004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select count(ms.ecrcodedef) from cbo.mcs_paytypes ms inner join cbo.mcs_ecr_payment_map em on (em.payment_id = ms.paytype) inner join cbo.mcs_ecr_payment_pool ep on (ep.ecr_payment_number = em.ecr_payment_number and ep.ecr_model_grp_id = em.ecr_model_grp_id)
2020-02-06 10:20:14.707004 I db Th{5772} [mcs/db/ecr_db.cpp:1157] define_payment_map() EcrDB::define_payment_map read list of mcs_payments size=10 n_model=7 n_mult=0
2020-02-06 10:20:14.707004 I db Th{5772} [mcs/db/ecr_db.cpp:1159] define_payment_map() 
                                EMPTY PAYMENT MAPPING default values from mcs_payments will be used
2020-02-06 10:20:14.707004 I sale Th{5772} [mcs/fr_service.cpp:625] create_ecrs() buff=60000 MAX_RECEIPT_SUM=60000.00
2020-02-06 10:20:14.707004 I sale Th{5772} [mcs/fr_service.cpp:628] create_ecrs() buff=1000000 MAX_DEPOSIT_SUM=1000000.00
2020-02-06 10:20:14.707004 I system Th{5772} [mcs/fr_service.cpp:636] create_ecrs() creating driver instance
2020-02-06 10:20:14.993004 I system Th{5772} [mcs/server_config.cpp:377] G_auto_close_shift_time() return tm=-01:-01:-01
2020-02-06 10:20:14.993004 I system Th{5772} [mcs/fr_service.cpp:665] create_ecrs() ecr.wp: 1. timeout=100 ecp=EcrControllerParams={ controller_timeout=2000 controller_strob=5 lock_timeout=100 lock_attempts=20}, esm=EcrShiftMonitoring={m_open_shift_at_first_receipt=1 m_arm_shift_close_time=-01:-01:-01 m_expired_shift_control_sec=1200}, is_opt=0, wp_pos_number=[12328], wp_hostname=msk-cn-351-srv1
2020-02-06 10:20:14.993004 I system Th{5772} [mcs/fr_service.cpp:636] create_ecrs() creating driver instance
2020-02-06 10:20:14.993004 I system Th{5772} [mcs/server_config.cpp:377] G_auto_close_shift_time() return tm=-01:-01:-01
2020-02-06 10:20:14.993004 I system Th{5772} [mcs/fr_service.cpp:665] create_ecrs() ecr.wp: 2. timeout=100 ecp=EcrControllerParams={ controller_timeout=2000 controller_strob=5 lock_timeout=100 lock_attempts=20}, esm=EcrShiftMonitoring={m_open_shift_at_first_receipt=1 m_arm_shift_close_time=-01:-01:-01 m_expired_shift_control_sec=1200}, is_opt=0, wp_pos_number=[], wp_hostname=msk-cn-351-node3
2020-02-06 10:20:14.993004 I system Th{5772} [mcs/fr_service.cpp:1651] run_service() okay creating objects 
2020-02-06 10:20:14.993004 I system Th{5772} [main/server_main.cpp:626] main() FrSerivce::run_service() - Ok
2020-02-06 10:20:15.016004 I sale Th{5772} [mcs/fr_service_hlp.cpp:122] g_init_receipt_print_map() append strict pay_type pt=PAY_TYPE_DEBET n_cop=1
2020-02-06 10:20:15.017004 I sale Th{5772} [mcs/fr_service_hlp.cpp:122] g_init_receipt_print_map() append strict pay_type pt=PAY_TYPE_OFFICE n_cop=1
2020-02-06 10:20:15.017004 I sale Th{5772} [mcs/fr_service_hlp.cpp:161] g_init_receipt_print_map() for key=1000 tune= ReceiptPrintTune={ n_cop=1, rps=RPSS_1_RECEIPT}
2020-02-06 10:20:15.017004 I sale Th{5772} [mcs/fr_service_hlp.cpp:161] g_init_receipt_print_map() for key=1100 tune= ReceiptPrintTune={ n_cop=1, rps=RPSS_1_RECEIPT}
2020-02-06 10:20:15.017004 I sale Th{5772} [mcs/fr_service_hlp.cpp:163] g_init_receipt_print_map() DUMP OR RECEIPT PRINT TUNING DEFAULT
2020-02-06 10:20:15.017004 I sale Th{5772} [mcs/fr_service_hlp.cpp:165] g_init_receipt_print_map() for key=1000 tune= ReceiptPrintTune={ n_cop=1, rps=RPSS_1_RECEIPT}
2020-02-06 10:20:15.017004 I sale Th{5772} [mcs/fr_service_hlp.cpp:165] g_init_receipt_print_map() for key=1100 tune= ReceiptPrintTune={ n_cop=1, rps=RPSS_1_RECEIPT}
2020-02-06 10:20:15.017004 I sale Th{5772} [mcs/fr_service_hlp.cpp:169] g_init_receipt_print_map() for key=0 tune= ReceiptPrintTune={ n_cop=0, rps=RPSS_3_RECEIPTS}
2020-02-06 10:20:15.017004 I sale Th{5772} [mcs/fr_service_hlp.cpp:169] g_init_receipt_print_map() for key=500 tune= ReceiptPrintTune={ n_cop=1, rps=RPSS_3_RECEIPTS}
2020-02-06 10:20:15.017004 I sale Th{5772} [mcs/fr_service_hlp.cpp:169] g_init_receipt_print_map() for key=800 tune= ReceiptPrintTune={ n_cop=0, rps=RPSS_3_RECEIPTS}
2020-02-06 10:20:15.017004 I sale Th{5772} [mcs/fr_service_hlp.cpp:169] g_init_receipt_print_map() for key=900 tune= ReceiptPrintTune={ n_cop=0, rps=RPSS_3_RECEIPTS}
2020-02-06 10:20:15.017004 I system Th{5772} [main/server_main.cpp:632] main() FrSerivceHlp::run_service() - Ok
2020-02-06 10:20:15.025004 D trk Th{5772} [mcs/trk_service.cpp:672] _get_trk_def_map() sid = NIL, shiftno = NIL, check_real = 0
2020-02-06 10:20:15.025004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select start_regime from azk.mcs_trks where trkno = ?
2020-02-06 10:20:15.026004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select start_regime from azk.mcs_trks where trkno = ?
2020-02-06 10:20:15.026004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select start_regime from azk.mcs_trks where trkno = ?
2020-02-06 10:20:15.027004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select start_regime from azk.mcs_trks where trkno = ?
2020-02-06 10:20:15.028004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select start_regime from azk.mcs_trks where trkno = ?
2020-02-06 10:20:15.029004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select start_regime from azk.mcs_trks where trkno = ?
2020-02-06 10:20:15.029004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select start_regime from azk.mcs_trks where trkno = ?
2020-02-06 10:20:15.030004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select start_regime from azk.mcs_trks where trkno = ?
2020-02-06 10:20:15.031004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select n.trkno,dn.nozzle,dn.canid,c.storageid  from  azk.mcs_hds_log as hdsl join azk.mcs_hds as hds on (hdsl.hds_id = hds.id) join azk.mcs_hds_detail as dn on (hds.id = dn.hds_id)  join azk.mcs_dyn_nozzles as n on (n.nozzle = dn.nozzle)  join azk.mcs_cans as c on (c.canid = dn.canid)  where hdsl.activity = ? 
2020-02-06 10:20:15.034004 I trk Th{5772} [mcs/trk_service.cpp:158] _add_fuels_to_map() search fuel for trk=1
2020-02-06 10:20:15.034004 I trk Th{5772} [mcs/trk_service.cpp:162] _add_fuels_to_map() search fuel for nozzle=11
2020-02-06 10:20:15.034004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select  shiftno from azk.mcs_shifts order by shiftno desc limit 1
2020-02-06 10:20:15.034004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing  select sa.SubArticleId,sa.articleid,a.external_str_id, a.articlename, a.ecrshortname, fc.shift_end_vol  from public.get_fuel_in_can(?, ?) fc  join azk.mcs_subarticles sa    on fc.expected_petrolid = sa.articleid      and sa.flg_base = 'SET_BASE'  join azk.mcs_articles a on sa.articleid = a.articleid  limit 1 
2020-02-06 10:20:15.174004 I trk Th{5772} [mcs/trk_service.cpp:162] _add_fuels_to_map() search fuel for nozzle=12
2020-02-06 10:20:15.174004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select  shiftno from azk.mcs_shifts order by shiftno desc limit 1
2020-02-06 10:20:15.174004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing  select sa.SubArticleId,sa.articleid,a.external_str_id, a.articlename, a.ecrshortname, fc.shift_end_vol  from public.get_fuel_in_can(?, ?) fc  join azk.mcs_subarticles sa    on fc.expected_petrolid = sa.articleid      and sa.flg_base = 'SET_BASE'  join azk.mcs_articles a on sa.articleid = a.articleid  limit 1 
2020-02-06 10:20:15.177004 I trk Th{5772} [mcs/trk_service.cpp:162] _add_fuels_to_map() search fuel for nozzle=13
2020-02-06 10:20:15.178004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select  shiftno from azk.mcs_shifts order by shiftno desc limit 1
2020-02-06 10:20:15.178004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing  select sa.SubArticleId,sa.articleid,a.external_str_id, a.articlename, a.ecrshortname, fc.shift_end_vol  from public.get_fuel_in_can(?, ?) fc  join azk.mcs_subarticles sa    on fc.expected_petrolid = sa.articleid      and sa.flg_base = 'SET_BASE'  join azk.mcs_articles a on sa.articleid = a.articleid  limit 1 
2020-02-06 10:20:15.181004 I trk Th{5772} [mcs/trk_service.cpp:162] _add_fuels_to_map() search fuel for nozzle=14
2020-02-06 10:20:15.181004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select  shiftno from azk.mcs_shifts order by shiftno desc limit 1
2020-02-06 10:20:15.181004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing  select sa.SubArticleId,sa.articleid,a.external_str_id, a.articlename, a.ecrshortname, fc.shift_end_vol  from public.get_fuel_in_can(?, ?) fc  join azk.mcs_subarticles sa    on fc.expected_petrolid = sa.articleid      and sa.flg_base = 'SET_BASE'  join azk.mcs_articles a on sa.articleid = a.articleid  limit 1 
2020-02-06 10:20:15.184004 I trk Th{5772} [mcs/trk_service.cpp:162] _add_fuels_to_map() search fuel for nozzle=15
2020-02-06 10:20:15.184004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select  shiftno from azk.mcs_shifts order by shiftno desc limit 1
2020-02-06 10:20:15.184004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing  select sa.SubArticleId,sa.articleid,a.external_str_id, a.articlename, a.ecrshortname, fc.shift_end_vol  from public.get_fuel_in_can(?, ?) fc  join azk.mcs_subarticles sa    on fc.expected_petrolid = sa.articleid      and sa.flg_base = 'SET_BASE'  join azk.mcs_articles a on sa.articleid = a.articleid  limit 1 
2020-02-06 10:20:15.187004 I trk Th{5772} [mcs/trk_service.cpp:158] _add_fuels_to_map() search fuel for trk=2
2020-02-06 10:20:15.187004 I trk Th{5772} [mcs/trk_service.cpp:162] _add_fuels_to_map() search fuel for nozzle=21
2020-02-06 10:20:15.187004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select  shiftno from azk.mcs_shifts order by shiftno desc limit 1
2020-02-06 10:20:15.188004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing  select sa.SubArticleId,sa.articleid,a.external_str_id, a.articlename, a.ecrshortname, fc.shift_end_vol  from public.get_fuel_in_can(?, ?) fc  join azk.mcs_subarticles sa    on fc.expected_petrolid = sa.articleid      and sa.flg_base = 'SET_BASE'  join azk.mcs_articles a on sa.articleid = a.articleid  limit 1 
2020-02-06 10:20:15.190004 I trk Th{5772} [mcs/trk_service.cpp:162] _add_fuels_to_map() search fuel for nozzle=22
2020-02-06 10:20:15.190004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select  shiftno from azk.mcs_shifts order by shiftno desc limit 1
2020-02-06 10:20:15.191004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing  select sa.SubArticleId,sa.articleid,a.external_str_id, a.articlename, a.ecrshortname, fc.shift_end_vol  from public.get_fuel_in_can(?, ?) fc  join azk.mcs_subarticles sa    on fc.expected_petrolid = sa.articleid      and sa.flg_base = 'SET_BASE'  join azk.mcs_articles a on sa.articleid = a.articleid  limit 1 
2020-02-06 10:20:15.193004 I trk Th{5772} [mcs/trk_service.cpp:162] _add_fuels_to_map() search fuel for nozzle=23
2020-02-06 10:20:15.193004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select  shiftno from azk.mcs_shifts order by shiftno desc limit 1
2020-02-06 10:20:15.194004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing  select sa.SubArticleId,sa.articleid,a.external_str_id, a.articlename, a.ecrshortname, fc.shift_end_vol  from public.get_fuel_in_can(?, ?) fc  join azk.mcs_subarticles sa    on fc.expected_petrolid = sa.articleid      and sa.flg_base = 'SET_BASE'  join azk.mcs_articles a on sa.articleid = a.articleid  limit 1 
2020-02-06 10:20:15.196004 I trk Th{5772} [mcs/trk_service.cpp:162] _add_fuels_to_map() search fuel for nozzle=24
2020-02-06 10:20:15.196004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select  shiftno from azk.mcs_shifts order by shiftno desc limit 1
2020-02-06 10:20:15.197004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing  select sa.SubArticleId,sa.articleid,a.external_str_id, a.articlename, a.ecrshortname, fc.shift_end_vol  from public.get_fuel_in_can(?, ?) fc  join azk.mcs_subarticles sa    on fc.expected_petrolid = sa.articleid      and sa.flg_base = 'SET_BASE'  join azk.mcs_articles a on sa.articleid = a.articleid  limit 1 
2020-02-06 10:20:15.199004 I trk Th{5772} [mcs/trk_service.cpp:162] _add_fuels_to_map() search fuel for nozzle=25
2020-02-06 10:20:15.199004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select  shiftno from azk.mcs_shifts order by shiftno desc limit 1
2020-02-06 10:20:15.200004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing  select sa.SubArticleId,sa.articleid,a.external_str_id, a.articlename, a.ecrshortname, fc.shift_end_vol  from public.get_fuel_in_can(?, ?) fc  join azk.mcs_subarticles sa    on fc.expected_petrolid = sa.articleid      and sa.flg_base = 'SET_BASE'  join azk.mcs_articles a on sa.articleid = a.articleid  limit 1 
2020-02-06 10:20:15.202004 I trk Th{5772} [mcs/trk_service.cpp:158] _add_fuels_to_map() search fuel for trk=3
2020-02-06 10:20:15.202004 I trk Th{5772} [mcs/trk_service.cpp:162] _add_fuels_to_map() search fuel for nozzle=31
2020-02-06 10:20:15.202004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select  shiftno from azk.mcs_shifts order by shiftno desc limit 1
2020-02-06 10:20:15.203004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing  select sa.SubArticleId,sa.articleid,a.external_str_id, a.articlename, a.ecrshortname, fc.shift_end_vol  from public.get_fuel_in_can(?, ?) fc  join azk.mcs_subarticles sa    on fc.expected_petrolid = sa.articleid      and sa.flg_base = 'SET_BASE'  join azk.mcs_articles a on sa.articleid = a.articleid  limit 1 
2020-02-06 10:20:15.205004 I trk Th{5772} [mcs/trk_service.cpp:162] _add_fuels_to_map() search fuel for nozzle=32
2020-02-06 10:20:15.205004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select  shiftno from azk.mcs_shifts order by shiftno desc limit 1
2020-02-06 10:20:15.206004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing  select sa.SubArticleId,sa.articleid,a.external_str_id, a.articlename, a.ecrshortname, fc.shift_end_vol  from public.get_fuel_in_can(?, ?) fc  join azk.mcs_subarticles sa    on fc.expected_petrolid = sa.articleid      and sa.flg_base = 'SET_BASE'  join azk.mcs_articles a on sa.articleid = a.articleid  limit 1 
2020-02-06 10:20:15.208004 I trk Th{5772} [mcs/trk_service.cpp:162] _add_fuels_to_map() search fuel for nozzle=33
2020-02-06 10:20:15.208004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select  shiftno from azk.mcs_shifts order by shiftno desc limit 1
2020-02-06 10:20:15.208004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing  select sa.SubArticleId,sa.articleid,a.external_str_id, a.articlename, a.ecrshortname, fc.shift_end_vol  from public.get_fuel_in_can(?, ?) fc  join azk.mcs_subarticles sa    on fc.expected_petrolid = sa.articleid      and sa.flg_base = 'SET_BASE'  join azk.mcs_articles a on sa.articleid = a.articleid  limit 1 
2020-02-06 10:20:15.211004 I trk Th{5772} [mcs/trk_service.cpp:162] _add_fuels_to_map() search fuel for nozzle=34
2020-02-06 10:20:15.211004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select  shiftno from azk.mcs_shifts order by shiftno desc limit 1
2020-02-06 10:20:15.211004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing  select sa.SubArticleId,sa.articleid,a.external_str_id, a.articlename, a.ecrshortname, fc.shift_end_vol  from public.get_fuel_in_can(?, ?) fc  join azk.mcs_subarticles sa    on fc.expected_petrolid = sa.articleid      and sa.flg_base = 'SET_BASE'  join azk.mcs_articles a on sa.articleid = a.articleid  limit 1 
2020-02-06 10:20:15.213004 I trk Th{5772} [mcs/trk_service.cpp:162] _add_fuels_to_map() search fuel for nozzle=35
2020-02-06 10:20:15.214004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select  shiftno from azk.mcs_shifts order by shiftno desc limit 1
2020-02-06 10:20:15.214004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing  select sa.SubArticleId,sa.articleid,a.external_str_id, a.articlename, a.ecrshortname, fc.shift_end_vol  from public.get_fuel_in_can(?, ?) fc  join azk.mcs_subarticles sa    on fc.expected_petrolid = sa.articleid      and sa.flg_base = 'SET_BASE'  join azk.mcs_articles a on sa.articleid = a.articleid  limit 1 
2020-02-06 10:20:15.216004 I trk Th{5772} [mcs/trk_service.cpp:158] _add_fuels_to_map() search fuel for trk=4
2020-02-06 10:20:15.216004 I trk Th{5772} [mcs/trk_service.cpp:162] _add_fuels_to_map() search fuel for nozzle=41
2020-02-06 10:20:15.216004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select  shiftno from azk.mcs_shifts order by shiftno desc limit 1
2020-02-06 10:20:15.217004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing  select sa.SubArticleId,sa.articleid,a.external_str_id, a.articlename, a.ecrshortname, fc.shift_end_vol  from public.get_fuel_in_can(?, ?) fc  join azk.mcs_subarticles sa    on fc.expected_petrolid = sa.articleid      and sa.flg_base = 'SET_BASE'  join azk.mcs_articles a on sa.articleid = a.articleid  limit 1 
2020-02-06 10:20:15.219004 I trk Th{5772} [mcs/trk_service.cpp:162] _add_fuels_to_map() search fuel for nozzle=42
2020-02-06 10:20:15.219004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select  shiftno from azk.mcs_shifts order by shiftno desc limit 1
2020-02-06 10:20:15.219004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing  select sa.SubArticleId,sa.articleid,a.external_str_id, a.articlename, a.ecrshortname, fc.shift_end_vol  from public.get_fuel_in_can(?, ?) fc  join azk.mcs_subarticles sa    on fc.expected_petrolid = sa.articleid      and sa.flg_base = 'SET_BASE'  join azk.mcs_articles a on sa.articleid = a.articleid  limit 1 
2020-02-06 10:20:15.222004 I trk Th{5772} [mcs/trk_service.cpp:162] _add_fuels_to_map() search fuel for nozzle=43
2020-02-06 10:20:15.222004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select  shiftno from azk.mcs_shifts order by shiftno desc limit 1
2020-02-06 10:20:15.222004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing  select sa.SubArticleId,sa.articleid,a.external_str_id, a.articlename, a.ecrshortname, fc.shift_end_vol  from public.get_fuel_in_can(?, ?) fc  join azk.mcs_subarticles sa    on fc.expected_petrolid = sa.articleid      and sa.flg_base = 'SET_BASE'  join azk.mcs_articles a on sa.articleid = a.articleid  limit 1 
2020-02-06 10:20:15.224004 I trk Th{5772} [mcs/trk_service.cpp:162] _add_fuels_to_map() search fuel for nozzle=44
2020-02-06 10:20:15.224004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select  shiftno from azk.mcs_shifts order by shiftno desc limit 1
2020-02-06 10:20:15.225004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing  select sa.SubArticleId,sa.articleid,a.external_str_id, a.articlename, a.ecrshortname, fc.shift_end_vol  from public.get_fuel_in_can(?, ?) fc  join azk.mcs_subarticles sa    on fc.expected_petrolid = sa.articleid      and sa.flg_base = 'SET_BASE'  join azk.mcs_articles a on sa.articleid = a.articleid  limit 1 
2020-02-06 10:20:15.227004 I trk Th{5772} [mcs/trk_service.cpp:162] _add_fuels_to_map() search fuel for nozzle=45
2020-02-06 10:20:15.227004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select  shiftno from azk.mcs_shifts order by shiftno desc limit 1
2020-02-06 10:20:15.227004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing  select sa.SubArticleId,sa.articleid,a.external_str_id, a.articlename, a.ecrshortname, fc.shift_end_vol  from public.get_fuel_in_can(?, ?) fc  join azk.mcs_subarticles sa    on fc.expected_petrolid = sa.articleid      and sa.flg_base = 'SET_BASE'  join azk.mcs_articles a on sa.articleid = a.articleid  limit 1 
2020-02-06 10:20:15.230004 I trk Th{5772} [mcs/trk_service.cpp:158] _add_fuels_to_map() search fuel for trk=5
2020-02-06 10:20:15.230004 I trk Th{5772} [mcs/trk_service.cpp:162] _add_fuels_to_map() search fuel for nozzle=51
2020-02-06 10:20:15.230004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select  shiftno from azk.mcs_shifts order by shiftno desc limit 1
2020-02-06 10:20:15.230004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing  select sa.SubArticleId,sa.articleid,a.external_str_id, a.articlename, a.ecrshortname, fc.shift_end_vol  from public.get_fuel_in_can(?, ?) fc  join azk.mcs_subarticles sa    on fc.expected_petrolid = sa.articleid      and sa.flg_base = 'SET_BASE'  join azk.mcs_articles a on sa.articleid = a.articleid  limit 1 
2020-02-06 10:20:15.232004 I trk Th{5772} [mcs/trk_service.cpp:162] _add_fuels_to_map() search fuel for nozzle=52
2020-02-06 10:20:15.232004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select  shiftno from azk.mcs_shifts order by shiftno desc limit 1
2020-02-06 10:20:15.232004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing  select sa.SubArticleId,sa.articleid,a.external_str_id, a.articlename, a.ecrshortname, fc.shift_end_vol  from public.get_fuel_in_can(?, ?) fc  join azk.mcs_subarticles sa    on fc.expected_petrolid = sa.articleid      and sa.flg_base = 'SET_BASE'  join azk.mcs_articles a on sa.articleid = a.articleid  limit 1 
2020-02-06 10:20:15.234004 I trk Th{5772} [mcs/trk_service.cpp:162] _add_fuels_to_map() search fuel for nozzle=53
2020-02-06 10:20:15.234004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select  shiftno from azk.mcs_shifts order by shiftno desc limit 1
2020-02-06 10:20:15.234004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing  select sa.SubArticleId,sa.articleid,a.external_str_id, a.articlename, a.ecrshortname, fc.shift_end_vol  from public.get_fuel_in_can(?, ?) fc  join azk.mcs_subarticles sa    on fc.expected_petrolid = sa.articleid      and sa.flg_base = 'SET_BASE'  join azk.mcs_articles a on sa.articleid = a.articleid  limit 1 
2020-02-06 10:20:15.236004 I trk Th{5772} [mcs/trk_service.cpp:162] _add_fuels_to_map() search fuel for nozzle=54
2020-02-06 10:20:15.236004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select  shiftno from azk.mcs_shifts order by shiftno desc limit 1
2020-02-06 10:20:15.236004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing  select sa.SubArticleId,sa.articleid,a.external_str_id, a.articlename, a.ecrshortname, fc.shift_end_vol  from public.get_fuel_in_can(?, ?) fc  join azk.mcs_subarticles sa    on fc.expected_petrolid = sa.articleid      and sa.flg_base = 'SET_BASE'  join azk.mcs_articles a on sa.articleid = a.articleid  limit 1 
2020-02-06 10:20:15.237004 I trk Th{5772} [mcs/trk_service.cpp:162] _add_fuels_to_map() search fuel for nozzle=55
2020-02-06 10:20:15.237004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select  shiftno from azk.mcs_shifts order by shiftno desc limit 1
2020-02-06 10:20:15.238004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing  select sa.SubArticleId,sa.articleid,a.external_str_id, a.articlename, a.ecrshortname, fc.shift_end_vol  from public.get_fuel_in_can(?, ?) fc  join azk.mcs_subarticles sa    on fc.expected_petrolid = sa.articleid      and sa.flg_base = 'SET_BASE'  join azk.mcs_articles a on sa.articleid = a.articleid  limit 1 
2020-02-06 10:20:15.239004 I trk Th{5772} [mcs/trk_service.cpp:158] _add_fuels_to_map() search fuel for trk=6
2020-02-06 10:20:15.239004 I trk Th{5772} [mcs/trk_service.cpp:162] _add_fuels_to_map() search fuel for nozzle=61
2020-02-06 10:20:15.239004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select  shiftno from azk.mcs_shifts order by shiftno desc limit 1
2020-02-06 10:20:15.239004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing  select sa.SubArticleId,sa.articleid,a.external_str_id, a.articlename, a.ecrshortname, fc.shift_end_vol  from public.get_fuel_in_can(?, ?) fc  join azk.mcs_subarticles sa    on fc.expected_petrolid = sa.articleid      and sa.flg_base = 'SET_BASE'  join azk.mcs_articles a on sa.articleid = a.articleid  limit 1 
2020-02-06 10:20:15.240004 I trk Th{5772} [mcs/trk_service.cpp:162] _add_fuels_to_map() search fuel for nozzle=62
2020-02-06 10:20:15.240004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select  shiftno from azk.mcs_shifts order by shiftno desc limit 1
2020-02-06 10:20:15.241004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing  select sa.SubArticleId,sa.articleid,a.external_str_id, a.articlename, a.ecrshortname, fc.shift_end_vol  from public.get_fuel_in_can(?, ?) fc  join azk.mcs_subarticles sa    on fc.expected_petrolid = sa.articleid      and sa.flg_base = 'SET_BASE'  join azk.mcs_articles a on sa.articleid = a.articleid  limit 1 
2020-02-06 10:20:15.242004 I trk Th{5772} [mcs/trk_service.cpp:162] _add_fuels_to_map() search fuel for nozzle=63
2020-02-06 10:20:15.242004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select  shiftno from azk.mcs_shifts order by shiftno desc limit 1
2020-02-06 10:20:15.242004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing  select sa.SubArticleId,sa.articleid,a.external_str_id, a.articlename, a.ecrshortname, fc.shift_end_vol  from public.get_fuel_in_can(?, ?) fc  join azk.mcs_subarticles sa    on fc.expected_petrolid = sa.articleid      and sa.flg_base = 'SET_BASE'  join azk.mcs_articles a on sa.articleid = a.articleid  limit 1 
2020-02-06 10:20:15.243004 I trk Th{5772} [mcs/trk_service.cpp:162] _add_fuels_to_map() search fuel for nozzle=64
2020-02-06 10:20:15.243004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select  shiftno from azk.mcs_shifts order by shiftno desc limit 1
2020-02-06 10:20:15.243004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing  select sa.SubArticleId,sa.articleid,a.external_str_id, a.articlename, a.ecrshortname, fc.shift_end_vol  from public.get_fuel_in_can(?, ?) fc  join azk.mcs_subarticles sa    on fc.expected_petrolid = sa.articleid      and sa.flg_base = 'SET_BASE'  join azk.mcs_articles a on sa.articleid = a.articleid  limit 1 
2020-02-06 10:20:15.244004 I trk Th{5772} [mcs/trk_service.cpp:162] _add_fuels_to_map() search fuel for nozzle=65
2020-02-06 10:20:15.244004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select  shiftno from azk.mcs_shifts order by shiftno desc limit 1
2020-02-06 10:20:15.244004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing  select sa.SubArticleId,sa.articleid,a.external_str_id, a.articlename, a.ecrshortname, fc.shift_end_vol  from public.get_fuel_in_can(?, ?) fc  join azk.mcs_subarticles sa    on fc.expected_petrolid = sa.articleid      and sa.flg_base = 'SET_BASE'  join azk.mcs_articles a on sa.articleid = a.articleid  limit 1 
2020-02-06 10:20:15.246004 I trk Th{5772} [mcs/trk_service.cpp:158] _add_fuels_to_map() search fuel for trk=7
2020-02-06 10:20:15.246004 I trk Th{5772} [mcs/trk_service.cpp:162] _add_fuels_to_map() search fuel for nozzle=71
2020-02-06 10:20:15.246004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select  shiftno from azk.mcs_shifts order by shiftno desc limit 1
2020-02-06 10:20:15.246004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing  select sa.SubArticleId,sa.articleid,a.external_str_id, a.articlename, a.ecrshortname, fc.shift_end_vol  from public.get_fuel_in_can(?, ?) fc  join azk.mcs_subarticles sa    on fc.expected_petrolid = sa.articleid      and sa.flg_base = 'SET_BASE'  join azk.mcs_articles a on sa.articleid = a.articleid  limit 1 
2020-02-06 10:20:15.247004 I trk Th{5772} [mcs/trk_service.cpp:158] _add_fuels_to_map() search fuel for trk=8
2020-02-06 10:20:15.247004 I trk Th{5772} [mcs/trk_service.cpp:162] _add_fuels_to_map() search fuel for nozzle=81
2020-02-06 10:20:15.247004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select  shiftno from azk.mcs_shifts order by shiftno desc limit 1
2020-02-06 10:20:15.247004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing  select sa.SubArticleId,sa.articleid,a.external_str_id, a.articlename, a.ecrshortname, fc.shift_end_vol  from public.get_fuel_in_can(?, ?) fc  join azk.mcs_subarticles sa    on fc.expected_petrolid = sa.articleid      and sa.flg_base = 'SET_BASE'  join azk.mcs_articles a on sa.articleid = a.articleid  limit 1 
2020-02-06 10:20:15.248004 I trk Th{5772} [mcs/trk_service.cpp:162] _add_fuels_to_map() search fuel for nozzle=82
2020-02-06 10:20:15.248004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select  shiftno from azk.mcs_shifts order by shiftno desc limit 1
2020-02-06 10:20:15.248004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing  select sa.SubArticleId,sa.articleid,a.external_str_id, a.articlename, a.ecrshortname, fc.shift_end_vol  from public.get_fuel_in_can(?, ?) fc  join azk.mcs_subarticles sa    on fc.expected_petrolid = sa.articleid      and sa.flg_base = 'SET_BASE'  join azk.mcs_articles a on sa.articleid = a.articleid  limit 1 
2020-02-06 10:20:15.249004 I db Th{5772} [mcs/price_service.cpp:249] fill_nozzle_price_map() setup prices for trk=1
2020-02-06 10:20:15.249004 I db Th{5772} [mcs/price_service.cpp:253] fill_nozzle_price_map() found nozzle=11
2020-02-06 10:20:15.249004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select p.baseprice from azk.mcs_subarticles sa join docs_azk.mcs_docprice_detail pd on sa.articleid = pd.articleid and sa.subarticleid = ? join docs_azk.mcs_docprice doc on doc.docid = pd.docid and doc.state = ? join docs_azk.mcs_pricelist p on p.docdetailid = pd.docdetailid order by doc.starttp desc limit 1 
2020-02-06 10:20:15.435004 D system Th{5772} [mcs/price_service.cpp:272] fill_nozzle_price_map() price is 46.70 for petrol = 1000051 subpetrol = 1000052, doc_price_id = NIL, global_nozzle = 11
2020-02-06 10:20:15.435004 I db Th{5772} [mcs/price_service.cpp:253] fill_nozzle_price_map() found nozzle=12
2020-02-06 10:20:15.435004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select p.baseprice from azk.mcs_subarticles sa join docs_azk.mcs_docprice_detail pd on sa.articleid = pd.articleid and sa.subarticleid = ? join docs_azk.mcs_docprice doc on doc.docid = pd.docid and doc.state = ? join docs_azk.mcs_pricelist p on p.docdetailid = pd.docdetailid order by doc.starttp desc limit 1 
2020-02-06 10:20:15.437004 D system Th{5772} [mcs/price_service.cpp:272] fill_nozzle_price_map() price is 42.70 for petrol = 1000033 subpetrol = 1000034, doc_price_id = NIL, global_nozzle = 12
2020-02-06 10:20:15.437004 I db Th{5772} [mcs/price_service.cpp:253] fill_nozzle_price_map() found nozzle=13
2020-02-06 10:20:15.437004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select p.baseprice from azk.mcs_subarticles sa join docs_azk.mcs_docprice_detail pd on sa.articleid = pd.articleid and sa.subarticleid = ? join docs_azk.mcs_docprice doc on doc.docid = pd.docid and doc.state = ? join docs_azk.mcs_pricelist p on p.docdetailid = pd.docdetailid order by doc.starttp desc limit 1 
2020-02-06 10:20:15.439004 D system Th{5772} [mcs/price_service.cpp:272] fill_nozzle_price_map() price is 45.90 for petrol = 1000081 subpetrol = 1000082, doc_price_id = NIL, global_nozzle = 13
2020-02-06 10:20:15.439004 I db Th{5772} [mcs/price_service.cpp:253] fill_nozzle_price_map() found nozzle=14
2020-02-06 10:20:15.439004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select p.baseprice from azk.mcs_subarticles sa join docs_azk.mcs_docprice_detail pd on sa.articleid = pd.articleid and sa.subarticleid = ? join docs_azk.mcs_docprice doc on doc.docid = pd.docid and doc.state = ? join docs_azk.mcs_pricelist p on p.docdetailid = pd.docdetailid order by doc.starttp desc limit 1 
2020-02-06 10:20:15.442004 D system Th{5772} [mcs/price_service.cpp:272] fill_nozzle_price_map() price is 47.00 for petrol = 1000003 subpetrol = 1000004, doc_price_id = NIL, global_nozzle = 14
2020-02-06 10:20:15.442004 I db Th{5772} [mcs/price_service.cpp:253] fill_nozzle_price_map() found nozzle=15
2020-02-06 10:20:15.442004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select p.baseprice from azk.mcs_subarticles sa join docs_azk.mcs_docprice_detail pd on sa.articleid = pd.articleid and sa.subarticleid = ? join docs_azk.mcs_docprice doc on doc.docid = pd.docid and doc.state = ? join docs_azk.mcs_pricelist p on p.docdetailid = pd.docdetailid order by doc.starttp desc limit 1 
2020-02-06 10:20:15.444004 D system Th{5772} [mcs/price_service.cpp:272] fill_nozzle_price_map() price is 51.60 for petrol = 1000054 subpetrol = 1000055, doc_price_id = NIL, global_nozzle = 15
2020-02-06 10:20:15.444004 I db Th{5772} [mcs/price_service.cpp:249] fill_nozzle_price_map() setup prices for trk=2
2020-02-06 10:20:15.444004 I db Th{5772} [mcs/price_service.cpp:253] fill_nozzle_price_map() found nozzle=21
2020-02-06 10:20:15.444004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select p.baseprice from azk.mcs_subarticles sa join docs_azk.mcs_docprice_detail pd on sa.articleid = pd.articleid and sa.subarticleid = ? join docs_azk.mcs_docprice doc on doc.docid = pd.docid and doc.state = ? join docs_azk.mcs_pricelist p on p.docdetailid = pd.docdetailid order by doc.starttp desc limit 1 
2020-02-06 10:20:15.446004 D system Th{5772} [mcs/price_service.cpp:272] fill_nozzle_price_map() price is 46.70 for petrol = 1000051 subpetrol = 1000052, doc_price_id = NIL, global_nozzle = 21
2020-02-06 10:20:15.446004 I db Th{5772} [mcs/price_service.cpp:253] fill_nozzle_price_map() found nozzle=22
2020-02-06 10:20:15.446004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select p.baseprice from azk.mcs_subarticles sa join docs_azk.mcs_docprice_detail pd on sa.articleid = pd.articleid and sa.subarticleid = ? join docs_azk.mcs_docprice doc on doc.docid = pd.docid and doc.state = ? join docs_azk.mcs_pricelist p on p.docdetailid = pd.docdetailid order by doc.starttp desc limit 1 
2020-02-06 10:20:15.448004 D system Th{5772} [mcs/price_service.cpp:272] fill_nozzle_price_map() price is 42.70 for petrol = 1000033 subpetrol = 1000034, doc_price_id = NIL, global_nozzle = 22
2020-02-06 10:20:15.449004 I db Th{5772} [mcs/price_service.cpp:253] fill_nozzle_price_map() found nozzle=23
2020-02-06 10:20:15.449004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select p.baseprice from azk.mcs_subarticles sa join docs_azk.mcs_docprice_detail pd on sa.articleid = pd.articleid and sa.subarticleid = ? join docs_azk.mcs_docprice doc on doc.docid = pd.docid and doc.state = ? join docs_azk.mcs_pricelist p on p.docdetailid = pd.docdetailid order by doc.starttp desc limit 1 
2020-02-06 10:20:15.451004 D system Th{5772} [mcs/price_service.cpp:272] fill_nozzle_price_map() price is 45.90 for petrol = 1000081 subpetrol = 1000082, doc_price_id = NIL, global_nozzle = 23
2020-02-06 10:20:15.451004 I db Th{5772} [mcs/price_service.cpp:253] fill_nozzle_price_map() found nozzle=24
2020-02-06 10:20:15.451004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select p.baseprice from azk.mcs_subarticles sa join docs_azk.mcs_docprice_detail pd on sa.articleid = pd.articleid and sa.subarticleid = ? join docs_azk.mcs_docprice doc on doc.docid = pd.docid and doc.state = ? join docs_azk.mcs_pricelist p on p.docdetailid = pd.docdetailid order by doc.starttp desc limit 1 
2020-02-06 10:20:15.453004 D system Th{5772} [mcs/price_service.cpp:272] fill_nozzle_price_map() price is 47.00 for petrol = 1000003 subpetrol = 1000004, doc_price_id = NIL, global_nozzle = 24
2020-02-06 10:20:15.453004 I db Th{5772} [mcs/price_service.cpp:253] fill_nozzle_price_map() found nozzle=25
2020-02-06 10:20:15.453004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select p.baseprice from azk.mcs_subarticles sa join docs_azk.mcs_docprice_detail pd on sa.articleid = pd.articleid and sa.subarticleid = ? join docs_azk.mcs_docprice doc on doc.docid = pd.docid and doc.state = ? join docs_azk.mcs_pricelist p on p.docdetailid = pd.docdetailid order by doc.starttp desc limit 1 
2020-02-06 10:20:15.455004 D system Th{5772} [mcs/price_service.cpp:272] fill_nozzle_price_map() price is 51.60 for petrol = 1000054 subpetrol = 1000055, doc_price_id = NIL, global_nozzle = 25
2020-02-06 10:20:15.455004 I db Th{5772} [mcs/price_service.cpp:249] fill_nozzle_price_map() setup prices for trk=3
2020-02-06 10:20:15.455004 I db Th{5772} [mcs/price_service.cpp:253] fill_nozzle_price_map() found nozzle=31
2020-02-06 10:20:15.455004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select p.baseprice from azk.mcs_subarticles sa join docs_azk.mcs_docprice_detail pd on sa.articleid = pd.articleid and sa.subarticleid = ? join docs_azk.mcs_docprice doc on doc.docid = pd.docid and doc.state = ? join docs_azk.mcs_pricelist p on p.docdetailid = pd.docdetailid order by doc.starttp desc limit 1 
2020-02-06 10:20:15.457004 D system Th{5772} [mcs/price_service.cpp:272] fill_nozzle_price_map() price is 46.70 for petrol = 1000051 subpetrol = 1000052, doc_price_id = NIL, global_nozzle = 31
2020-02-06 10:20:15.457004 I db Th{5772} [mcs/price_service.cpp:253] fill_nozzle_price_map() found nozzle=32
2020-02-06 10:20:15.457004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select p.baseprice from azk.mcs_subarticles sa join docs_azk.mcs_docprice_detail pd on sa.articleid = pd.articleid and sa.subarticleid = ? join docs_azk.mcs_docprice doc on doc.docid = pd.docid and doc.state = ? join docs_azk.mcs_pricelist p on p.docdetailid = pd.docdetailid order by doc.starttp desc limit 1 
2020-02-06 10:20:15.459004 D system Th{5772} [mcs/price_service.cpp:272] fill_nozzle_price_map() price is 42.70 for petrol = 1000033 subpetrol = 1000034, doc_price_id = NIL, global_nozzle = 32
2020-02-06 10:20:15.459004 I db Th{5772} [mcs/price_service.cpp:253] fill_nozzle_price_map() found nozzle=33
2020-02-06 10:20:15.459004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select p.baseprice from azk.mcs_subarticles sa join docs_azk.mcs_docprice_detail pd on sa.articleid = pd.articleid and sa.subarticleid = ? join docs_azk.mcs_docprice doc on doc.docid = pd.docid and doc.state = ? join docs_azk.mcs_pricelist p on p.docdetailid = pd.docdetailid order by doc.starttp desc limit 1 
2020-02-06 10:20:15.461004 D system Th{5772} [mcs/price_service.cpp:272] fill_nozzle_price_map() price is 45.90 for petrol = 1000081 subpetrol = 1000082, doc_price_id = NIL, global_nozzle = 33
2020-02-06 10:20:15.461004 I db Th{5772} [mcs/price_service.cpp:253] fill_nozzle_price_map() found nozzle=34
2020-02-06 10:20:15.461004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select p.baseprice from azk.mcs_subarticles sa join docs_azk.mcs_docprice_detail pd on sa.articleid = pd.articleid and sa.subarticleid = ? join docs_azk.mcs_docprice doc on doc.docid = pd.docid and doc.state = ? join docs_azk.mcs_pricelist p on p.docdetailid = pd.docdetailid order by doc.starttp desc limit 1 
2020-02-06 10:20:15.463004 D system Th{5772} [mcs/price_service.cpp:272] fill_nozzle_price_map() price is 47.00 for petrol = 1000003 subpetrol = 1000004, doc_price_id = NIL, global_nozzle = 34
2020-02-06 10:20:15.464004 I db Th{5772} [mcs/price_service.cpp:253] fill_nozzle_price_map() found nozzle=35
2020-02-06 10:20:15.464004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select p.baseprice from azk.mcs_subarticles sa join docs_azk.mcs_docprice_detail pd on sa.articleid = pd.articleid and sa.subarticleid = ? join docs_azk.mcs_docprice doc on doc.docid = pd.docid and doc.state = ? join docs_azk.mcs_pricelist p on p.docdetailid = pd.docdetailid order by doc.starttp desc limit 1 
2020-02-06 10:20:15.466004 D system Th{5772} [mcs/price_service.cpp:272] fill_nozzle_price_map() price is 51.60 for petrol = 1000054 subpetrol = 1000055, doc_price_id = NIL, global_nozzle = 35
2020-02-06 10:20:15.466004 I db Th{5772} [mcs/price_service.cpp:249] fill_nozzle_price_map() setup prices for trk=4
2020-02-06 10:20:15.466004 I db Th{5772} [mcs/price_service.cpp:253] fill_nozzle_price_map() found nozzle=41
2020-02-06 10:20:15.466004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select p.baseprice from azk.mcs_subarticles sa join docs_azk.mcs_docprice_detail pd on sa.articleid = pd.articleid and sa.subarticleid = ? join docs_azk.mcs_docprice doc on doc.docid = pd.docid and doc.state = ? join docs_azk.mcs_pricelist p on p.docdetailid = pd.docdetailid order by doc.starttp desc limit 1 
2020-02-06 10:20:15.468004 D system Th{5772} [mcs/price_service.cpp:272] fill_nozzle_price_map() price is 46.70 for petrol = 1000051 subpetrol = 1000052, doc_price_id = NIL, global_nozzle = 41
2020-02-06 10:20:15.468004 I db Th{5772} [mcs/price_service.cpp:253] fill_nozzle_price_map() found nozzle=42
2020-02-06 10:20:15.468004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select p.baseprice from azk.mcs_subarticles sa join docs_azk.mcs_docprice_detail pd on sa.articleid = pd.articleid and sa.subarticleid = ? join docs_azk.mcs_docprice doc on doc.docid = pd.docid and doc.state = ? join docs_azk.mcs_pricelist p on p.docdetailid = pd.docdetailid order by doc.starttp desc limit 1 
2020-02-06 10:20:15.470004 D system Th{5772} [mcs/price_service.cpp:272] fill_nozzle_price_map() price is 42.70 for petrol = 1000033 subpetrol = 1000034, doc_price_id = NIL, global_nozzle = 42
2020-02-06 10:20:15.470004 I db Th{5772} [mcs/price_service.cpp:253] fill_nozzle_price_map() found nozzle=43
2020-02-06 10:20:15.470004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select p.baseprice from azk.mcs_subarticles sa join docs_azk.mcs_docprice_detail pd on sa.articleid = pd.articleid and sa.subarticleid = ? join docs_azk.mcs_docprice doc on doc.docid = pd.docid and doc.state = ? join docs_azk.mcs_pricelist p on p.docdetailid = pd.docdetailid order by doc.starttp desc limit 1 
2020-02-06 10:20:15.472004 D system Th{5772} [mcs/price_service.cpp:272] fill_nozzle_price_map() price is 45.90 for petrol = 1000081 subpetrol = 1000082, doc_price_id = NIL, global_nozzle = 43
2020-02-06 10:20:15.472004 I db Th{5772} [mcs/price_service.cpp:253] fill_nozzle_price_map() found nozzle=44
2020-02-06 10:20:15.472004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select p.baseprice from azk.mcs_subarticles sa join docs_azk.mcs_docprice_detail pd on sa.articleid = pd.articleid and sa.subarticleid = ? join docs_azk.mcs_docprice doc on doc.docid = pd.docid and doc.state = ? join docs_azk.mcs_pricelist p on p.docdetailid = pd.docdetailid order by doc.starttp desc limit 1 
2020-02-06 10:20:15.474004 D system Th{5772} [mcs/price_service.cpp:272] fill_nozzle_price_map() price is 47.00 for petrol = 1000003 subpetrol = 1000004, doc_price_id = NIL, global_nozzle = 44
2020-02-06 10:20:15.474004 I db Th{5772} [mcs/price_service.cpp:253] fill_nozzle_price_map() found nozzle=45
2020-02-06 10:20:15.474004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select p.baseprice from azk.mcs_subarticles sa join docs_azk.mcs_docprice_detail pd on sa.articleid = pd.articleid and sa.subarticleid = ? join docs_azk.mcs_docprice doc on doc.docid = pd.docid and doc.state = ? join docs_azk.mcs_pricelist p on p.docdetailid = pd.docdetailid order by doc.starttp desc limit 1 
2020-02-06 10:20:15.476004 D system Th{5772} [mcs/price_service.cpp:272] fill_nozzle_price_map() price is 51.60 for petrol = 1000054 subpetrol = 1000055, doc_price_id = NIL, global_nozzle = 45
2020-02-06 10:20:15.476004 I db Th{5772} [mcs/price_service.cpp:249] fill_nozzle_price_map() setup prices for trk=5
2020-02-06 10:20:15.476004 I db Th{5772} [mcs/price_service.cpp:253] fill_nozzle_price_map() found nozzle=51
2020-02-06 10:20:15.476004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select p.baseprice from azk.mcs_subarticles sa join docs_azk.mcs_docprice_detail pd on sa.articleid = pd.articleid and sa.subarticleid = ? join docs_azk.mcs_docprice doc on doc.docid = pd.docid and doc.state = ? join docs_azk.mcs_pricelist p on p.docdetailid = pd.docdetailid order by doc.starttp desc limit 1 
2020-02-06 10:20:15.478004 D system Th{5772} [mcs/price_service.cpp:272] fill_nozzle_price_map() price is 46.70 for petrol = 1000051 subpetrol = 1000052, doc_price_id = NIL, global_nozzle = 51
2020-02-06 10:20:15.478004 I db Th{5772} [mcs/price_service.cpp:253] fill_nozzle_price_map() found nozzle=52
2020-02-06 10:20:15.478004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select p.baseprice from azk.mcs_subarticles sa join docs_azk.mcs_docprice_detail pd on sa.articleid = pd.articleid and sa.subarticleid = ? join docs_azk.mcs_docprice doc on doc.docid = pd.docid and doc.state = ? join docs_azk.mcs_pricelist p on p.docdetailid = pd.docdetailid order by doc.starttp desc limit 1 
2020-02-06 10:20:15.480004 D system Th{5772} [mcs/price_service.cpp:272] fill_nozzle_price_map() price is 42.70 for petrol = 1000033 subpetrol = 1000034, doc_price_id = NIL, global_nozzle = 52
2020-02-06 10:20:15.480004 I db Th{5772} [mcs/price_service.cpp:253] fill_nozzle_price_map() found nozzle=53
2020-02-06 10:20:15.480004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select p.baseprice from azk.mcs_subarticles sa join docs_azk.mcs_docprice_detail pd on sa.articleid = pd.articleid and sa.subarticleid = ? join docs_azk.mcs_docprice doc on doc.docid = pd.docid and doc.state = ? join docs_azk.mcs_pricelist p on p.docdetailid = pd.docdetailid order by doc.starttp desc limit 1 
2020-02-06 10:20:15.482004 D system Th{5772} [mcs/price_service.cpp:272] fill_nozzle_price_map() price is 45.90 for petrol = 1000081 subpetrol = 1000082, doc_price_id = NIL, global_nozzle = 53
2020-02-06 10:20:15.482004 I db Th{5772} [mcs/price_service.cpp:253] fill_nozzle_price_map() found nozzle=54
2020-02-06 10:20:15.482004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select p.baseprice from azk.mcs_subarticles sa join docs_azk.mcs_docprice_detail pd on sa.articleid = pd.articleid and sa.subarticleid = ? join docs_azk.mcs_docprice doc on doc.docid = pd.docid and doc.state = ? join docs_azk.mcs_pricelist p on p.docdetailid = pd.docdetailid order by doc.starttp desc limit 1 
2020-02-06 10:20:15.484004 D system Th{5772} [mcs/price_service.cpp:272] fill_nozzle_price_map() price is 47.00 for petrol = 1000003 subpetrol = 1000004, doc_price_id = NIL, global_nozzle = 54
2020-02-06 10:20:15.484004 I db Th{5772} [mcs/price_service.cpp:253] fill_nozzle_price_map() found nozzle=55
2020-02-06 10:20:15.484004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select p.baseprice from azk.mcs_subarticles sa join docs_azk.mcs_docprice_detail pd on sa.articleid = pd.articleid and sa.subarticleid = ? join docs_azk.mcs_docprice doc on doc.docid = pd.docid and doc.state = ? join docs_azk.mcs_pricelist p on p.docdetailid = pd.docdetailid order by doc.starttp desc limit 1 
2020-02-06 10:20:15.485004 D system Th{5772} [mcs/price_service.cpp:272] fill_nozzle_price_map() price is 51.60 for petrol = 1000054 subpetrol = 1000055, doc_price_id = NIL, global_nozzle = 55
2020-02-06 10:20:15.485004 I db Th{5772} [mcs/price_service.cpp:249] fill_nozzle_price_map() setup prices for trk=6
2020-02-06 10:20:15.485004 I db Th{5772} [mcs/price_service.cpp:253] fill_nozzle_price_map() found nozzle=61
2020-02-06 10:20:15.485004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select p.baseprice from azk.mcs_subarticles sa join docs_azk.mcs_docprice_detail pd on sa.articleid = pd.articleid and sa.subarticleid = ? join docs_azk.mcs_docprice doc on doc.docid = pd.docid and doc.state = ? join docs_azk.mcs_pricelist p on p.docdetailid = pd.docdetailid order by doc.starttp desc limit 1 
2020-02-06 10:20:15.487004 D system Th{5772} [mcs/price_service.cpp:272] fill_nozzle_price_map() price is 46.70 for petrol = 1000051 subpetrol = 1000052, doc_price_id = NIL, global_nozzle = 61
2020-02-06 10:20:15.487004 I db Th{5772} [mcs/price_service.cpp:253] fill_nozzle_price_map() found nozzle=62
2020-02-06 10:20:15.487004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select p.baseprice from azk.mcs_subarticles sa join docs_azk.mcs_docprice_detail pd on sa.articleid = pd.articleid and sa.subarticleid = ? join docs_azk.mcs_docprice doc on doc.docid = pd.docid and doc.state = ? join docs_azk.mcs_pricelist p on p.docdetailid = pd.docdetailid order by doc.starttp desc limit 1 
2020-02-06 10:20:15.488004 D system Th{5772} [mcs/price_service.cpp:272] fill_nozzle_price_map() price is 42.70 for petrol = 1000033 subpetrol = 1000034, doc_price_id = NIL, global_nozzle = 62
2020-02-06 10:20:15.488004 I db Th{5772} [mcs/price_service.cpp:253] fill_nozzle_price_map() found nozzle=63
2020-02-06 10:20:15.488004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select p.baseprice from azk.mcs_subarticles sa join docs_azk.mcs_docprice_detail pd on sa.articleid = pd.articleid and sa.subarticleid = ? join docs_azk.mcs_docprice doc on doc.docid = pd.docid and doc.state = ? join docs_azk.mcs_pricelist p on p.docdetailid = pd.docdetailid order by doc.starttp desc limit 1 
2020-02-06 10:20:15.489004 D system Th{5772} [mcs/price_service.cpp:272] fill_nozzle_price_map() price is 45.90 for petrol = 1000081 subpetrol = 1000082, doc_price_id = NIL, global_nozzle = 63
2020-02-06 10:20:15.490004 I db Th{5772} [mcs/price_service.cpp:253] fill_nozzle_price_map() found nozzle=64
2020-02-06 10:20:15.490004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select p.baseprice from azk.mcs_subarticles sa join docs_azk.mcs_docprice_detail pd on sa.articleid = pd.articleid and sa.subarticleid = ? join docs_azk.mcs_docprice doc on doc.docid = pd.docid and doc.state = ? join docs_azk.mcs_pricelist p on p.docdetailid = pd.docdetailid order by doc.starttp desc limit 1 
2020-02-06 10:20:15.491004 D system Th{5772} [mcs/price_service.cpp:272] fill_nozzle_price_map() price is 47.00 for petrol = 1000003 subpetrol = 1000004, doc_price_id = NIL, global_nozzle = 64
2020-02-06 10:20:15.491004 I db Th{5772} [mcs/price_service.cpp:253] fill_nozzle_price_map() found nozzle=65
2020-02-06 10:20:15.491004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select p.baseprice from azk.mcs_subarticles sa join docs_azk.mcs_docprice_detail pd on sa.articleid = pd.articleid and sa.subarticleid = ? join docs_azk.mcs_docprice doc on doc.docid = pd.docid and doc.state = ? join docs_azk.mcs_pricelist p on p.docdetailid = pd.docdetailid order by doc.starttp desc limit 1 
2020-02-06 10:20:15.492004 D system Th{5772} [mcs/price_service.cpp:272] fill_nozzle_price_map() price is 51.60 for petrol = 1000054 subpetrol = 1000055, doc_price_id = NIL, global_nozzle = 65
2020-02-06 10:20:15.492004 I db Th{5772} [mcs/price_service.cpp:249] fill_nozzle_price_map() setup prices for trk=7
2020-02-06 10:20:15.492004 I db Th{5772} [mcs/price_service.cpp:253] fill_nozzle_price_map() found nozzle=71
2020-02-06 10:20:15.492004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select p.baseprice from azk.mcs_subarticles sa join docs_azk.mcs_docprice_detail pd on sa.articleid = pd.articleid and sa.subarticleid = ? join docs_azk.mcs_docprice doc on doc.docid = pd.docid and doc.state = ? join docs_azk.mcs_pricelist p on p.docdetailid = pd.docdetailid order by doc.starttp desc limit 1 
2020-02-06 10:20:15.493004 D system Th{5772} [mcs/price_service.cpp:272] fill_nozzle_price_map() price is 46.70 for petrol = 1000051 subpetrol = 1000052, doc_price_id = NIL, global_nozzle = 71
2020-02-06 10:20:15.493004 I db Th{5772} [mcs/price_service.cpp:249] fill_nozzle_price_map() setup prices for trk=8
2020-02-06 10:20:15.493004 I db Th{5772} [mcs/price_service.cpp:253] fill_nozzle_price_map() found nozzle=81
2020-02-06 10:20:15.493004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select p.baseprice from azk.mcs_subarticles sa join docs_azk.mcs_docprice_detail pd on sa.articleid = pd.articleid and sa.subarticleid = ? join docs_azk.mcs_docprice doc on doc.docid = pd.docid and doc.state = ? join docs_azk.mcs_pricelist p on p.docdetailid = pd.docdetailid order by doc.starttp desc limit 1 
2020-02-06 10:20:15.494004 D system Th{5772} [mcs/price_service.cpp:272] fill_nozzle_price_map() price is 46.70 for petrol = 1000051 subpetrol = 1000052, doc_price_id = NIL, global_nozzle = 81
2020-02-06 10:20:15.494004 I db Th{5772} [mcs/price_service.cpp:253] fill_nozzle_price_map() found nozzle=82
2020-02-06 10:20:15.494004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select p.baseprice from azk.mcs_subarticles sa join docs_azk.mcs_docprice_detail pd on sa.articleid = pd.articleid and sa.subarticleid = ? join docs_azk.mcs_docprice doc on doc.docid = pd.docid and doc.state = ? join docs_azk.mcs_pricelist p on p.docdetailid = pd.docdetailid order by doc.starttp desc limit 1 
2020-02-06 10:20:15.495004 D system Th{5772} [mcs/price_service.cpp:272] fill_nozzle_price_map() price is 46.70 for petrol = 1000051 subpetrol = 1000052, doc_price_id = NIL, global_nozzle = 82
2020-02-06 10:20:15.496004 D trk Th{5772} [mcs/trk_service.cpp:554] run_service() g_default_doze=1.000 trk_def_map=TrkDefMap={
                                 TrkId=1: TrkStartRegime=TRKSTARTREGIME_AUTO
                                Nozzles=[   NozzleId=11: canid=5 subpetrol=1000052 storageid=2
                                   NozzleId=12: canid=4 subpetrol=1000034 storageid=2
                                   NozzleId=13: canid=3 subpetrol=1000082 storageid=2
                                   NozzleId=14: canid=2 subpetrol=1000004 storageid=2
                                   NozzleId=15: canid=1 subpetrol=1000055 storageid=2
                                ]
                                 TrkId=2: TrkStartRegime=TRKSTARTREGIME_AUTO
                                Nozzles=[   NozzleId=21: canid=5 subpetrol=1000052 storageid=2
                                   NozzleId=22: canid=4 subpetrol=1000034 storageid=2
                                   NozzleId=23: canid=3 subpetrol=1000082 storageid=2
                                   NozzleId=24: canid=2 subpetrol=1000004 storageid=2
                                   NozzleId=25: canid=1 subpetrol=1000055 storageid=2
                                ]
                                 TrkId=3: TrkStartRegime=TRKSTARTREGIME_AUTO
                                Nozzles=[   NozzleId=31: canid=5 subpetrol=1000052 storageid=2
                                   NozzleId=32: canid=4 subpetrol=1000034 storageid=2
                                   NozzleId=33: canid=3 subpetrol=1000082 storageid=2
                                   NozzleId=34: canid=2 subpetrol=1000004 storageid=2
                                   NozzleId=35: canid=1 subpetrol=1000055 storageid=2
                                ]
                                 TrkId=4: TrkStartRegime=TRKSTARTREGIME_AUTO
                                Nozzles=[   NozzleId=41: canid=5 subpetrol=1000052 storageid=2
                                   NozzleId=42: canid=4 subpetrol=1000034 storageid=2
                                   NozzleId=43: canid=3 subpetrol=1000082 storageid=2
                                   NozzleId=44: canid=2 subpetrol=1000004 storageid=2
                                   NozzleId=45: canid=1 subpetrol=1000055 storageid=2
                                ]
                                 TrkId=5: TrkStartRegime=TRKSTARTREGIME_AUTO
                                Nozzles=[   NozzleId=51: canid=5 subpetrol=1000052 storageid=2
                                   NozzleId=52: canid=4 subpetrol=1000034 storageid=2
                                   NozzleId=53: canid=3 subpetrol=1000082 storageid=2
                                   NozzleId=54: canid=2 subpetrol=1000004 storageid=2
                                   NozzleId=55: canid=1 subpetrol=1000055 storageid=2
                                ]
                                 TrkId=6: TrkStartRegime=TRKSTARTREGIME_AUTO
                                Nozzles=[   NozzleId=61: canid=5 subpetrol=1000052 storageid=2
                                   NozzleId=62: canid=4 subpetrol=1000034 storageid=2
                                   NozzleId=63: canid=3 subpetrol=1000082 storageid=2
                                   NozzleId=64: canid=2 subpetrol=1000004 storageid=2
                                   NozzleId=65: canid=1 subpetrol=1000055 storageid=2
                                ]
                                 TrkId=7: TrkStartRegime=TRKSTARTREGIME_OPERATOR
                                Nozzles=[   NozzleId=71: canid=6 subpetrol=1000052 storageid=2
                                ]
                                 TrkId=8: TrkStartRegime=TRKSTARTREGIME_OPERATOR
                                Nozzles=[   NozzleId=81: canid=6 subpetrol=1000052 storageid=2
                                   NozzleId=82: canid=6 subpetrol=1000052 storageid=2
                                ]

2020-02-06 10:20:15.496004 I trk Th{5772} [mcs/trk_service.cpp:329] load_driver() Loading driver tokheim ...
2020-02-06 10:20:15.496004 D system Th{5772} [main/service_config.h:19] get_service_vector_config() compare cfg<msk-cn-351-srv1 with <msk-cn-351-srv1>
2020-02-06 10:20:15.496004 D trk Th{6139} [corba/trk_monitor_adapter2.cpp:572] run() Trk monitor adapter started
2020-02-06 10:20:15.496004 D system Th{5772} [main/service_config.h:19] get_service_vector_config() compare cfg<msk-cn-351-node2 with <msk-cn-351-srv1>
2020-02-06 10:20:15.496004 D system Th{5772} [main/service_config.h:19] get_service_vector_config() compare cfg<msk-cn-351-node3 with <msk-cn-351-srv1>
2020-02-06 10:20:15.496004 D system Th{5772} [main/service_config.h:19] get_service_vector_config() compare cfg<msk-cn-351-srv1 with <msk-cn-351-srv1>
2020-02-06 10:20:15.496004 D system Th{5772} [main/service_config.h:19] get_service_vector_config() compare cfg<msk-cn-351-node2 with <msk-cn-351-srv1>
2020-02-06 10:20:15.496004 D system Th{5772} [main/service_config.h:19] get_service_vector_config() compare cfg<msk-cn-351-node3 with <msk-cn-351-srv1>
2020-02-06 10:20:15.497004 D trk Th{5772} [trk/doms/doms_driver.cpp:244] fillTrkCapabilityFromStatConfig() TrkCapability.MaxSumReq: 9999.00
2020-02-06 10:20:15.512004 I trk Th{5772} [trk/doms/doms_driver.cpp:349] create() Created trk 1 nozzle 15
2020-02-06 10:20:15.512004 I trk Th{5772} [trk/doms/doms_driver.cpp:349] create() Created trk 1 nozzle 14
2020-02-06 10:20:15.512004 I trk Th{5772} [trk/doms/doms_driver.cpp:349] create() Created trk 1 nozzle 13
2020-02-06 10:20:15.512004 I trk Th{5772} [trk/doms/doms_driver.cpp:349] create() Created trk 1 nozzle 12
2020-02-06 10:20:15.512004 I trk Th{5772} [trk/doms/doms_driver.cpp:349] create() Created trk 1 nozzle 11
2020-02-06 10:20:15.512004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select nozzle, regime from azk.mcs_dyn_nozzles where trkno = ?
2020-02-06 10:20:15.513004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select start_regime from azk.mcs_trks where trkno = ?
2020-02-06 10:20:15.532004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing  select nozzleid, capacity, end_value, mass_capacity, mass_end_value from shifts.mcs_totalizers_ranges where id in (   select Max(id) from shifts.mcs_totalizers_ranges   where trkid = ?   group by nozzleid   )
2020-02-06 10:20:15.551004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select transid from shifts.mcs_trk_deliveries where trkid = ? order by transid desc  limit 1
2020-02-06 10:20:15.562004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select shiftno, trkid, state, start_tp, end_tp, preset_type, preset_vol, preset_nozzle, begin_totalizer, totalizer_capacity, delivery_nozzle, end_totalizer,  preset_price, instant_counter, hw_end_totalizer,  hints, begin_mass_totalizer, end_mass_totalizer,  hw_end_mass_totalizer, mass_totalizer_capacity, avg_density  from shifts.mcs_trk_deliveries where transid = ?
2020-02-06 10:20:15.570004 D trk Th{5772} [trk/doms/doms_driver.cpp:244] fillTrkCapabilityFromStatConfig() TrkCapability.MaxSumReq: 9999.00
2020-02-06 10:20:15.570004 I trk Th{5772} [trk/doms/doms_driver.cpp:349] create() Created trk 2 nozzle 25
2020-02-06 10:20:15.570004 I trk Th{5772} [trk/doms/doms_driver.cpp:349] create() Created trk 2 nozzle 24
2020-02-06 10:20:15.570004 I trk Th{5772} [trk/doms/doms_driver.cpp:349] create() Created trk 2 nozzle 23
2020-02-06 10:20:15.570004 I trk Th{5772} [trk/doms/doms_driver.cpp:349] create() Created trk 2 nozzle 22
2020-02-06 10:20:15.570004 I trk Th{5772} [trk/doms/doms_driver.cpp:349] create() Created trk 2 nozzle 21
2020-02-06 10:20:15.570004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select nozzle, regime from azk.mcs_dyn_nozzles where trkno = ?
2020-02-06 10:20:15.571004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select start_regime from azk.mcs_trks where trkno = ?
2020-02-06 10:20:15.572004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing  select nozzleid, capacity, end_value, mass_capacity, mass_end_value from shifts.mcs_totalizers_ranges where id in (   select Max(id) from shifts.mcs_totalizers_ranges   where trkid = ?   group by nozzleid   )
2020-02-06 10:20:15.574004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select transid from shifts.mcs_trk_deliveries where trkid = ? order by transid desc  limit 1
2020-02-06 10:20:15.574004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select shiftno, trkid, state, start_tp, end_tp, preset_type, preset_vol, preset_nozzle, begin_totalizer, totalizer_capacity, delivery_nozzle, end_totalizer,  preset_price, instant_counter, hw_end_totalizer,  hints, begin_mass_totalizer, end_mass_totalizer,  hw_end_mass_totalizer, mass_totalizer_capacity, avg_density  from shifts.mcs_trk_deliveries where transid = ?
2020-02-06 10:20:15.576004 D trk Th{5772} [trk/doms/doms_driver.cpp:244] fillTrkCapabilityFromStatConfig() TrkCapability.MaxSumReq: 9999.00
2020-02-06 10:20:15.576004 I trk Th{5772} [trk/doms/doms_driver.cpp:349] create() Created trk 3 nozzle 35
2020-02-06 10:20:15.576004 I trk Th{5772} [trk/doms/doms_driver.cpp:349] create() Created trk 3 nozzle 34
2020-02-06 10:20:15.576004 I trk Th{5772} [trk/doms/doms_driver.cpp:349] create() Created trk 3 nozzle 33
2020-02-06 10:20:15.576004 I trk Th{5772} [trk/doms/doms_driver.cpp:349] create() Created trk 3 nozzle 32
2020-02-06 10:20:15.576004 I trk Th{5772} [trk/doms/doms_driver.cpp:349] create() Created trk 3 nozzle 31
2020-02-06 10:20:15.576004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select nozzle, regime from azk.mcs_dyn_nozzles where trkno = ?
2020-02-06 10:20:15.577004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select start_regime from azk.mcs_trks where trkno = ?
2020-02-06 10:20:15.577004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing  select nozzleid, capacity, end_value, mass_capacity, mass_end_value from shifts.mcs_totalizers_ranges where id in (   select Max(id) from shifts.mcs_totalizers_ranges   where trkid = ?   group by nozzleid   )
2020-02-06 10:20:15.579004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select transid from shifts.mcs_trk_deliveries where trkid = ? order by transid desc  limit 1
2020-02-06 10:20:15.580004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select shiftno, trkid, state, start_tp, end_tp, preset_type, preset_vol, preset_nozzle, begin_totalizer, totalizer_capacity, delivery_nozzle, end_totalizer,  preset_price, instant_counter, hw_end_totalizer,  hints, begin_mass_totalizer, end_mass_totalizer,  hw_end_mass_totalizer, mass_totalizer_capacity, avg_density  from shifts.mcs_trk_deliveries where transid = ?
2020-02-06 10:20:15.581004 D trk Th{5772} [trk/doms/doms_driver.cpp:244] fillTrkCapabilityFromStatConfig() TrkCapability.MaxSumReq: 9999.00
2020-02-06 10:20:15.581004 I trk Th{5772} [trk/doms/doms_driver.cpp:349] create() Created trk 4 nozzle 45
2020-02-06 10:20:15.581004 I trk Th{5772} [trk/doms/doms_driver.cpp:349] create() Created trk 4 nozzle 44
2020-02-06 10:20:15.581004 I trk Th{5772} [trk/doms/doms_driver.cpp:349] create() Created trk 4 nozzle 43
2020-02-06 10:20:15.581004 I trk Th{5772} [trk/doms/doms_driver.cpp:349] create() Created trk 4 nozzle 42
2020-02-06 10:20:15.581004 I trk Th{5772} [trk/doms/doms_driver.cpp:349] create() Created trk 4 nozzle 41
2020-02-06 10:20:15.581004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select nozzle, regime from azk.mcs_dyn_nozzles where trkno = ?
2020-02-06 10:20:15.582004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select start_regime from azk.mcs_trks where trkno = ?
2020-02-06 10:20:15.582004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing  select nozzleid, capacity, end_value, mass_capacity, mass_end_value from shifts.mcs_totalizers_ranges where id in (   select Max(id) from shifts.mcs_totalizers_ranges   where trkid = ?   group by nozzleid   )
2020-02-06 10:20:15.584004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select transid from shifts.mcs_trk_deliveries where trkid = ? order by transid desc  limit 1
2020-02-06 10:20:15.585004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select shiftno, trkid, state, start_tp, end_tp, preset_type, preset_vol, preset_nozzle, begin_totalizer, totalizer_capacity, delivery_nozzle, end_totalizer,  preset_price, instant_counter, hw_end_totalizer,  hints, begin_mass_totalizer, end_mass_totalizer,  hw_end_mass_totalizer, mass_totalizer_capacity, avg_density  from shifts.mcs_trk_deliveries where transid = ?
2020-02-06 10:20:15.586004 D trk Th{5772} [trk/doms/doms_driver.cpp:244] fillTrkCapabilityFromStatConfig() TrkCapability.MaxSumReq: 9999.00
2020-02-06 10:20:15.586004 I trk Th{5772} [trk/doms/doms_driver.cpp:349] create() Created trk 5 nozzle 55
2020-02-06 10:20:15.586004 I trk Th{5772} [trk/doms/doms_driver.cpp:349] create() Created trk 5 nozzle 54
2020-02-06 10:20:15.586004 I trk Th{5772} [trk/doms/doms_driver.cpp:349] create() Created trk 5 nozzle 53
2020-02-06 10:20:15.586004 I trk Th{5772} [trk/doms/doms_driver.cpp:349] create() Created trk 5 nozzle 52
2020-02-06 10:20:15.586004 I trk Th{5772} [trk/doms/doms_driver.cpp:349] create() Created trk 5 nozzle 51
2020-02-06 10:20:15.586004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select nozzle, regime from azk.mcs_dyn_nozzles where trkno = ?
2020-02-06 10:20:15.587004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select start_regime from azk.mcs_trks where trkno = ?
2020-02-06 10:20:15.588004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing  select nozzleid, capacity, end_value, mass_capacity, mass_end_value from shifts.mcs_totalizers_ranges where id in (   select Max(id) from shifts.mcs_totalizers_ranges   where trkid = ?   group by nozzleid   )
2020-02-06 10:20:15.589004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select transid from shifts.mcs_trk_deliveries where trkid = ? order by transid desc  limit 1
2020-02-06 10:20:15.590004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select shiftno, trkid, state, start_tp, end_tp, preset_type, preset_vol, preset_nozzle, begin_totalizer, totalizer_capacity, delivery_nozzle, end_totalizer,  preset_price, instant_counter, hw_end_totalizer,  hints, begin_mass_totalizer, end_mass_totalizer,  hw_end_mass_totalizer, mass_totalizer_capacity, avg_density  from shifts.mcs_trk_deliveries where transid = ?
2020-02-06 10:20:15.591004 D trk Th{5772} [trk/doms/doms_driver.cpp:244] fillTrkCapabilityFromStatConfig() TrkCapability.MaxSumReq: 9999.00
2020-02-06 10:20:15.591004 I trk Th{5772} [trk/doms/doms_driver.cpp:349] create() Created trk 6 nozzle 65
2020-02-06 10:20:15.591004 I trk Th{5772} [trk/doms/doms_driver.cpp:349] create() Created trk 6 nozzle 64
2020-02-06 10:20:15.591004 I trk Th{5772} [trk/doms/doms_driver.cpp:349] create() Created trk 6 nozzle 63
2020-02-06 10:20:15.591004 I trk Th{5772} [trk/doms/doms_driver.cpp:349] create() Created trk 6 nozzle 62
2020-02-06 10:20:15.591004 I trk Th{5772} [trk/doms/doms_driver.cpp:349] create() Created trk 6 nozzle 61
2020-02-06 10:20:15.591004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select nozzle, regime from azk.mcs_dyn_nozzles where trkno = ?
2020-02-06 10:20:15.592004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select start_regime from azk.mcs_trks where trkno = ?
2020-02-06 10:20:15.593004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing  select nozzleid, capacity, end_value, mass_capacity, mass_end_value from shifts.mcs_totalizers_ranges where id in (   select Max(id) from shifts.mcs_totalizers_ranges   where trkid = ?   group by nozzleid   )
2020-02-06 10:20:15.595004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select transid from shifts.mcs_trk_deliveries where trkid = ? order by transid desc  limit 1
2020-02-06 10:20:15.595004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select shiftno, trkid, state, start_tp, end_tp, preset_type, preset_vol, preset_nozzle, begin_totalizer, totalizer_capacity, delivery_nozzle, end_totalizer,  preset_price, instant_counter, hw_end_totalizer,  hints, begin_mass_totalizer, end_mass_totalizer,  hw_end_mass_totalizer, mass_totalizer_capacity, avg_density  from shifts.mcs_trk_deliveries where transid = ?
2020-02-06 10:20:15.596004 D trk Th{5772} [trk/doms/doms_driver.cpp:244] fillTrkCapabilityFromStatConfig() TrkCapability.MaxSumReq: 9999.00
2020-02-06 10:20:15.596004 I trk Th{5772} [trk/doms/doms_driver.cpp:349] create() Created trk 7 nozzle 71
2020-02-06 10:20:15.596004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select nozzle, regime from azk.mcs_dyn_nozzles where trkno = ?
2020-02-06 10:20:15.597004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select start_regime from azk.mcs_trks where trkno = ?
2020-02-06 10:20:15.613004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing  select nozzleid, capacity, end_value, mass_capacity, mass_end_value from shifts.mcs_totalizers_ranges where id in (   select Max(id) from shifts.mcs_totalizers_ranges   where trkid = ?   group by nozzleid   )
2020-02-06 10:20:15.615004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select transid from shifts.mcs_trk_deliveries where trkid = ? order by transid desc  limit 1
2020-02-06 10:20:15.616004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select shiftno, trkid, state, start_tp, end_tp, preset_type, preset_vol, preset_nozzle, begin_totalizer, totalizer_capacity, delivery_nozzle, end_totalizer,  preset_price, instant_counter, hw_end_totalizer,  hints, begin_mass_totalizer, end_mass_totalizer,  hw_end_mass_totalizer, mass_totalizer_capacity, avg_density  from shifts.mcs_trk_deliveries where transid = ?
2020-02-06 10:20:15.617004 D trk Th{5772} [trk/doms/doms_driver.cpp:244] fillTrkCapabilityFromStatConfig() TrkCapability.MaxSumReq: 9999.00
2020-02-06 10:20:15.617004 I trk Th{5772} [trk/doms/doms_driver.cpp:349] create() Created trk 8 nozzle 81
2020-02-06 10:20:15.617004 I trk Th{5772} [trk/doms/doms_driver.cpp:349] create() Created trk 8 nozzle 82
2020-02-06 10:20:15.617004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select nozzle, regime from azk.mcs_dyn_nozzles where trkno = ?
2020-02-06 10:20:15.618004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select start_regime from azk.mcs_trks where trkno = ?
2020-02-06 10:20:15.619004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing  select nozzleid, capacity, end_value, mass_capacity, mass_end_value from shifts.mcs_totalizers_ranges where id in (   select Max(id) from shifts.mcs_totalizers_ranges   where trkid = ?   group by nozzleid   )
2020-02-06 10:20:15.620004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select transid from shifts.mcs_trk_deliveries where trkid = ? order by transid desc  limit 1
2020-02-06 10:20:15.621004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select shiftno, trkid, state, start_tp, end_tp, preset_type, preset_vol, preset_nozzle, begin_totalizer, totalizer_capacity, delivery_nozzle, end_totalizer,  preset_price, instant_counter, hw_end_totalizer,  hints, begin_mass_totalizer, end_mass_totalizer,  hw_end_mass_totalizer, mass_totalizer_capacity, avg_density  from shifts.mcs_trk_deliveries where transid = ?
2020-02-06 10:20:15.622004 D trk Th{5772} [mcs/trk_service.cpp:672] _get_trk_def_map() sid = NIL, shiftno = NIL, check_real = 1
2020-02-06 10:20:15.622004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select start_regime from azk.mcs_trks where trkno = ?
2020-02-06 10:20:15.623004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select start_regime from azk.mcs_trks where trkno = ?
2020-02-06 10:20:15.623004 D trk Th{6141} [io/src/experimental/multiplexor.cpp:125] EventMultiplexor() ptr: 0x00007F9A34008C90
2020-02-06 10:20:15.623004 D trk Th{6141} [io/src/experimental/multiplexor.cpp:177] init() ptr: 0x00007F9A34008C90, epfd: 37
2020-02-06 10:20:15.623004 D trk Th{6141} [io/src/timer_wrap.cpp:139] Timer() ptr: 0x00007F9A34009210
2020-02-06 10:20:15.623004 D trk Th{6141} [io/src/experimental/multiplexor.cpp:308] addEvents() epfd: 37, fd 42
2020-02-06 10:20:15.623004 I trk Th{6141} [io/src/timer_wrap.cpp:191] init() Timer fd 42 ptr: 0x00007F9A34009210 inited OK
2020-02-06 10:20:15.623004 D trk Th{6141} [io/src/experimental/multiplexor.cpp:308] addEvents() epfd: 37, fd 43
2020-02-06 10:20:15.623004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select start_regime from azk.mcs_trks where trkno = ?
2020-02-06 10:20:15.623004 E trk Th{6141} [io/src/experimental/multiplexor.cpp:363] delEvents() epfd: 37. SYSCALL_FAIL_HANDLER: 2(Нет такого файла или каталога)
2020-02-06 10:20:15.624004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select start_regime from azk.mcs_trks where trkno = ?
2020-02-06 10:20:15.625004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select start_regime from azk.mcs_trks where trkno = ?
2020-02-06 10:20:15.625004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select start_regime from azk.mcs_trks where trkno = ?
2020-02-06 10:20:15.626004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select start_regime from azk.mcs_trks where trkno = ?
2020-02-06 10:20:15.626004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select start_regime from azk.mcs_trks where trkno = ?
2020-02-06 10:20:15.627004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select n.trkno,dn.nozzle,dn.canid,c.storageid  from  azk.mcs_hds_log as hdsl join azk.mcs_hds as hds on (hdsl.hds_id = hds.id) join azk.mcs_hds_detail as dn on (hds.id = dn.hds_id)  join azk.mcs_dyn_nozzles as n on (n.nozzle = dn.nozzle)  join azk.mcs_cans as c on (c.canid = dn.canid)  where hdsl.activity = ? 
2020-02-06 10:20:15.629004 I trk Th{5772} [mcs/trk_service.cpp:707] _get_trk_def_map() check config for trk=1
2020-02-06 10:20:15.629004 I trk Th{5772} [mcs/trk_service.cpp:745] _get_trk_def_map() check config for nozzle=11
2020-02-06 10:20:15.629004 I trk Th{5772} [mcs/trk_service.cpp:745] _get_trk_def_map() check config for nozzle=12
2020-02-06 10:20:15.629004 I trk Th{5772} [mcs/trk_service.cpp:745] _get_trk_def_map() check config for nozzle=13
2020-02-06 10:20:15.629004 I trk Th{5772} [mcs/trk_service.cpp:745] _get_trk_def_map() check config for nozzle=14
2020-02-06 10:20:15.629004 I trk Th{5772} [mcs/trk_service.cpp:745] _get_trk_def_map() check config for nozzle=15
2020-02-06 10:20:15.629004 I trk Th{5772} [mcs/trk_service.cpp:707] _get_trk_def_map() check config for trk=2
2020-02-06 10:20:15.629004 I trk Th{5772} [mcs/trk_service.cpp:745] _get_trk_def_map() check config for nozzle=21
2020-02-06 10:20:15.629004 I trk Th{5772} [mcs/trk_service.cpp:745] _get_trk_def_map() check config for nozzle=22
2020-02-06 10:20:15.629004 I trk Th{5772} [mcs/trk_service.cpp:745] _get_trk_def_map() check config for nozzle=23
2020-02-06 10:20:15.629004 I trk Th{5772} [mcs/trk_service.cpp:745] _get_trk_def_map() check config for nozzle=24
2020-02-06 10:20:15.630004 I trk Th{5772} [mcs/trk_service.cpp:745] _get_trk_def_map() check config for nozzle=25
2020-02-06 10:20:15.630004 I trk Th{5772} [mcs/trk_service.cpp:707] _get_trk_def_map() check config for trk=3
2020-02-06 10:20:15.630004 I trk Th{5772} [mcs/trk_service.cpp:745] _get_trk_def_map() check config for nozzle=31
2020-02-06 10:20:15.630004 I trk Th{5772} [mcs/trk_service.cpp:745] _get_trk_def_map() check config for nozzle=32
2020-02-06 10:20:15.630004 I trk Th{5772} [mcs/trk_service.cpp:745] _get_trk_def_map() check config for nozzle=33
2020-02-06 10:20:15.630004 I trk Th{5772} [mcs/trk_service.cpp:745] _get_trk_def_map() check config for nozzle=34
2020-02-06 10:20:15.630004 I trk Th{5772} [mcs/trk_service.cpp:745] _get_trk_def_map() check config for nozzle=35
2020-02-06 10:20:15.630004 I trk Th{5772} [mcs/trk_service.cpp:707] _get_trk_def_map() check config for trk=4
2020-02-06 10:20:15.630004 I trk Th{5772} [mcs/trk_service.cpp:745] _get_trk_def_map() check config for nozzle=41
2020-02-06 10:20:15.630004 I trk Th{5772} [mcs/trk_service.cpp:745] _get_trk_def_map() check config for nozzle=42
2020-02-06 10:20:15.630004 I trk Th{5772} [mcs/trk_service.cpp:745] _get_trk_def_map() check config for nozzle=43
2020-02-06 10:20:15.630004 I trk Th{5772} [mcs/trk_service.cpp:745] _get_trk_def_map() check config for nozzle=44
2020-02-06 10:20:15.630004 I trk Th{5772} [mcs/trk_service.cpp:745] _get_trk_def_map() check config for nozzle=45
2020-02-06 10:20:15.630004 I trk Th{5772} [mcs/trk_service.cpp:707] _get_trk_def_map() check config for trk=5
2020-02-06 10:20:15.630004 I trk Th{5772} [mcs/trk_service.cpp:745] _get_trk_def_map() check config for nozzle=51
2020-02-06 10:20:15.630004 I trk Th{5772} [mcs/trk_service.cpp:745] _get_trk_def_map() check config for nozzle=52
2020-02-06 10:20:15.630004 I trk Th{5772} [mcs/trk_service.cpp:745] _get_trk_def_map() check config for nozzle=53
2020-02-06 10:20:15.630004 I trk Th{5772} [mcs/trk_service.cpp:745] _get_trk_def_map() check config for nozzle=54
2020-02-06 10:20:15.630004 I trk Th{5772} [mcs/trk_service.cpp:745] _get_trk_def_map() check config for nozzle=55
2020-02-06 10:20:15.630004 I trk Th{5772} [mcs/trk_service.cpp:707] _get_trk_def_map() check config for trk=6
2020-02-06 10:20:15.630004 I trk Th{5772} [mcs/trk_service.cpp:745] _get_trk_def_map() check config for nozzle=61
2020-02-06 10:20:15.630004 I trk Th{5772} [mcs/trk_service.cpp:745] _get_trk_def_map() check config for nozzle=62
2020-02-06 10:20:15.630004 I trk Th{5772} [mcs/trk_service.cpp:745] _get_trk_def_map() check config for nozzle=63
2020-02-06 10:20:15.630004 I trk Th{5772} [mcs/trk_service.cpp:745] _get_trk_def_map() check config for nozzle=64
2020-02-06 10:20:15.630004 I trk Th{5772} [mcs/trk_service.cpp:745] _get_trk_def_map() check config for nozzle=65
2020-02-06 10:20:15.630004 I trk Th{5772} [mcs/trk_service.cpp:707] _get_trk_def_map() check config for trk=7
2020-02-06 10:20:15.630004 I trk Th{5772} [mcs/trk_service.cpp:745] _get_trk_def_map() check config for nozzle=71
2020-02-06 10:20:15.630004 I trk Th{5772} [mcs/trk_service.cpp:707] _get_trk_def_map() check config for trk=8
2020-02-06 10:20:15.630004 I trk Th{5772} [mcs/trk_service.cpp:745] _get_trk_def_map() check config for nozzle=81
2020-02-06 10:20:15.630004 I trk Th{5772} [mcs/trk_service.cpp:745] _get_trk_def_map() check config for nozzle=82
2020-02-06 10:20:15.630004 I trk Th{5772} [mcs/trk_service.cpp:158] _add_fuels_to_map() search fuel for trk=1
2020-02-06 10:20:15.630004 I trk Th{5772} [mcs/trk_service.cpp:162] _add_fuels_to_map() search fuel for nozzle=11
2020-02-06 10:20:15.630004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select  shiftno from azk.mcs_shifts order by shiftno desc limit 1
2020-02-06 10:20:15.631004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing  select sa.SubArticleId,sa.articleid,a.external_str_id, a.articlename, a.ecrshortname, fc.shift_end_vol  from public.get_fuel_in_can(?, ?) fc  join azk.mcs_subarticles sa    on fc.expected_petrolid = sa.articleid      and sa.flg_base = 'SET_BASE'  join azk.mcs_articles a on sa.articleid = a.articleid  limit 1 
2020-02-06 10:20:15.633004 I trk Th{5772} [mcs/trk_service.cpp:162] _add_fuels_to_map() search fuel for nozzle=12
2020-02-06 10:20:15.634004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select  shiftno from azk.mcs_shifts order by shiftno desc limit 1
2020-02-06 10:20:15.634004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing  select sa.SubArticleId,sa.articleid,a.external_str_id, a.articlename, a.ecrshortname, fc.shift_end_vol  from public.get_fuel_in_can(?, ?) fc  join azk.mcs_subarticles sa    on fc.expected_petrolid = sa.articleid      and sa.flg_base = 'SET_BASE'  join azk.mcs_articles a on sa.articleid = a.articleid  limit 1 
2020-02-06 10:20:15.637004 I trk Th{5772} [mcs/trk_service.cpp:162] _add_fuels_to_map() search fuel for nozzle=13
2020-02-06 10:20:15.637004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select  shiftno from azk.mcs_shifts order by shiftno desc limit 1
2020-02-06 10:20:15.637004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing  select sa.SubArticleId,sa.articleid,a.external_str_id, a.articlename, a.ecrshortname, fc.shift_end_vol  from public.get_fuel_in_can(?, ?) fc  join azk.mcs_subarticles sa    on fc.expected_petrolid = sa.articleid      and sa.flg_base = 'SET_BASE'  join azk.mcs_articles a on sa.articleid = a.articleid  limit 1 
2020-02-06 10:20:15.640004 I trk Th{5772} [mcs/trk_service.cpp:162] _add_fuels_to_map() search fuel for nozzle=14
2020-02-06 10:20:15.640004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select  shiftno from azk.mcs_shifts order by shiftno desc limit 1
2020-02-06 10:20:15.641004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing  select sa.SubArticleId,sa.articleid,a.external_str_id, a.articlename, a.ecrshortname, fc.shift_end_vol  from public.get_fuel_in_can(?, ?) fc  join azk.mcs_subarticles sa    on fc.expected_petrolid = sa.articleid      and sa.flg_base = 'SET_BASE'  join azk.mcs_articles a on sa.articleid = a.articleid  limit 1 
2020-02-06 10:20:15.643004 I trk Th{5772} [mcs/trk_service.cpp:162] _add_fuels_to_map() search fuel for nozzle=15
2020-02-06 10:20:15.643004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select  shiftno from azk.mcs_shifts order by shiftno desc limit 1
2020-02-06 10:20:15.644004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing  select sa.SubArticleId,sa.articleid,a.external_str_id, a.articlename, a.ecrshortname, fc.shift_end_vol  from public.get_fuel_in_can(?, ?) fc  join azk.mcs_subarticles sa    on fc.expected_petrolid = sa.articleid      and sa.flg_base = 'SET_BASE'  join azk.mcs_articles a on sa.articleid = a.articleid  limit 1 
2020-02-06 10:20:15.647004 I trk Th{5772} [mcs/trk_service.cpp:158] _add_fuels_to_map() search fuel for trk=2
2020-02-06 10:20:15.647004 I trk Th{5772} [mcs/trk_service.cpp:162] _add_fuels_to_map() search fuel for nozzle=21
2020-02-06 10:20:15.647004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select  shiftno from azk.mcs_shifts order by shiftno desc limit 1
2020-02-06 10:20:15.647004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing  select sa.SubArticleId,sa.articleid,a.external_str_id, a.articlename, a.ecrshortname, fc.shift_end_vol  from public.get_fuel_in_can(?, ?) fc  join azk.mcs_subarticles sa    on fc.expected_petrolid = sa.articleid      and sa.flg_base = 'SET_BASE'  join azk.mcs_articles a on sa.articleid = a.articleid  limit 1 
2020-02-06 10:20:15.650004 I trk Th{5772} [mcs/trk_service.cpp:162] _add_fuels_to_map() search fuel for nozzle=22
2020-02-06 10:20:15.650004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select  shiftno from azk.mcs_shifts order by shiftno desc limit 1
2020-02-06 10:20:15.651004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing  select sa.SubArticleId,sa.articleid,a.external_str_id, a.articlename, a.ecrshortname, fc.shift_end_vol  from public.get_fuel_in_can(?, ?) fc  join azk.mcs_subarticles sa    on fc.expected_petrolid = sa.articleid      and sa.flg_base = 'SET_BASE'  join azk.mcs_articles a on sa.articleid = a.articleid  limit 1 
2020-02-06 10:20:15.653004 I trk Th{5772} [mcs/trk_service.cpp:162] _add_fuels_to_map() search fuel for nozzle=23
2020-02-06 10:20:15.654004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select  shiftno from azk.mcs_shifts order by shiftno desc limit 1
2020-02-06 10:20:15.654004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing  select sa.SubArticleId,sa.articleid,a.external_str_id, a.articlename, a.ecrshortname, fc.shift_end_vol  from public.get_fuel_in_can(?, ?) fc  join azk.mcs_subarticles sa    on fc.expected_petrolid = sa.articleid      and sa.flg_base = 'SET_BASE'  join azk.mcs_articles a on sa.articleid = a.articleid  limit 1 
2020-02-06 10:20:15.656004 D trk Th{6141} [doms/src/trk_driver/apc.cpp:115] sendMessage() Doms. Sending a message: FcLogon::Req: { 
                                ..fcAccessCode: FcAccessCode: [NamosPos,APPL_ID=MK-AZK,RI,UNSO_FPSTA_3,UNSO_TRBUFSTA_3]
                                ..posCountryCode: 7
                                ..posVersionId: 6.6
                                }
2020-02-06 10:20:15.656004 D trk Th{6141} [doms/src/trk_driver/apc.cpp:116] sendMessage() Doms. Message dump: 01 01 00 37 4E 61 6D 6F 73 50 6F 73 2C 41 50 50 4C 5F 49 44 3D 4D 4B 2D 41 5A 4B 2C 52 49 2C 55 4E 53 4F 5F 46 50 53 54 41 5F 33 2C 55 4E 53 4F 5F 54 52 42 55 46 53 54 41 5F 33 00 07 03 36 2E 36
2020-02-06 10:20:15.657004 I trk Th{5772} [mcs/trk_service.cpp:162] _add_fuels_to_map() search fuel for nozzle=24
2020-02-06 10:20:15.657004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select  shiftno from azk.mcs_shifts order by shiftno desc limit 1
2020-02-06 10:20:15.657004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing  select sa.SubArticleId,sa.articleid,a.external_str_id, a.articlename, a.ecrshortname, fc.shift_end_vol  from public.get_fuel_in_can(?, ?) fc  join azk.mcs_subarticles sa    on fc.expected_petrolid = sa.articleid      and sa.flg_base = 'SET_BASE'  join azk.mcs_articles a on sa.articleid = a.articleid  limit 1 
2020-02-06 10:20:15.660004 I trk Th{5772} [mcs/trk_service.cpp:162] _add_fuels_to_map() search fuel for nozzle=25
2020-02-06 10:20:15.660004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select  shiftno from azk.mcs_shifts order by shiftno desc limit 1
2020-02-06 10:20:15.661004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing  select sa.SubArticleId,sa.articleid,a.external_str_id, a.articlename, a.ecrshortname, fc.shift_end_vol  from public.get_fuel_in_can(?, ?) fc  join azk.mcs_subarticles sa    on fc.expected_petrolid = sa.articleid      and sa.flg_base = 'SET_BASE'  join azk.mcs_articles a on sa.articleid = a.articleid  limit 1 
2020-02-06 10:20:15.663004 I trk Th{5772} [mcs/trk_service.cpp:158] _add_fuels_to_map() search fuel for trk=3
2020-02-06 10:20:15.664004 I trk Th{5772} [mcs/trk_service.cpp:162] _add_fuels_to_map() search fuel for nozzle=31
2020-02-06 10:20:15.664004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select  shiftno from azk.mcs_shifts order by shiftno desc limit 1
2020-02-06 10:20:15.664004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing  select sa.SubArticleId,sa.articleid,a.external_str_id, a.articlename, a.ecrshortname, fc.shift_end_vol  from public.get_fuel_in_can(?, ?) fc  join azk.mcs_subarticles sa    on fc.expected_petrolid = sa.articleid      and sa.flg_base = 'SET_BASE'  join azk.mcs_articles a on sa.articleid = a.articleid  limit 1 
2020-02-06 10:20:15.667004 I trk Th{5772} [mcs/trk_service.cpp:162] _add_fuels_to_map() search fuel for nozzle=32
2020-02-06 10:20:15.667004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select  shiftno from azk.mcs_shifts order by shiftno desc limit 1
2020-02-06 10:20:15.667004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing  select sa.SubArticleId,sa.articleid,a.external_str_id, a.articlename, a.ecrshortname, fc.shift_end_vol  from public.get_fuel_in_can(?, ?) fc  join azk.mcs_subarticles sa    on fc.expected_petrolid = sa.articleid      and sa.flg_base = 'SET_BASE'  join azk.mcs_articles a on sa.articleid = a.articleid  limit 1 
2020-02-06 10:20:15.669004 I trk Th{5772} [mcs/trk_service.cpp:162] _add_fuels_to_map() search fuel for nozzle=33
2020-02-06 10:20:15.669004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select  shiftno from azk.mcs_shifts order by shiftno desc limit 1
2020-02-06 10:20:15.670004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing  select sa.SubArticleId,sa.articleid,a.external_str_id, a.articlename, a.ecrshortname, fc.shift_end_vol  from public.get_fuel_in_can(?, ?) fc  join azk.mcs_subarticles sa    on fc.expected_petrolid = sa.articleid      and sa.flg_base = 'SET_BASE'  join azk.mcs_articles a on sa.articleid = a.articleid  limit 1 
2020-02-06 10:20:15.672004 I trk Th{5772} [mcs/trk_service.cpp:162] _add_fuels_to_map() search fuel for nozzle=34
2020-02-06 10:20:15.672004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select  shiftno from azk.mcs_shifts order by shiftno desc limit 1
2020-02-06 10:20:15.672004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing  select sa.SubArticleId,sa.articleid,a.external_str_id, a.articlename, a.ecrshortname, fc.shift_end_vol  from public.get_fuel_in_can(?, ?) fc  join azk.mcs_subarticles sa    on fc.expected_petrolid = sa.articleid      and sa.flg_base = 'SET_BASE'  join azk.mcs_articles a on sa.articleid = a.articleid  limit 1 
2020-02-06 10:20:15.674004 I trk Th{5772} [mcs/trk_service.cpp:162] _add_fuels_to_map() search fuel for nozzle=35
2020-02-06 10:20:15.674004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select  shiftno from azk.mcs_shifts order by shiftno desc limit 1
2020-02-06 10:20:15.674004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing  select sa.SubArticleId,sa.articleid,a.external_str_id, a.articlename, a.ecrshortname, fc.shift_end_vol  from public.get_fuel_in_can(?, ?) fc  join azk.mcs_subarticles sa    on fc.expected_petrolid = sa.articleid      and sa.flg_base = 'SET_BASE'  join azk.mcs_articles a on sa.articleid = a.articleid  limit 1 
2020-02-06 10:20:15.675004 I trk Th{5772} [mcs/trk_service.cpp:158] _add_fuels_to_map() search fuel for trk=4
2020-02-06 10:20:15.675004 I trk Th{5772} [mcs/trk_service.cpp:162] _add_fuels_to_map() search fuel for nozzle=41
2020-02-06 10:20:15.675004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select  shiftno from azk.mcs_shifts order by shiftno desc limit 1
2020-02-06 10:20:15.676004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing  select sa.SubArticleId,sa.articleid,a.external_str_id, a.articlename, a.ecrshortname, fc.shift_end_vol  from public.get_fuel_in_can(?, ?) fc  join azk.mcs_subarticles sa    on fc.expected_petrolid = sa.articleid      and sa.flg_base = 'SET_BASE'  join azk.mcs_articles a on sa.articleid = a.articleid  limit 1 
2020-02-06 10:20:15.677004 I trk Th{5772} [mcs/trk_service.cpp:162] _add_fuels_to_map() search fuel for nozzle=42
2020-02-06 10:20:15.677004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select  shiftno from azk.mcs_shifts order by shiftno desc limit 1
2020-02-06 10:20:15.678004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing  select sa.SubArticleId,sa.articleid,a.external_str_id, a.articlename, a.ecrshortname, fc.shift_end_vol  from public.get_fuel_in_can(?, ?) fc  join azk.mcs_subarticles sa    on fc.expected_petrolid = sa.articleid      and sa.flg_base = 'SET_BASE'  join azk.mcs_articles a on sa.articleid = a.articleid  limit 1 
2020-02-06 10:20:15.679004 I trk Th{5772} [mcs/trk_service.cpp:162] _add_fuels_to_map() search fuel for nozzle=43
2020-02-06 10:20:15.679004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select  shiftno from azk.mcs_shifts order by shiftno desc limit 1
2020-02-06 10:20:15.679004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing  select sa.SubArticleId,sa.articleid,a.external_str_id, a.articlename, a.ecrshortname, fc.shift_end_vol  from public.get_fuel_in_can(?, ?) fc  join azk.mcs_subarticles sa    on fc.expected_petrolid = sa.articleid      and sa.flg_base = 'SET_BASE'  join azk.mcs_articles a on sa.articleid = a.articleid  limit 1 
2020-02-06 10:20:15.680004 I trk Th{5772} [mcs/trk_service.cpp:162] _add_fuels_to_map() search fuel for nozzle=44
2020-02-06 10:20:15.680004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select  shiftno from azk.mcs_shifts order by shiftno desc limit 1
2020-02-06 10:20:15.681004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing  select sa.SubArticleId,sa.articleid,a.external_str_id, a.articlename, a.ecrshortname, fc.shift_end_vol  from public.get_fuel_in_can(?, ?) fc  join azk.mcs_subarticles sa    on fc.expected_petrolid = sa.articleid      and sa.flg_base = 'SET_BASE'  join azk.mcs_articles a on sa.articleid = a.articleid  limit 1 
2020-02-06 10:20:15.682004 I trk Th{5772} [mcs/trk_service.cpp:162] _add_fuels_to_map() search fuel for nozzle=45
2020-02-06 10:20:15.682004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select  shiftno from azk.mcs_shifts order by shiftno desc limit 1
2020-02-06 10:20:15.682004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing  select sa.SubArticleId,sa.articleid,a.external_str_id, a.articlename, a.ecrshortname, fc.shift_end_vol  from public.get_fuel_in_can(?, ?) fc  join azk.mcs_subarticles sa    on fc.expected_petrolid = sa.articleid      and sa.flg_base = 'SET_BASE'  join azk.mcs_articles a on sa.articleid = a.articleid  limit 1 
2020-02-06 10:20:15.683004 I trk Th{5772} [mcs/trk_service.cpp:158] _add_fuels_to_map() search fuel for trk=5
2020-02-06 10:20:15.683004 I trk Th{5772} [mcs/trk_service.cpp:162] _add_fuels_to_map() search fuel for nozzle=51
2020-02-06 10:20:15.683004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select  shiftno from azk.mcs_shifts order by shiftno desc limit 1
2020-02-06 10:20:15.683004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing  select sa.SubArticleId,sa.articleid,a.external_str_id, a.articlename, a.ecrshortname, fc.shift_end_vol  from public.get_fuel_in_can(?, ?) fc  join azk.mcs_subarticles sa    on fc.expected_petrolid = sa.articleid      and sa.flg_base = 'SET_BASE'  join azk.mcs_articles a on sa.articleid = a.articleid  limit 1 
2020-02-06 10:20:15.685004 I trk Th{5772} [mcs/trk_service.cpp:162] _add_fuels_to_map() search fuel for nozzle=52
2020-02-06 10:20:15.685004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select  shiftno from azk.mcs_shifts order by shiftno desc limit 1
2020-02-06 10:20:15.685004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing  select sa.SubArticleId,sa.articleid,a.external_str_id, a.articlename, a.ecrshortname, fc.shift_end_vol  from public.get_fuel_in_can(?, ?) fc  join azk.mcs_subarticles sa    on fc.expected_petrolid = sa.articleid      and sa.flg_base = 'SET_BASE'  join azk.mcs_articles a on sa.articleid = a.articleid  limit 1 
2020-02-06 10:20:15.686004 I trk Th{5772} [mcs/trk_service.cpp:162] _add_fuels_to_map() search fuel for nozzle=53
2020-02-06 10:20:15.686004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select  shiftno from azk.mcs_shifts order by shiftno desc limit 1
2020-02-06 10:20:15.686004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing  select sa.SubArticleId,sa.articleid,a.external_str_id, a.articlename, a.ecrshortname, fc.shift_end_vol  from public.get_fuel_in_can(?, ?) fc  join azk.mcs_subarticles sa    on fc.expected_petrolid = sa.articleid      and sa.flg_base = 'SET_BASE'  join azk.mcs_articles a on sa.articleid = a.articleid  limit 1 
2020-02-06 10:20:15.687004 I trk Th{5772} [mcs/trk_service.cpp:162] _add_fuels_to_map() search fuel for nozzle=54
2020-02-06 10:20:15.687004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select  shiftno from azk.mcs_shifts order by shiftno desc limit 1
2020-02-06 10:20:15.688004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing  select sa.SubArticleId,sa.articleid,a.external_str_id, a.articlename, a.ecrshortname, fc.shift_end_vol  from public.get_fuel_in_can(?, ?) fc  join azk.mcs_subarticles sa    on fc.expected_petrolid = sa.articleid      and sa.flg_base = 'SET_BASE'  join azk.mcs_articles a on sa.articleid = a.articleid  limit 1 
2020-02-06 10:20:15.689004 I trk Th{5772} [mcs/trk_service.cpp:162] _add_fuels_to_map() search fuel for nozzle=55
2020-02-06 10:20:15.689004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select  shiftno from azk.mcs_shifts order by shiftno desc limit 1
2020-02-06 10:20:15.689004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing  select sa.SubArticleId,sa.articleid,a.external_str_id, a.articlename, a.ecrshortname, fc.shift_end_vol  from public.get_fuel_in_can(?, ?) fc  join azk.mcs_subarticles sa    on fc.expected_petrolid = sa.articleid      and sa.flg_base = 'SET_BASE'  join azk.mcs_articles a on sa.articleid = a.articleid  limit 1 
2020-02-06 10:20:15.690004 I trk Th{5772} [mcs/trk_service.cpp:158] _add_fuels_to_map() search fuel for trk=6
2020-02-06 10:20:15.690004 I trk Th{5772} [mcs/trk_service.cpp:162] _add_fuels_to_map() search fuel for nozzle=61
2020-02-06 10:20:15.690004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select  shiftno from azk.mcs_shifts order by shiftno desc limit 1
2020-02-06 10:20:15.690004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing  select sa.SubArticleId,sa.articleid,a.external_str_id, a.articlename, a.ecrshortname, fc.shift_end_vol  from public.get_fuel_in_can(?, ?) fc  join azk.mcs_subarticles sa    on fc.expected_petrolid = sa.articleid      and sa.flg_base = 'SET_BASE'  join azk.mcs_articles a on sa.articleid = a.articleid  limit 1 
2020-02-06 10:20:15.691004 I trk Th{5772} [mcs/trk_service.cpp:162] _add_fuels_to_map() search fuel for nozzle=62
2020-02-06 10:20:15.691004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select  shiftno from azk.mcs_shifts order by shiftno desc limit 1
2020-02-06 10:20:15.691004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing  select sa.SubArticleId,sa.articleid,a.external_str_id, a.articlename, a.ecrshortname, fc.shift_end_vol  from public.get_fuel_in_can(?, ?) fc  join azk.mcs_subarticles sa    on fc.expected_petrolid = sa.articleid      and sa.flg_base = 'SET_BASE'  join azk.mcs_articles a on sa.articleid = a.articleid  limit 1 
2020-02-06 10:20:15.692004 I trk Th{5772} [mcs/trk_service.cpp:162] _add_fuels_to_map() search fuel for nozzle=63
2020-02-06 10:20:15.692004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select  shiftno from azk.mcs_shifts order by shiftno desc limit 1
2020-02-06 10:20:15.692004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing  select sa.SubArticleId,sa.articleid,a.external_str_id, a.articlename, a.ecrshortname, fc.shift_end_vol  from public.get_fuel_in_can(?, ?) fc  join azk.mcs_subarticles sa    on fc.expected_petrolid = sa.articleid      and sa.flg_base = 'SET_BASE'  join azk.mcs_articles a on sa.articleid = a.articleid  limit 1 
2020-02-06 10:20:15.693004 I trk Th{5772} [mcs/trk_service.cpp:162] _add_fuels_to_map() search fuel for nozzle=64
2020-02-06 10:20:15.693004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select  shiftno from azk.mcs_shifts order by shiftno desc limit 1
2020-02-06 10:20:15.693004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing  select sa.SubArticleId,sa.articleid,a.external_str_id, a.articlename, a.ecrshortname, fc.shift_end_vol  from public.get_fuel_in_can(?, ?) fc  join azk.mcs_subarticles sa    on fc.expected_petrolid = sa.articleid      and sa.flg_base = 'SET_BASE'  join azk.mcs_articles a on sa.articleid = a.articleid  limit 1 
2020-02-06 10:20:15.694004 I trk Th{5772} [mcs/trk_service.cpp:162] _add_fuels_to_map() search fuel for nozzle=65
2020-02-06 10:20:15.694004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select  shiftno from azk.mcs_shifts order by shiftno desc limit 1
2020-02-06 10:20:15.694004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing  select sa.SubArticleId,sa.articleid,a.external_str_id, a.articlename, a.ecrshortname, fc.shift_end_vol  from public.get_fuel_in_can(?, ?) fc  join azk.mcs_subarticles sa    on fc.expected_petrolid = sa.articleid      and sa.flg_base = 'SET_BASE'  join azk.mcs_articles a on sa.articleid = a.articleid  limit 1 
2020-02-06 10:20:15.695004 I trk Th{5772} [mcs/trk_service.cpp:158] _add_fuels_to_map() search fuel for trk=7
2020-02-06 10:20:15.695004 I trk Th{5772} [mcs/trk_service.cpp:162] _add_fuels_to_map() search fuel for nozzle=71
2020-02-06 10:20:15.695004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select  shiftno from azk.mcs_shifts order by shiftno desc limit 1
2020-02-06 10:20:15.695004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing  select sa.SubArticleId,sa.articleid,a.external_str_id, a.articlename, a.ecrshortname, fc.shift_end_vol  from public.get_fuel_in_can(?, ?) fc  join azk.mcs_subarticles sa    on fc.expected_petrolid = sa.articleid      and sa.flg_base = 'SET_BASE'  join azk.mcs_articles a on sa.articleid = a.articleid  limit 1 
2020-02-06 10:20:15.696004 I trk Th{5772} [mcs/trk_service.cpp:158] _add_fuels_to_map() search fuel for trk=8
2020-02-06 10:20:15.696004 I trk Th{5772} [mcs/trk_service.cpp:162] _add_fuels_to_map() search fuel for nozzle=81
2020-02-06 10:20:15.696004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select  shiftno from azk.mcs_shifts order by shiftno desc limit 1
2020-02-06 10:20:15.696004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing  select sa.SubArticleId,sa.articleid,a.external_str_id, a.articlename, a.ecrshortname, fc.shift_end_vol  from public.get_fuel_in_can(?, ?) fc  join azk.mcs_subarticles sa    on fc.expected_petrolid = sa.articleid      and sa.flg_base = 'SET_BASE'  join azk.mcs_articles a on sa.articleid = a.articleid  limit 1 
2020-02-06 10:20:15.696004 I trk Th{5772} [mcs/trk_service.cpp:162] _add_fuels_to_map() search fuel for nozzle=82
2020-02-06 10:20:15.696004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select  shiftno from azk.mcs_shifts order by shiftno desc limit 1
2020-02-06 10:20:15.697004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing  select sa.SubArticleId,sa.articleid,a.external_str_id, a.articlename, a.ecrshortname, fc.shift_end_vol  from public.get_fuel_in_can(?, ?) fc  join azk.mcs_subarticles sa    on fc.expected_petrolid = sa.articleid      and sa.flg_base = 'SET_BASE'  join azk.mcs_articles a on sa.articleid = a.articleid  limit 1 
2020-02-06 10:20:15.697004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select a.articleid, ecrsectionid, articlename, c.name2, a.ecrshortname, a.ecrlongname, a.external_str_id ,a.articletype,  sa.subarticleid,  ( cbo.get_classifier_tree_props( a.ecrsectionid ) ).sectiontype,  di.preparemoment, a.has_mrc::integer,a.id_tax_system,  a.flg_disable from azk.mcs_articles a  left join azk.mcs_subarticles sa on ( sa.articleid = a.articleid and sa.flg_base = 'SET_BASE' ) left join cbo.dish di on ( a.external_str_id = di.external_str_id ) left join cbo.cbo_articles c on a.external_str_id = c.external_str_id  where a.articleid = ?
2020-02-06 10:20:15.852004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select subarticleid, articleid, sa.unitid,u.unitscale,u.local_symbol, multiplier, flg_base, flg_disable from azk.mcs_subarticles sa join cbo.mcs_units u on (u.unitid = sa.unitid)  where subarticleid = ?
2020-02-06 10:20:15.861004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select barcodeid, barcode, subarticleid,marking_type from azk.mcs_barcodes where subarticleid = ?
2020-02-06 10:20:15.884004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select a.articleid, ecrsectionid, articlename, c.name2, a.ecrshortname, a.ecrlongname, a.external_str_id ,a.articletype,  sa.subarticleid,  ( cbo.get_classifier_tree_props( a.ecrsectionid ) ).sectiontype,  di.preparemoment, a.has_mrc::integer,a.id_tax_system,  a.flg_disable from azk.mcs_articles a  left join azk.mcs_subarticles sa on ( sa.articleid = a.articleid and sa.flg_base = 'SET_BASE' ) left join cbo.dish di on ( a.external_str_id = di.external_str_id ) left join cbo.cbo_articles c on a.external_str_id = c.external_str_id  where a.articleid = ?
2020-02-06 10:20:15.887004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select subarticleid, articleid, sa.unitid,u.unitscale,u.local_symbol, multiplier, flg_base, flg_disable from azk.mcs_subarticles sa join cbo.mcs_units u on (u.unitid = sa.unitid)  where subarticleid = ?
2020-02-06 10:20:15.888004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select barcodeid, barcode, subarticleid,marking_type from azk.mcs_barcodes where subarticleid = ?
2020-02-06 10:20:15.889004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select a.articleid, ecrsectionid, articlename, c.name2, a.ecrshortname, a.ecrlongname, a.external_str_id ,a.articletype,  sa.subarticleid,  ( cbo.get_classifier_tree_props( a.ecrsectionid ) ).sectiontype,  di.preparemoment, a.has_mrc::integer,a.id_tax_system,  a.flg_disable from azk.mcs_articles a  left join azk.mcs_subarticles sa on ( sa.articleid = a.articleid and sa.flg_base = 'SET_BASE' ) left join cbo.dish di on ( a.external_str_id = di.external_str_id ) left join cbo.cbo_articles c on a.external_str_id = c.external_str_id  where a.articleid = ?
2020-02-06 10:20:15.891004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select subarticleid, articleid, sa.unitid,u.unitscale,u.local_symbol, multiplier, flg_base, flg_disable from azk.mcs_subarticles sa join cbo.mcs_units u on (u.unitid = sa.unitid)  where subarticleid = ?
2020-02-06 10:20:15.893004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select barcodeid, barcode, subarticleid,marking_type from azk.mcs_barcodes where subarticleid = ?
2020-02-06 10:20:15.894004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select a.articleid, ecrsectionid, articlename, c.name2, a.ecrshortname, a.ecrlongname, a.external_str_id ,a.articletype,  sa.subarticleid,  ( cbo.get_classifier_tree_props( a.ecrsectionid ) ).sectiontype,  di.preparemoment, a.has_mrc::integer,a.id_tax_system,  a.flg_disable from azk.mcs_articles a  left join azk.mcs_subarticles sa on ( sa.articleid = a.articleid and sa.flg_base = 'SET_BASE' ) left join cbo.dish di on ( a.external_str_id = di.external_str_id ) left join cbo.cbo_articles c on a.external_str_id = c.external_str_id  where a.articleid = ?
2020-02-06 10:20:15.897004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select subarticleid, articleid, sa.unitid,u.unitscale,u.local_symbol, multiplier, flg_base, flg_disable from azk.mcs_subarticles sa join cbo.mcs_units u on (u.unitid = sa.unitid)  where subarticleid = ?
2020-02-06 10:20:15.898004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select barcodeid, barcode, subarticleid,marking_type from azk.mcs_barcodes where subarticleid = ?
2020-02-06 10:20:15.899004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select a.articleid, ecrsectionid, articlename, c.name2, a.ecrshortname, a.ecrlongname, a.external_str_id ,a.articletype,  sa.subarticleid,  ( cbo.get_classifier_tree_props( a.ecrsectionid ) ).sectiontype,  di.preparemoment, a.has_mrc::integer,a.id_tax_system,  a.flg_disable from azk.mcs_articles a  left join azk.mcs_subarticles sa on ( sa.articleid = a.articleid and sa.flg_base = 'SET_BASE' ) left join cbo.dish di on ( a.external_str_id = di.external_str_id ) left join cbo.cbo_articles c on a.external_str_id = c.external_str_id  where a.articleid = ?
2020-02-06 10:20:15.902004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select subarticleid, articleid, sa.unitid,u.unitscale,u.local_symbol, multiplier, flg_base, flg_disable from azk.mcs_subarticles sa join cbo.mcs_units u on (u.unitid = sa.unitid)  where subarticleid = ?
2020-02-06 10:20:15.903004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select barcodeid, barcode, subarticleid,marking_type from azk.mcs_barcodes where subarticleid = ?
2020-02-06 10:20:15.904004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select a.articleid, ecrsectionid, articlename, c.name2, a.ecrshortname, a.ecrlongname, a.external_str_id ,a.articletype,  sa.subarticleid,  ( cbo.get_classifier_tree_props( a.ecrsectionid ) ).sectiontype,  di.preparemoment, a.has_mrc::integer,a.id_tax_system,  a.flg_disable from azk.mcs_articles a  left join azk.mcs_subarticles sa on ( sa.articleid = a.articleid and sa.flg_base = 'SET_BASE' ) left join cbo.dish di on ( a.external_str_id = di.external_str_id ) left join cbo.cbo_articles c on a.external_str_id = c.external_str_id  where a.articleid = ?
2020-02-06 10:20:15.906004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select subarticleid, articleid, sa.unitid,u.unitscale,u.local_symbol, multiplier, flg_base, flg_disable from azk.mcs_subarticles sa join cbo.mcs_units u on (u.unitid = sa.unitid)  where subarticleid = ?
2020-02-06 10:20:15.908004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select barcodeid, barcode, subarticleid,marking_type from azk.mcs_barcodes where subarticleid = ?
2020-02-06 10:20:15.909004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select a.articleid, ecrsectionid, articlename, c.name2, a.ecrshortname, a.ecrlongname, a.external_str_id ,a.articletype,  sa.subarticleid,  ( cbo.get_classifier_tree_props( a.ecrsectionid ) ).sectiontype,  di.preparemoment, a.has_mrc::integer,a.id_tax_system,  a.flg_disable from azk.mcs_articles a  left join azk.mcs_subarticles sa on ( sa.articleid = a.articleid and sa.flg_base = 'SET_BASE' ) left join cbo.dish di on ( a.external_str_id = di.external_str_id ) left join cbo.cbo_articles c on a.external_str_id = c.external_str_id  where a.articleid = ?
2020-02-06 10:20:15.911004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select subarticleid, articleid, sa.unitid,u.unitscale,u.local_symbol, multiplier, flg_base, flg_disable from azk.mcs_subarticles sa join cbo.mcs_units u on (u.unitid = sa.unitid)  where subarticleid = ?
2020-02-06 10:20:15.912004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select barcodeid, barcode, subarticleid,marking_type from azk.mcs_barcodes where subarticleid = ?
2020-02-06 10:20:15.913004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select a.articleid, ecrsectionid, articlename, c.name2, a.ecrshortname, a.ecrlongname, a.external_str_id ,a.articletype,  sa.subarticleid,  ( cbo.get_classifier_tree_props( a.ecrsectionid ) ).sectiontype,  di.preparemoment, a.has_mrc::integer,a.id_tax_system,  a.flg_disable from azk.mcs_articles a  left join azk.mcs_subarticles sa on ( sa.articleid = a.articleid and sa.flg_base = 'SET_BASE' ) left join cbo.dish di on ( a.external_str_id = di.external_str_id ) left join cbo.cbo_articles c on a.external_str_id = c.external_str_id  where a.articleid = ?
2020-02-06 10:20:15.916004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select subarticleid, articleid, sa.unitid,u.unitscale,u.local_symbol, multiplier, flg_base, flg_disable from azk.mcs_subarticles sa join cbo.mcs_units u on (u.unitid = sa.unitid)  where subarticleid = ?
2020-02-06 10:20:15.917004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select barcodeid, barcode, subarticleid,marking_type from azk.mcs_barcodes where subarticleid = ?
2020-02-06 10:20:15.918004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select a.articleid, ecrsectionid, articlename, c.name2, a.ecrshortname, a.ecrlongname, a.external_str_id ,a.articletype,  sa.subarticleid,  ( cbo.get_classifier_tree_props( a.ecrsectionid ) ).sectiontype,  di.preparemoment, a.has_mrc::integer,a.id_tax_system,  a.flg_disable from azk.mcs_articles a  left join azk.mcs_subarticles sa on ( sa.articleid = a.articleid and sa.flg_base = 'SET_BASE' ) left join cbo.dish di on ( a.external_str_id = di.external_str_id ) left join cbo.cbo_articles c on a.external_str_id = c.external_str_id  where a.articleid = ?
2020-02-06 10:20:15.920004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select subarticleid, articleid, sa.unitid,u.unitscale,u.local_symbol, multiplier, flg_base, flg_disable from azk.mcs_subarticles sa join cbo.mcs_units u on (u.unitid = sa.unitid)  where subarticleid = ?
2020-02-06 10:20:15.921004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select barcodeid, barcode, subarticleid,marking_type from azk.mcs_barcodes where subarticleid = ?
2020-02-06 10:20:15.922004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select a.articleid, ecrsectionid, articlename, c.name2, a.ecrshortname, a.ecrlongname, a.external_str_id ,a.articletype,  sa.subarticleid,  ( cbo.get_classifier_tree_props( a.ecrsectionid ) ).sectiontype,  di.preparemoment, a.has_mrc::integer,a.id_tax_system,  a.flg_disable from azk.mcs_articles a  left join azk.mcs_subarticles sa on ( sa.articleid = a.articleid and sa.flg_base = 'SET_BASE' ) left join cbo.dish di on ( a.external_str_id = di.external_str_id ) left join cbo.cbo_articles c on a.external_str_id = c.external_str_id  where a.articleid = ?
2020-02-06 10:20:15.925004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select subarticleid, articleid, sa.unitid,u.unitscale,u.local_symbol, multiplier, flg_base, flg_disable from azk.mcs_subarticles sa join cbo.mcs_units u on (u.unitid = sa.unitid)  where subarticleid = ?
2020-02-06 10:20:15.926004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select barcodeid, barcode, subarticleid,marking_type from azk.mcs_barcodes where subarticleid = ?
2020-02-06 10:20:15.927004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select a.articleid, ecrsectionid, articlename, c.name2, a.ecrshortname, a.ecrlongname, a.external_str_id ,a.articletype,  sa.subarticleid,  ( cbo.get_classifier_tree_props( a.ecrsectionid ) ).sectiontype,  di.preparemoment, a.has_mrc::integer,a.id_tax_system,  a.flg_disable from azk.mcs_articles a  left join azk.mcs_subarticles sa on ( sa.articleid = a.articleid and sa.flg_base = 'SET_BASE' ) left join cbo.dish di on ( a.external_str_id = di.external_str_id ) left join cbo.cbo_articles c on a.external_str_id = c.external_str_id  where a.articleid = ?
2020-02-06 10:20:15.929004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select subarticleid, articleid, sa.unitid,u.unitscale,u.local_symbol, multiplier, flg_base, flg_disable from azk.mcs_subarticles sa join cbo.mcs_units u on (u.unitid = sa.unitid)  where subarticleid = ?
2020-02-06 10:20:15.930004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select barcodeid, barcode, subarticleid,marking_type from azk.mcs_barcodes where subarticleid = ?
2020-02-06 10:20:15.932004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select a.articleid, ecrsectionid, articlename, c.name2, a.ecrshortname, a.ecrlongname, a.external_str_id ,a.articletype,  sa.subarticleid,  ( cbo.get_classifier_tree_props( a.ecrsectionid ) ).sectiontype,  di.preparemoment, a.has_mrc::integer,a.id_tax_system,  a.flg_disable from azk.mcs_articles a  left join azk.mcs_subarticles sa on ( sa.articleid = a.articleid and sa.flg_base = 'SET_BASE' ) left join cbo.dish di on ( a.external_str_id = di.external_str_id ) left join cbo.cbo_articles c on a.external_str_id = c.external_str_id  where a.articleid = ?
2020-02-06 10:20:15.934004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select subarticleid, articleid, sa.unitid,u.unitscale,u.local_symbol, multiplier, flg_base, flg_disable from azk.mcs_subarticles sa join cbo.mcs_units u on (u.unitid = sa.unitid)  where subarticleid = ?
2020-02-06 10:20:15.935004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select barcodeid, barcode, subarticleid,marking_type from azk.mcs_barcodes where subarticleid = ?
2020-02-06 10:20:15.936004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select a.articleid, ecrsectionid, articlename, c.name2, a.ecrshortname, a.ecrlongname, a.external_str_id ,a.articletype,  sa.subarticleid,  ( cbo.get_classifier_tree_props( a.ecrsectionid ) ).sectiontype,  di.preparemoment, a.has_mrc::integer,a.id_tax_system,  a.flg_disable from azk.mcs_articles a  left join azk.mcs_subarticles sa on ( sa.articleid = a.articleid and sa.flg_base = 'SET_BASE' ) left join cbo.dish di on ( a.external_str_id = di.external_str_id ) left join cbo.cbo_articles c on a.external_str_id = c.external_str_id  where a.articleid = ?
2020-02-06 10:20:15.938004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select subarticleid, articleid, sa.unitid,u.unitscale,u.local_symbol, multiplier, flg_base, flg_disable from azk.mcs_subarticles sa join cbo.mcs_units u on (u.unitid = sa.unitid)  where subarticleid = ?
2020-02-06 10:20:15.939004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select barcodeid, barcode, subarticleid,marking_type from azk.mcs_barcodes where subarticleid = ?
2020-02-06 10:20:15.941004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select a.articleid, ecrsectionid, articlename, c.name2, a.ecrshortname, a.ecrlongname, a.external_str_id ,a.articletype,  sa.subarticleid,  ( cbo.get_classifier_tree_props( a.ecrsectionid ) ).sectiontype,  di.preparemoment, a.has_mrc::integer,a.id_tax_system,  a.flg_disable from azk.mcs_articles a  left join azk.mcs_subarticles sa on ( sa.articleid = a.articleid and sa.flg_base = 'SET_BASE' ) left join cbo.dish di on ( a.external_str_id = di.external_str_id ) left join cbo.cbo_articles c on a.external_str_id = c.external_str_id  where a.articleid = ?
2020-02-06 10:20:15.943004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select subarticleid, articleid, sa.unitid,u.unitscale,u.local_symbol, multiplier, flg_base, flg_disable from azk.mcs_subarticles sa join cbo.mcs_units u on (u.unitid = sa.unitid)  where subarticleid = ?
2020-02-06 10:20:15.944004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select barcodeid, barcode, subarticleid,marking_type from azk.mcs_barcodes where subarticleid = ?
2020-02-06 10:20:15.945004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select a.articleid, ecrsectionid, articlename, c.name2, a.ecrshortname, a.ecrlongname, a.external_str_id ,a.articletype,  sa.subarticleid,  ( cbo.get_classifier_tree_props( a.ecrsectionid ) ).sectiontype,  di.preparemoment, a.has_mrc::integer,a.id_tax_system,  a.flg_disable from azk.mcs_articles a  left join azk.mcs_subarticles sa on ( sa.articleid = a.articleid and sa.flg_base = 'SET_BASE' ) left join cbo.dish di on ( a.external_str_id = di.external_str_id ) left join cbo.cbo_articles c on a.external_str_id = c.external_str_id  where a.articleid = ?
2020-02-06 10:20:15.947004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select subarticleid, articleid, sa.unitid,u.unitscale,u.local_symbol, multiplier, flg_base, flg_disable from azk.mcs_subarticles sa join cbo.mcs_units u on (u.unitid = sa.unitid)  where subarticleid = ?
2020-02-06 10:20:15.949004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select barcodeid, barcode, subarticleid,marking_type from azk.mcs_barcodes where subarticleid = ?
2020-02-06 10:20:15.950004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select a.articleid, ecrsectionid, articlename, c.name2, a.ecrshortname, a.ecrlongname, a.external_str_id ,a.articletype,  sa.subarticleid,  ( cbo.get_classifier_tree_props( a.ecrsectionid ) ).sectiontype,  di.preparemoment, a.has_mrc::integer,a.id_tax_system,  a.flg_disable from azk.mcs_articles a  left join azk.mcs_subarticles sa on ( sa.articleid = a.articleid and sa.flg_base = 'SET_BASE' ) left join cbo.dish di on ( a.external_str_id = di.external_str_id ) left join cbo.cbo_articles c on a.external_str_id = c.external_str_id  where a.articleid = ?
2020-02-06 10:20:15.952004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select subarticleid, articleid, sa.unitid,u.unitscale,u.local_symbol, multiplier, flg_base, flg_disable from azk.mcs_subarticles sa join cbo.mcs_units u on (u.unitid = sa.unitid)  where subarticleid = ?
2020-02-06 10:20:15.953004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select barcodeid, barcode, subarticleid,marking_type from azk.mcs_barcodes where subarticleid = ?
2020-02-06 10:20:15.954004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select a.articleid, ecrsectionid, articlename, c.name2, a.ecrshortname, a.ecrlongname, a.external_str_id ,a.articletype,  sa.subarticleid,  ( cbo.get_classifier_tree_props( a.ecrsectionid ) ).sectiontype,  di.preparemoment, a.has_mrc::integer,a.id_tax_system,  a.flg_disable from azk.mcs_articles a  left join azk.mcs_subarticles sa on ( sa.articleid = a.articleid and sa.flg_base = 'SET_BASE' ) left join cbo.dish di on ( a.external_str_id = di.external_str_id ) left join cbo.cbo_articles c on a.external_str_id = c.external_str_id  where a.articleid = ?
2020-02-06 10:20:15.956004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select subarticleid, articleid, sa.unitid,u.unitscale,u.local_symbol, multiplier, flg_base, flg_disable from azk.mcs_subarticles sa join cbo.mcs_units u on (u.unitid = sa.unitid)  where subarticleid = ?
2020-02-06 10:20:15.958004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select barcodeid, barcode, subarticleid,marking_type from azk.mcs_barcodes where subarticleid = ?
2020-02-06 10:20:15.959004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select a.articleid, ecrsectionid, articlename, c.name2, a.ecrshortname, a.ecrlongname, a.external_str_id ,a.articletype,  sa.subarticleid,  ( cbo.get_classifier_tree_props( a.ecrsectionid ) ).sectiontype,  di.preparemoment, a.has_mrc::integer,a.id_tax_system,  a.flg_disable from azk.mcs_articles a  left join azk.mcs_subarticles sa on ( sa.articleid = a.articleid and sa.flg_base = 'SET_BASE' ) left join cbo.dish di on ( a.external_str_id = di.external_str_id ) left join cbo.cbo_articles c on a.external_str_id = c.external_str_id  where a.articleid = ?
2020-02-06 10:20:15.961004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select subarticleid, articleid, sa.unitid,u.unitscale,u.local_symbol, multiplier, flg_base, flg_disable from azk.mcs_subarticles sa join cbo.mcs_units u on (u.unitid = sa.unitid)  where subarticleid = ?
2020-02-06 10:20:15.962004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select barcodeid, barcode, subarticleid,marking_type from azk.mcs_barcodes where subarticleid = ?
2020-02-06 10:20:15.963004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select a.articleid, ecrsectionid, articlename, c.name2, a.ecrshortname, a.ecrlongname, a.external_str_id ,a.articletype,  sa.subarticleid,  ( cbo.get_classifier_tree_props( a.ecrsectionid ) ).sectiontype,  di.preparemoment, a.has_mrc::integer,a.id_tax_system,  a.flg_disable from azk.mcs_articles a  left join azk.mcs_subarticles sa on ( sa.articleid = a.articleid and sa.flg_base = 'SET_BASE' ) left join cbo.dish di on ( a.external_str_id = di.external_str_id ) left join cbo.cbo_articles c on a.external_str_id = c.external_str_id  where a.articleid = ?
2020-02-06 10:20:15.964004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select subarticleid, articleid, sa.unitid,u.unitscale,u.local_symbol, multiplier, flg_base, flg_disable from azk.mcs_subarticles sa join cbo.mcs_units u on (u.unitid = sa.unitid)  where subarticleid = ?
2020-02-06 10:20:15.965004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select barcodeid, barcode, subarticleid,marking_type from azk.mcs_barcodes where subarticleid = ?
2020-02-06 10:20:15.966004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select a.articleid, ecrsectionid, articlename, c.name2, a.ecrshortname, a.ecrlongname, a.external_str_id ,a.articletype,  sa.subarticleid,  ( cbo.get_classifier_tree_props( a.ecrsectionid ) ).sectiontype,  di.preparemoment, a.has_mrc::integer,a.id_tax_system,  a.flg_disable from azk.mcs_articles a  left join azk.mcs_subarticles sa on ( sa.articleid = a.articleid and sa.flg_base = 'SET_BASE' ) left join cbo.dish di on ( a.external_str_id = di.external_str_id ) left join cbo.cbo_articles c on a.external_str_id = c.external_str_id  where a.articleid = ?
2020-02-06 10:20:15.967004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select subarticleid, articleid, sa.unitid,u.unitscale,u.local_symbol, multiplier, flg_base, flg_disable from azk.mcs_subarticles sa join cbo.mcs_units u on (u.unitid = sa.unitid)  where subarticleid = ?
2020-02-06 10:20:15.968004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select barcodeid, barcode, subarticleid,marking_type from azk.mcs_barcodes where subarticleid = ?
2020-02-06 10:20:15.969004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select a.articleid, ecrsectionid, articlename, c.name2, a.ecrshortname, a.ecrlongname, a.external_str_id ,a.articletype,  sa.subarticleid,  ( cbo.get_classifier_tree_props( a.ecrsectionid ) ).sectiontype,  di.preparemoment, a.has_mrc::integer,a.id_tax_system,  a.flg_disable from azk.mcs_articles a  left join azk.mcs_subarticles sa on ( sa.articleid = a.articleid and sa.flg_base = 'SET_BASE' ) left join cbo.dish di on ( a.external_str_id = di.external_str_id ) left join cbo.cbo_articles c on a.external_str_id = c.external_str_id  where a.articleid = ?
2020-02-06 10:20:15.970004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select subarticleid, articleid, sa.unitid,u.unitscale,u.local_symbol, multiplier, flg_base, flg_disable from azk.mcs_subarticles sa join cbo.mcs_units u on (u.unitid = sa.unitid)  where subarticleid = ?
2020-02-06 10:20:15.970004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select barcodeid, barcode, subarticleid,marking_type from azk.mcs_barcodes where subarticleid = ?
2020-02-06 10:20:15.971004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select a.articleid, ecrsectionid, articlename, c.name2, a.ecrshortname, a.ecrlongname, a.external_str_id ,a.articletype,  sa.subarticleid,  ( cbo.get_classifier_tree_props( a.ecrsectionid ) ).sectiontype,  di.preparemoment, a.has_mrc::integer,a.id_tax_system,  a.flg_disable from azk.mcs_articles a  left join azk.mcs_subarticles sa on ( sa.articleid = a.articleid and sa.flg_base = 'SET_BASE' ) left join cbo.dish di on ( a.external_str_id = di.external_str_id ) left join cbo.cbo_articles c on a.external_str_id = c.external_str_id  where a.articleid = ?
2020-02-06 10:20:15.972004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select subarticleid, articleid, sa.unitid,u.unitscale,u.local_symbol, multiplier, flg_base, flg_disable from azk.mcs_subarticles sa join cbo.mcs_units u on (u.unitid = sa.unitid)  where subarticleid = ?
2020-02-06 10:20:15.973004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select barcodeid, barcode, subarticleid,marking_type from azk.mcs_barcodes where subarticleid = ?
2020-02-06 10:20:15.973004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select a.articleid, ecrsectionid, articlename, c.name2, a.ecrshortname, a.ecrlongname, a.external_str_id ,a.articletype,  sa.subarticleid,  ( cbo.get_classifier_tree_props( a.ecrsectionid ) ).sectiontype,  di.preparemoment, a.has_mrc::integer,a.id_tax_system,  a.flg_disable from azk.mcs_articles a  left join azk.mcs_subarticles sa on ( sa.articleid = a.articleid and sa.flg_base = 'SET_BASE' ) left join cbo.dish di on ( a.external_str_id = di.external_str_id ) left join cbo.cbo_articles c on a.external_str_id = c.external_str_id  where a.articleid = ?
2020-02-06 10:20:15.974004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select subarticleid, articleid, sa.unitid,u.unitscale,u.local_symbol, multiplier, flg_base, flg_disable from azk.mcs_subarticles sa join cbo.mcs_units u on (u.unitid = sa.unitid)  where subarticleid = ?
2020-02-06 10:20:15.974004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select barcodeid, barcode, subarticleid,marking_type from azk.mcs_barcodes where subarticleid = ?
2020-02-06 10:20:15.975004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select a.articleid, ecrsectionid, articlename, c.name2, a.ecrshortname, a.ecrlongname, a.external_str_id ,a.articletype,  sa.subarticleid,  ( cbo.get_classifier_tree_props( a.ecrsectionid ) ).sectiontype,  di.preparemoment, a.has_mrc::integer,a.id_tax_system,  a.flg_disable from azk.mcs_articles a  left join azk.mcs_subarticles sa on ( sa.articleid = a.articleid and sa.flg_base = 'SET_BASE' ) left join cbo.dish di on ( a.external_str_id = di.external_str_id ) left join cbo.cbo_articles c on a.external_str_id = c.external_str_id  where a.articleid = ?
2020-02-06 10:20:15.976004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select subarticleid, articleid, sa.unitid,u.unitscale,u.local_symbol, multiplier, flg_base, flg_disable from azk.mcs_subarticles sa join cbo.mcs_units u on (u.unitid = sa.unitid)  where subarticleid = ?
2020-02-06 10:20:15.977004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select barcodeid, barcode, subarticleid,marking_type from azk.mcs_barcodes where subarticleid = ?
2020-02-06 10:20:15.977004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select a.articleid, ecrsectionid, articlename, c.name2, a.ecrshortname, a.ecrlongname, a.external_str_id ,a.articletype,  sa.subarticleid,  ( cbo.get_classifier_tree_props( a.ecrsectionid ) ).sectiontype,  di.preparemoment, a.has_mrc::integer,a.id_tax_system,  a.flg_disable from azk.mcs_articles a  left join azk.mcs_subarticles sa on ( sa.articleid = a.articleid and sa.flg_base = 'SET_BASE' ) left join cbo.dish di on ( a.external_str_id = di.external_str_id ) left join cbo.cbo_articles c on a.external_str_id = c.external_str_id  where a.articleid = ?
2020-02-06 10:20:15.978004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select subarticleid, articleid, sa.unitid,u.unitscale,u.local_symbol, multiplier, flg_base, flg_disable from azk.mcs_subarticles sa join cbo.mcs_units u on (u.unitid = sa.unitid)  where subarticleid = ?
2020-02-06 10:20:15.978004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select barcodeid, barcode, subarticleid,marking_type from azk.mcs_barcodes where subarticleid = ?
2020-02-06 10:20:15.979004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select a.articleid, ecrsectionid, articlename, c.name2, a.ecrshortname, a.ecrlongname, a.external_str_id ,a.articletype,  sa.subarticleid,  ( cbo.get_classifier_tree_props( a.ecrsectionid ) ).sectiontype,  di.preparemoment, a.has_mrc::integer,a.id_tax_system,  a.flg_disable from azk.mcs_articles a  left join azk.mcs_subarticles sa on ( sa.articleid = a.articleid and sa.flg_base = 'SET_BASE' ) left join cbo.dish di on ( a.external_str_id = di.external_str_id ) left join cbo.cbo_articles c on a.external_str_id = c.external_str_id  where a.articleid = ?
2020-02-06 10:20:15.979004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select subarticleid, articleid, sa.unitid,u.unitscale,u.local_symbol, multiplier, flg_base, flg_disable from azk.mcs_subarticles sa join cbo.mcs_units u on (u.unitid = sa.unitid)  where subarticleid = ?
2020-02-06 10:20:15.980004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select barcodeid, barcode, subarticleid,marking_type from azk.mcs_barcodes where subarticleid = ?
2020-02-06 10:20:15.980004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select a.articleid, ecrsectionid, articlename, c.name2, a.ecrshortname, a.ecrlongname, a.external_str_id ,a.articletype,  sa.subarticleid,  ( cbo.get_classifier_tree_props( a.ecrsectionid ) ).sectiontype,  di.preparemoment, a.has_mrc::integer,a.id_tax_system,  a.flg_disable from azk.mcs_articles a  left join azk.mcs_subarticles sa on ( sa.articleid = a.articleid and sa.flg_base = 'SET_BASE' ) left join cbo.dish di on ( a.external_str_id = di.external_str_id ) left join cbo.cbo_articles c on a.external_str_id = c.external_str_id  where a.articleid = ?
2020-02-06 10:20:15.981004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select subarticleid, articleid, sa.unitid,u.unitscale,u.local_symbol, multiplier, flg_base, flg_disable from azk.mcs_subarticles sa join cbo.mcs_units u on (u.unitid = sa.unitid)  where subarticleid = ?
2020-02-06 10:20:15.981004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select barcodeid, barcode, subarticleid,marking_type from azk.mcs_barcodes where subarticleid = ?
2020-02-06 10:20:15.981004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select a.articleid, ecrsectionid, articlename, c.name2, a.ecrshortname, a.ecrlongname, a.external_str_id ,a.articletype,  sa.subarticleid,  ( cbo.get_classifier_tree_props( a.ecrsectionid ) ).sectiontype,  di.preparemoment, a.has_mrc::integer,a.id_tax_system,  a.flg_disable from azk.mcs_articles a  left join azk.mcs_subarticles sa on ( sa.articleid = a.articleid and sa.flg_base = 'SET_BASE' ) left join cbo.dish di on ( a.external_str_id = di.external_str_id ) left join cbo.cbo_articles c on a.external_str_id = c.external_str_id  where a.articleid = ?
2020-02-06 10:20:15.982004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select subarticleid, articleid, sa.unitid,u.unitscale,u.local_symbol, multiplier, flg_base, flg_disable from azk.mcs_subarticles sa join cbo.mcs_units u on (u.unitid = sa.unitid)  where subarticleid = ?
2020-02-06 10:20:15.982004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select barcodeid, barcode, subarticleid,marking_type from azk.mcs_barcodes where subarticleid = ?
2020-02-06 10:20:15.983004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select a.articleid, ecrsectionid, articlename, c.name2, a.ecrshortname, a.ecrlongname, a.external_str_id ,a.articletype,  sa.subarticleid,  ( cbo.get_classifier_tree_props( a.ecrsectionid ) ).sectiontype,  di.preparemoment, a.has_mrc::integer,a.id_tax_system,  a.flg_disable from azk.mcs_articles a  left join azk.mcs_subarticles sa on ( sa.articleid = a.articleid and sa.flg_base = 'SET_BASE' ) left join cbo.dish di on ( a.external_str_id = di.external_str_id ) left join cbo.cbo_articles c on a.external_str_id = c.external_str_id  where a.articleid = ?
2020-02-06 10:20:15.983004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select subarticleid, articleid, sa.unitid,u.unitscale,u.local_symbol, multiplier, flg_base, flg_disable from azk.mcs_subarticles sa join cbo.mcs_units u on (u.unitid = sa.unitid)  where subarticleid = ?
2020-02-06 10:20:15.984004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select barcodeid, barcode, subarticleid,marking_type from azk.mcs_barcodes where subarticleid = ?
2020-02-06 10:20:15.984004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select a.articleid, ecrsectionid, articlename, c.name2, a.ecrshortname, a.ecrlongname, a.external_str_id ,a.articletype,  sa.subarticleid,  ( cbo.get_classifier_tree_props( a.ecrsectionid ) ).sectiontype,  di.preparemoment, a.has_mrc::integer,a.id_tax_system,  a.flg_disable from azk.mcs_articles a  left join azk.mcs_subarticles sa on ( sa.articleid = a.articleid and sa.flg_base = 'SET_BASE' ) left join cbo.dish di on ( a.external_str_id = di.external_str_id ) left join cbo.cbo_articles c on a.external_str_id = c.external_str_id  where a.articleid = ?
2020-02-06 10:20:15.985004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select subarticleid, articleid, sa.unitid,u.unitscale,u.local_symbol, multiplier, flg_base, flg_disable from azk.mcs_subarticles sa join cbo.mcs_units u on (u.unitid = sa.unitid)  where subarticleid = ?
2020-02-06 10:20:15.985004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select barcodeid, barcode, subarticleid,marking_type from azk.mcs_barcodes where subarticleid = ?
2020-02-06 10:20:15.985004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select a.articleid, ecrsectionid, articlename, c.name2, a.ecrshortname, a.ecrlongname, a.external_str_id ,a.articletype,  sa.subarticleid,  ( cbo.get_classifier_tree_props( a.ecrsectionid ) ).sectiontype,  di.preparemoment, a.has_mrc::integer,a.id_tax_system,  a.flg_disable from azk.mcs_articles a  left join azk.mcs_subarticles sa on ( sa.articleid = a.articleid and sa.flg_base = 'SET_BASE' ) left join cbo.dish di on ( a.external_str_id = di.external_str_id ) left join cbo.cbo_articles c on a.external_str_id = c.external_str_id  where a.articleid = ?
2020-02-06 10:20:15.986004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select subarticleid, articleid, sa.unitid,u.unitscale,u.local_symbol, multiplier, flg_base, flg_disable from azk.mcs_subarticles sa join cbo.mcs_units u on (u.unitid = sa.unitid)  where subarticleid = ?
2020-02-06 10:20:15.986004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select barcodeid, barcode, subarticleid,marking_type from azk.mcs_barcodes where subarticleid = ?
2020-02-06 10:20:15.986004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select a.articleid, ecrsectionid, articlename, c.name2, a.ecrshortname, a.ecrlongname, a.external_str_id ,a.articletype,  sa.subarticleid,  ( cbo.get_classifier_tree_props( a.ecrsectionid ) ).sectiontype,  di.preparemoment, a.has_mrc::integer,a.id_tax_system,  a.flg_disable from azk.mcs_articles a  left join azk.mcs_subarticles sa on ( sa.articleid = a.articleid and sa.flg_base = 'SET_BASE' ) left join cbo.dish di on ( a.external_str_id = di.external_str_id ) left join cbo.cbo_articles c on a.external_str_id = c.external_str_id  where a.articleid = ?
2020-02-06 10:20:15.987004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select subarticleid, articleid, sa.unitid,u.unitscale,u.local_symbol, multiplier, flg_base, flg_disable from azk.mcs_subarticles sa join cbo.mcs_units u on (u.unitid = sa.unitid)  where subarticleid = ?
2020-02-06 10:20:15.987004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select barcodeid, barcode, subarticleid,marking_type from azk.mcs_barcodes where subarticleid = ?
2020-02-06 10:20:15.987004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select a.articleid, ecrsectionid, articlename, c.name2, a.ecrshortname, a.ecrlongname, a.external_str_id ,a.articletype,  sa.subarticleid,  ( cbo.get_classifier_tree_props( a.ecrsectionid ) ).sectiontype,  di.preparemoment, a.has_mrc::integer,a.id_tax_system,  a.flg_disable from azk.mcs_articles a  left join azk.mcs_subarticles sa on ( sa.articleid = a.articleid and sa.flg_base = 'SET_BASE' ) left join cbo.dish di on ( a.external_str_id = di.external_str_id ) left join cbo.cbo_articles c on a.external_str_id = c.external_str_id  where a.articleid = ?
2020-02-06 10:20:15.988004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select subarticleid, articleid, sa.unitid,u.unitscale,u.local_symbol, multiplier, flg_base, flg_disable from azk.mcs_subarticles sa join cbo.mcs_units u on (u.unitid = sa.unitid)  where subarticleid = ?
2020-02-06 10:20:15.988004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select barcodeid, barcode, subarticleid,marking_type from azk.mcs_barcodes where subarticleid = ?
2020-02-06 10:20:15.989004 I system Th{5772} [monitoring/monitoring.cpp:430] send() Отправка события мониторинга не выполнена. Каталог спулинга переполнен.
2020-02-06 10:20:15.989004 I system Th{5772} [monitoring/monitoring.cpp:430] send() Отправка события мониторинга не выполнена. Каталог спулинга переполнен.
2020-02-06 10:20:15.990004 I system Th{5772} [monitoring/monitoring.cpp:430] send() Отправка события мониторинга не выполнена. Каталог спулинга переполнен.
2020-02-06 10:20:15.990004 I system Th{5772} [monitoring/monitoring.cpp:430] send() Отправка события мониторинга не выполнена. Каталог спулинга переполнен.
2020-02-06 10:20:15.991004 I system Th{5772} [monitoring/monitoring.cpp:430] send() Отправка события мониторинга не выполнена. Каталог спулинга переполнен.
2020-02-06 10:20:15.991004 I system Th{5772} [monitoring/monitoring.cpp:430] send() Отправка события мониторинга не выполнена. Каталог спулинга переполнен.
2020-02-06 10:20:15.992004 I system Th{5772} [monitoring/monitoring.cpp:430] send() Отправка события мониторинга не выполнена. Каталог спулинга переполнен.
2020-02-06 10:20:15.992004 D trk Th{5772} [mcs/trk_stage_watchdog.cpp:512] attach_trk() attach trk: 1
2020-02-06 10:20:15.992004 I system Th{5772} [monitoring/monitoring.cpp:430] send() Отправка события мониторинга не выполнена. Каталог спулинга переполнен.
2020-02-06 10:20:15.993004 I system Th{5772} [monitoring/monitoring.cpp:430] send() Отправка события мониторинга не выполнена. Каталог спулинга переполнен.
2020-02-06 10:20:15.993004 I system Th{5772} [monitoring/monitoring.cpp:430] send() Отправка события мониторинга не выполнена. Каталог спулинга переполнен.
2020-02-06 10:20:15.994004 I system Th{5772} [monitoring/monitoring.cpp:430] send() Отправка события мониторинга не выполнена. Каталог спулинга переполнен.
2020-02-06 10:20:15.994004 I system Th{5772} [monitoring/monitoring.cpp:430] send() Отправка события мониторинга не выполнена. Каталог спулинга переполнен.
2020-02-06 10:20:15.995004 I system Th{5772} [monitoring/monitoring.cpp:430] send() Отправка события мониторинга не выполнена. Каталог спулинга переполнен.
2020-02-06 10:20:15.995004 I system Th{5772} [monitoring/monitoring.cpp:430] send() Отправка события мониторинга не выполнена. Каталог спулинга переполнен.
2020-02-06 10:20:15.995004 D trk Th{5772} [mcs/trk_stage_watchdog.cpp:512] attach_trk() attach trk: 2
2020-02-06 10:20:15.996004 I system Th{5772} [monitoring/monitoring.cpp:430] send() Отправка события мониторинга не выполнена. Каталог спулинга переполнен.
2020-02-06 10:20:15.996004 I system Th{5772} [monitoring/monitoring.cpp:430] send() Отправка события мониторинга не выполнена. Каталог спулинга переполнен.
2020-02-06 10:20:15.997004 I system Th{5772} [monitoring/monitoring.cpp:430] send() Отправка события мониторинга не выполнена. Каталог спулинга переполнен.
2020-02-06 10:20:15.997004 I system Th{5772} [monitoring/monitoring.cpp:430] send() Отправка события мониторинга не выполнена. Каталог спулинга переполнен.
2020-02-06 10:20:15.998004 I system Th{5772} [monitoring/monitoring.cpp:430] send() Отправка события мониторинга не выполнена. Каталог спулинга переполнен.
2020-02-06 10:20:15.998004 I system Th{5772} [monitoring/monitoring.cpp:430] send() Отправка события мониторинга не выполнена. Каталог спулинга переполнен.
2020-02-06 10:20:15.999004 I system Th{5772} [monitoring/monitoring.cpp:430] send() Отправка события мониторинга не выполнена. Каталог спулинга переполнен.
2020-02-06 10:20:15.999004 D trk Th{5772} [mcs/trk_stage_watchdog.cpp:512] attach_trk() attach trk: 3
2020-02-06 10:20:15.999004 I system Th{5772} [monitoring/monitoring.cpp:430] send() Отправка события мониторинга не выполнена. Каталог спулинга переполнен.
2020-02-06 10:20:15.999004 I system Th{5772} [monitoring/monitoring.cpp:430] send() Отправка события мониторинга не выполнена. Каталог спулинга переполнен.
2020-02-06 10:20:16.000004 I system Th{5772} [monitoring/monitoring.cpp:430] send() Отправка события мониторинга не выполнена. Каталог спулинга переполнен.
2020-02-06 10:20:16.000004 I system Th{5772} [monitoring/monitoring.cpp:430] send() Отправка события мониторинга не выполнена. Каталог спулинга переполнен.
2020-02-06 10:20:16.001004 I system Th{5772} [monitoring/monitoring.cpp:430] send() Отправка события мониторинга не выполнена. Каталог спулинга переполнен.
2020-02-06 10:20:16.001004 I system Th{5772} [monitoring/monitoring.cpp:430] send() Отправка события мониторинга не выполнена. Каталог спулинга переполнен.
2020-02-06 10:20:16.002004 I system Th{5772} [monitoring/monitoring.cpp:430] send() Отправка события мониторинга не выполнена. Каталог спулинга переполнен.
2020-02-06 10:20:16.002004 D trk Th{5772} [mcs/trk_stage_watchdog.cpp:512] attach_trk() attach trk: 4
2020-02-06 10:20:16.002004 I system Th{5772} [monitoring/monitoring.cpp:430] send() Отправка события мониторинга не выполнена. Каталог спулинга переполнен.
2020-02-06 10:20:16.003004 I system Th{5772} [monitoring/monitoring.cpp:430] send() Отправка события мониторинга не выполнена. Каталог спулинга переполнен.
2020-02-06 10:20:16.003004 I system Th{5772} [monitoring/monitoring.cpp:430] send() Отправка события мониторинга не выполнена. Каталог спулинга переполнен.
2020-02-06 10:20:16.004004 I system Th{5772} [monitoring/monitoring.cpp:430] send() Отправка события мониторинга не выполнена. Каталог спулинга переполнен.
2020-02-06 10:20:16.004004 I system Th{5772} [monitoring/monitoring.cpp:430] send() Отправка события мониторинга не выполнена. Каталог спулинга переполнен.
2020-02-06 10:20:16.005004 I system Th{5772} [monitoring/monitoring.cpp:430] send() Отправка события мониторинга не выполнена. Каталог спулинга переполнен.
2020-02-06 10:20:16.005004 I system Th{5772} [monitoring/monitoring.cpp:430] send() Отправка события мониторинга не выполнена. Каталог спулинга переполнен.
2020-02-06 10:20:16.005004 D trk Th{5772} [mcs/trk_stage_watchdog.cpp:512] attach_trk() attach trk: 5
2020-02-06 10:20:16.006004 I system Th{5772} [monitoring/monitoring.cpp:430] send() Отправка события мониторинга не выполнена. Каталог спулинга переполнен.
2020-02-06 10:20:16.006004 I system Th{5772} [monitoring/monitoring.cpp:430] send() Отправка события мониторинга не выполнена. Каталог спулинга переполнен.
2020-02-06 10:20:16.007004 I system Th{5772} [monitoring/monitoring.cpp:430] send() Отправка события мониторинга не выполнена. Каталог спулинга переполнен.
2020-02-06 10:20:16.007004 I system Th{5772} [monitoring/monitoring.cpp:430] send() Отправка события мониторинга не выполнена. Каталог спулинга переполнен.
2020-02-06 10:20:16.008004 I system Th{5772} [monitoring/monitoring.cpp:430] send() Отправка события мониторинга не выполнена. Каталог спулинга переполнен.
2020-02-06 10:20:16.008004 I system Th{5772} [monitoring/monitoring.cpp:430] send() Отправка события мониторинга не выполнена. Каталог спулинга переполнен.
2020-02-06 10:20:16.009004 I system Th{5772} [monitoring/monitoring.cpp:430] send() Отправка события мониторинга не выполнена. Каталог спулинга переполнен.
2020-02-06 10:20:16.009004 D trk Th{5772} [mcs/trk_stage_watchdog.cpp:512] attach_trk() attach trk: 6
2020-02-06 10:20:16.009004 I system Th{5772} [monitoring/monitoring.cpp:430] send() Отправка события мониторинга не выполнена. Каталог спулинга переполнен.
2020-02-06 10:20:16.010004 I system Th{5772} [monitoring/monitoring.cpp:430] send() Отправка события мониторинга не выполнена. Каталог спулинга переполнен.
2020-02-06 10:20:16.010004 I system Th{5772} [monitoring/monitoring.cpp:430] send() Отправка события мониторинга не выполнена. Каталог спулинга переполнен.
2020-02-06 10:20:16.010004 D trk Th{5772} [mcs/trk_stage_watchdog.cpp:512] attach_trk() attach trk: 7
2020-02-06 10:20:16.011004 I system Th{5772} [monitoring/monitoring.cpp:430] send() Отправка события мониторинга не выполнена. Каталог спулинга переполнен.
2020-02-06 10:20:16.011004 I system Th{5772} [monitoring/monitoring.cpp:430] send() Отправка события мониторинга не выполнена. Каталог спулинга переполнен.
2020-02-06 10:20:16.012004 I system Th{5772} [monitoring/monitoring.cpp:430] send() Отправка события мониторинга не выполнена. Каталог спулинга переполнен.
2020-02-06 10:20:16.012004 I system Th{5772} [monitoring/monitoring.cpp:430] send() Отправка события мониторинга не выполнена. Каталог спулинга переполнен.
2020-02-06 10:20:16.012004 D trk Th{5772} [mcs/trk_stage_watchdog.cpp:512] attach_trk() attach trk: 8
2020-02-06 10:20:16.012004 I system Th{5772} [main/server_main.cpp:640] main() TrkSerivce::run_service() - Ok
2020-02-06 10:20:16.012004 I system Th{5772} [mcs/mcs_registrator_map.cpp:45] static_prepare() preapring...
2020-02-06 10:20:16.012004 D db Th{5772} [dblib/dblib.cpp:1435] execute() SQLStmt::executing select registrator_type,registrator_oper,oper_use_status,oper_apply_necessity,oper_undo_possibility,oper_auto_run_possibility,name,oper_undo_load,replace_object_after_undo from azk.reg_operation
2020-02-06 10:20:16.042004 I db Th{5772} [mcs/mcs_registrator.cpp:710] static_prepare() This registrator operation traits map have been loaded:
                                size=83

2020-02-06 10:20:16.042004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: VOUCHER_REGISTRATOR, m_operation: VOUCHER_CREATE_AND_PROCESS_OP}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NOT_NEED_APPLY, oper_undo_possibility=ROUP_ENABLE_UNDO, oper_auto_run_possibility=RARP_ENABLE_AUTO_RUN, native_name=>Завершение обработки ваучеров, oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.042004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: VOUCHER_REGISTRATOR, m_operation: VOUCHER_REPAY_OP}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NOT_NEED_APPLY, oper_undo_possibility=ROUP_ENABLE_UNDO, oper_auto_run_possibility=RARP_ENABLE_AUTO_RUN, native_name=>Гашение ваучера, oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.042004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: INPAS_REGISTRATOR, m_operation: INPAS_MPS_CANCEL_BEFORE_FUELING_OP}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NOT_NEED_APPLY, oper_undo_possibility=ROUP_ENABLE_UNDO, oper_auto_run_possibility=RARP_ENABLE_AUTO_RUN, native_name=>Отмена, oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.042004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: VOUCHER_REGISTRATOR, m_operation: VOUCHER_CREATE_OP}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NOT_NEED_APPLY, oper_undo_possibility=ROUP_ENABLE_UNDO, oper_auto_run_possibility=RARP_ENABLE_AUTO_RUN, native_name=>Создание ваучера, oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.042004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: INPAS_REGISTRATOR, m_operation: INPAS_MPS_REFUND_OP}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NOT_NEED_APPLY, oper_undo_possibility=ROUP_DISABLE_UNDO, oper_auto_run_possibility=RARP_ENABLE_AUTO_RUN, native_name=>Отмена, oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.042004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: GUI_REGISTRATOR, m_operation: GUI_POSTPAY_SALE_UPDATE_OP}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NOT_NEED_APPLY, oper_undo_possibility=ROUP_ENABLE_UNDO, oper_auto_run_possibility=RARP_DISABLE_AUTO_RUN, native_name=>Набор корзины продажи по постоплате, oper_undo_load=>ROLROAU_AFTER_STATE, replace_object_after_undo=>ROROAU_CURRENT}<=

2020-02-06 10:20:16.042004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: SCT_PETROL_REGISTRATOR, m_operation: SCT_FLEET_FINALIZE_OP}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NOT_NEED_APPLY, oper_undo_possibility=ROUP_DISABLE_UNDO, oper_auto_run_possibility=RARP_ENABLE_AUTO_RUN, native_name=>Расчет, oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.042004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: SCT_LOYALTY_REGISTRATOR, m_operation: SCT_REDISCOUNT_WITH_LOYALTY_OP}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NOT_NEED_APPLY, oper_undo_possibility=ROUP_ENABLE_UNDO, oper_auto_run_possibility=RARP_ENABLE_AUTO_RUN, native_name=>Скидка за бонусы, oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.043004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: SCT_LOYALTY_REGISTRATOR, m_operation: SCT_DISCOUNT_WITH_LOYALTY_OP}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NOT_NEED_APPLY, oper_undo_possibility=ROUP_ENABLE_UNDO, oper_auto_run_possibility=RARP_ENABLE_AUTO_RUN, native_name=>Скидка за бонусы, oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.043004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: GUI_REGISTRATOR, m_operation: GUI_RAISE_DISJOINT_OP}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NOT_NEED_APPLY, oper_undo_possibility=ROUP_ENABLE_UNDO, oper_auto_run_possibility=RARP_ENABLE_AUTO_RUN, native_name=>Переход к несвязанному режиму закрытия до налива, oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.043004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: GUI_REGISTRATOR, m_operation: GUI_CONFIRM_BONUS_AS_DISCOUNT_OP}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NOT_NEED_APPLY, oper_undo_possibility=ROUP_ENABLE_UNDO, oper_auto_run_possibility=RARP_DISABLE_AUTO_RUN, native_name=>Подтверждение оплаты после использования бонусов для скидки, oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.043004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: GUI_REGISTRATOR, m_operation: GUI_SHOW_ECO_OP}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NOT_NEED_APPLY, oper_undo_possibility=ROUP_ENABLE_UNDO, oper_auto_run_possibility=RARP_DISABLE_AUTO_RUN, native_name=>Просмотр расходного кассового ордера, oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.043004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: INPAS_REGISTRATOR, m_operation: INPAS_MPS_FINALIZE_FOR_PAY_OP}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NOT_NEED_APPLY, oper_undo_possibility=ROUP_DISABLE_UNDO, oper_auto_run_possibility=RARP_ENABLE_AUTO_RUN, native_name=>Отмена, oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.043004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: PETROL_REGISTRATOR, m_operation: PETROL_PAYMENT_OP}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NOT_NEED_APPLY, oper_undo_possibility=ROUP_ENABLE_UNDO, oper_auto_run_possibility=RARP_DISABLE_AUTO_RUN, native_name=>Петрол+ оплата, oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.043004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: NKT_REGISTRATOR, m_operation: NKT_FINALIZE_OP}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NOT_NEED_APPLY, oper_undo_possibility=ROUP_DISABLE_UNDO, oper_auto_run_possibility=RARP_DISABLE_AUTO_RUN, native_name=>B+ завершение, oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.043004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: ECR_REGISTRATOR, m_operation: ECR_PRINT_FACT_CHEQUE_OP1}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NOT_NEED_APPLY, oper_undo_possibility=ROUP_DISABLE_UNDO, oper_auto_run_possibility=RARP_ENABLE_AUTO_RUN, native_name=>Печать чека по постоплате, oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.043004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: GUI_REGISTRATOR, m_operation: GUI_SCT_PAY_FAIL_DIALOG_OP}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NOT_NEED_APPLY, oper_undo_possibility=ROUP_DISABLE_UNDO, oper_auto_run_possibility=RARP_DISABLE_AUTO_RUN, native_name=>Выбор продолжения после проблемы с оплатой Скантек, oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.043004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: ECR_REGISTRATOR, m_operation: ECR_PRINT_FACT_CHEQUE_OP}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NOT_NEED_APPLY, oper_undo_possibility=ROUP_DISABLE_UNDO, oper_auto_run_possibility=RARP_ENABLE_AUTO_RUN, native_name=>Печать чека по постоплате, oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.043004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: GUI_REGISTRATOR, m_operation: GUI_SALE_FORK_OP}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NOT_NEED_APPLY, oper_undo_possibility=ROUP_ENABLE_UNDO, oper_auto_run_possibility=RARP_DISABLE_AUTO_RUN, native_name=>Разделение транзакции, oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.043004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: ECR_REGISTRATOR, m_operation: ECR_PRINT_TICKET_OP}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NOT_NEED_APPLY, oper_undo_possibility=ROUP_DISABLE_UNDO, oper_auto_run_possibility=RARP_ENABLE_AUTO_RUN, native_name=>Печать квитанции, oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.043004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: MPS_REGISTRATOR, m_operation: MPS_FINALIZE_OP}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NOT_NEED_APPLY, oper_undo_possibility=ROUP_DISABLE_UNDO, oper_auto_run_possibility=RARP_DISABLE_AUTO_RUN, native_name=>МПС завершение, oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.043004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: ECR_REGISTRATOR, m_operation: ECR_PRINT_PAY_TICKET_OP}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NOT_NEED_APPLY, oper_undo_possibility=ROUP_DISABLE_UNDO, oper_auto_run_possibility=RARP_ENABLE_AUTO_RUN, native_name=>Печать чека плат.терминалa с неопр.результатом до налива, oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.043004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: GUI_REGISTRATOR, m_operation: GUI_POSTPAY_SALE_APPROVE_OP}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NOT_NEED_APPLY, oper_undo_possibility=ROUP_ENABLE_UNDO, oper_auto_run_possibility=RARP_ENABLE_AUTO_RUN, native_name=>Подтверждение постоплаты, oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.043004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: PETROL_REGISTRATOR, m_operation: PETROL_REFUND_OP}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NOT_NEED_APPLY, oper_undo_possibility=ROUP_DISABLE_UNDO, oper_auto_run_possibility=RARP_DISABLE_AUTO_RUN, native_name=>Петрол+ возврат товара(после завершения), oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.043004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: ECR_REGISTRATOR, m_operation: ECR_PRINT_ADVANCE_CHEQUE_OP}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NEED_APPLY, oper_undo_possibility=ROUP_ENABLE_UNDO, oper_auto_run_possibility=RARP_ENABLE_AUTO_RUN, native_name=>Печать чека по предоплате, oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.043004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: GUI_REGISTRATOR, m_operation: GUI_SALE_TTN_EDIT_OP}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NOT_NEED_APPLY, oper_undo_possibility=ROUP_ENABLE_UNDO, oper_auto_run_possibility=RARP_DISABLE_AUTO_RUN, native_name=>Редактирование ТТН возврата после Z, oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.043004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: MPS_REGISTRATOR, m_operation: MPS_PREAUTH_AS_PAY_OP}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NOT_NEED_APPLY, oper_undo_possibility=ROUP_DISABLE_UNDO, oper_auto_run_possibility=RARP_DISABLE_AUTO_RUN, native_name=>МПС оплата перед наливом, oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.043004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: ECR_REGISTRATOR, m_operation: ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NOT_NEED_APPLY, oper_undo_possibility=ROUP_DISABLE_UNDO, oper_auto_run_possibility=RARP_ENABLE_AUTO_RUN, native_name=>Печать чека плат.терминалa с неопр.результатом после налива, oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.043004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: GUI_REGISTRATOR, m_operation: GUI_SALE_UPDATE_OP}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NOT_NEED_APPLY, oper_undo_possibility=ROUP_ENABLE_UNDO, oper_auto_run_possibility=RARP_DISABLE_AUTO_RUN, native_name=>Набор корзины начало продажи, oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.043004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: NKT_REGISTRATOR, m_operation: NKT_REFUND_OP}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NOT_NEED_APPLY, oper_undo_possibility=ROUP_DISABLE_UNDO, oper_auto_run_possibility=RARP_DISABLE_AUTO_RUN, native_name=>B+ возврат товара(после завершения), oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.043004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: PETROL_REGISTRATOR, m_operation: PETROL_FINALIZE_OP}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NOT_NEED_APPLY, oper_undo_possibility=ROUP_DISABLE_UNDO, oper_auto_run_possibility=RARP_DISABLE_AUTO_RUN, native_name=>Петрол+ завершение, oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.043004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: INPAS_REGISTRATOR, m_operation: INPAS_MPS_PAYMENT_OP}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NOT_NEED_APPLY, oper_undo_possibility=ROUP_ENABLE_UNDO, oper_auto_run_possibility=RARP_ENABLE_AUTO_RUN, native_name=>Оплата, oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.043004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: MPS_REGISTRATOR, m_operation: MPS_PAYMENT_OP}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NOT_NEED_APPLY, oper_undo_possibility=ROUP_ENABLE_UNDO, oper_auto_run_possibility=RARP_DISABLE_AUTO_RUN, native_name=>МПС оплата, oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.043004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: ECR_REGISTRATOR, m_operation: ECR_PRINT_FAIL_PAY_TICKET_OP}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NOT_NEED_APPLY, oper_undo_possibility=ROUP_DISABLE_UNDO, oper_auto_run_possibility=RARP_ENABLE_AUTO_RUN, native_name=>Печать чека отказа плат.терминалa, oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.043004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: MPS_REGISTRATOR, m_operation: MPS_PREAUTH_OP}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NOT_NEED_APPLY, oper_undo_possibility=ROUP_DISABLE_UNDO, oper_auto_run_possibility=RARP_DISABLE_AUTO_RUN, native_name=>МПС предавторизация, oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.043004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: ECR_REGISTRATOR, m_operation: ECR_PRINT_FAIL_PAY_TICKET_AND_BACK_TO_DEBET_OP}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NOT_NEED_APPLY, oper_undo_possibility=ROUP_DISABLE_UNDO, oper_auto_run_possibility=RARP_ENABLE_AUTO_RUN, native_name=>Печать чека отказа плат.терминалa, oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.043004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: ECR_REGISTRATOR, m_operation: ECR_PRINT_REFUND_CHEQUE_OP}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NOT_NEED_APPLY, oper_undo_possibility=ROUP_DISABLE_UNDO, oper_auto_run_possibility=RARP_ENABLE_AUTO_RUN, native_name=>Печать чека возврата, oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.043004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: ECR_REGISTRATOR, m_operation: ECR_PRINT_FINALIZE_TICKET_OP}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NOT_NEED_APPLY, oper_undo_possibility=ROUP_DISABLE_UNDO, oper_auto_run_possibility=RARP_ENABLE_AUTO_RUN, native_name=>Печать чека плат.терминалa с неопр.результатом после налива, oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.043004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: MPS_REGISTRATOR, m_operation: MPS_FINALIZE_FOR_PAY_OP}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NOT_NEED_APPLY, oper_undo_possibility=ROUP_DISABLE_UNDO, oper_auto_run_possibility=RARP_DISABLE_AUTO_RUN, native_name=>МПС возврат предоплаты при недоливе, oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.043004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: EXP_REGISTRATOR, m_operation: EXP_PAY_OP}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NOT_NEED_APPLY, oper_undo_possibility=ROUP_DISABLE_UNDO, oper_auto_run_possibility=RARP_DISABLE_AUTO_RUN, native_name=>EXP POS оплата, oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.043004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: GUI_REGISTRATOR, m_operation: GUI_RAISE_DISJOINT_FINALIZE_OP}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NOT_NEED_APPLY, oper_undo_possibility=ROUP_ENABLE_UNDO, oper_auto_run_possibility=RARP_ENABLE_AUTO_RUN, native_name=>Переход к несвязанному режиму закрытия после налива, oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.043004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: NKT_REGISTRATOR, m_operation: NKT_UPDATE_AFTER_FUELING_OP}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NOT_NEED_APPLY, oper_undo_possibility=ROUP_ENABLE_UNDO, oper_auto_run_possibility=RARP_DISABLE_AUTO_RUN, native_name=>B+ Добавление задатков по постоплате, oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.043004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: MPS_REGISTRATOR, m_operation: MPS_REFUND_OP}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NOT_NEED_APPLY, oper_undo_possibility=ROUP_DISABLE_UNDO, oper_auto_run_possibility=RARP_DISABLE_AUTO_RUN, native_name=>МПС возврат товара(после завершения), oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.043004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: NKT_REGISTRATOR, m_operation: NKT_UPDATE_BEFORE_FUELING_OP}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NOT_NEED_APPLY, oper_undo_possibility=ROUP_DISABLE_UNDO, oper_auto_run_possibility=RARP_DISABLE_AUTO_RUN, native_name=>B+ Добавление задатков по предоплате, oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.043004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: NKT_REGISTRATOR, m_operation: NKT_PAYMENT_OP}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NOT_NEED_APPLY, oper_undo_possibility=ROUP_ENABLE_UNDO, oper_auto_run_possibility=RARP_DISABLE_AUTO_RUN, native_name=>B+ оплата, oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.043004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: TRK_REGISTRATOR, m_operation: TRK_CONTINUE_OP}: => RegistratorOperationTraits={ ROUS_NOT_IN_USE, oper_apply_necessity=ROAN_NOT_NEED_APPLY, oper_undo_possibility=ROUP_DISABLE_UNDO, oper_auto_run_possibility=RARP_ENABLE_AUTO_RUN, native_name=>Продолжение налива, oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.043004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: GUI_REGISTRATOR, m_operation: GUI_SOLVE_FAIL_FINALIZE_OP}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NOT_NEED_APPLY, oper_undo_possibility=ROUP_DISABLE_UNDO, oper_auto_run_possibility=RARP_DISABLE_AUTO_RUN, native_name=>Выбор продолжения после проблемы с финализацией Скантек, oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.043004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: GUI_REGISTRATOR, m_operation: GUI_SOLVE_FAIL_REFUND_OP}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NOT_NEED_APPLY, oper_undo_possibility=ROUP_DISABLE_UNDO, oper_auto_run_possibility=RARP_DISABLE_AUTO_RUN, native_name=>Продолжение после проблемы с отменой оплаты по банку, oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.043004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: GUI_REGISTRATOR, m_operation: GUI_SOLVE_NCT_PAY_REJECT_OP}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NOT_NEED_APPLY, oper_undo_possibility=ROUP_DISABLE_UNDO, oper_auto_run_possibility=RARP_DISABLE_AUTO_RUN, native_name=>Продолжение после гарант. отказа оплаты по ТУ НКТ, oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.043004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: TRK_REGISTRATOR, m_operation: TRK_EXECUTE_OP}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NEED_APPLY, oper_undo_possibility=ROUP_DISABLE_UNDO, oper_auto_run_possibility=RARP_ENABLE_AUTO_RUN, native_name=>Запуск налива, oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.043004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: GUI_REGISTRATOR, m_operation: GUI_DROP_LOYALTY_OP}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NOT_NEED_APPLY, oper_undo_possibility=ROUP_DISABLE_UNDO, oper_auto_run_possibility=RARP_DISABLE_AUTO_RUN, native_name=>удаление лояльности после неудачного начисления бонусов, oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.043004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: GUI_REGISTRATOR, m_operation: GUI_FIX_VIP_TO_TANK_OP}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NOT_NEED_APPLY, oper_undo_possibility=ROUP_ENABLE_UNDO, oper_auto_run_possibility=RARP_ENABLE_AUTO_RUN, native_name=>Пересчет скидки в бак по VIP-карте, oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.043004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: EXP_REGISTRATOR, m_operation: EXP_REFUND_OP}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NOT_NEED_APPLY, oper_undo_possibility=ROUP_DISABLE_UNDO, oper_auto_run_possibility=RARP_DISABLE_AUTO_RUN, native_name=>EXP POS возврат, oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.043004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: GUI_REGISTRATOR, m_operation: GUI_SELECT_RECEIPT_DESTINATION}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NOT_NEED_APPLY, oper_undo_possibility=ROUP_ENABLE_UNDO, oper_auto_run_possibility=RARP_ENABLE_AUTO_RUN, native_name=>Выбор назначения печати чека, oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.043004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: SCT_MPS_REGISTRATOR, m_operation: SCT_MPS_PAYMENT_OP}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NOT_NEED_APPLY, oper_undo_possibility=ROUP_ENABLE_UNDO, oper_auto_run_possibility=RARP_ENABLE_AUTO_RUN, native_name=>Оплата, oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.043004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: SCT_MPS_REGISTRATOR, m_operation: SCT_MPS_PREAUTH_OP}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NOT_NEED_APPLY, oper_undo_possibility=ROUP_DISABLE_UNDO, oper_auto_run_possibility=RARP_ENABLE_AUTO_RUN, native_name=>Предавторизация, oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.043004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: SCT_MPS_REGISTRATOR, m_operation: SCT_MPS_PREAUTH_AS_PAY_OP}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NOT_NEED_APPLY, oper_undo_possibility=ROUP_DISABLE_UNDO, oper_auto_run_possibility=RARP_ENABLE_AUTO_RUN, native_name=>Оплата, oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.043004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: SCT_MPS_REGISTRATOR, m_operation: SCT_MPS_FINALIZE_OP}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NOT_NEED_APPLY, oper_undo_possibility=ROUP_DISABLE_UNDO, oper_auto_run_possibility=RARP_ENABLE_AUTO_RUN, native_name=>Расчет, oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.043004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: SCT_PETROL_REGISTRATOR, m_operation: SCT_FLEET_PAYMENT_OP}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NOT_NEED_APPLY, oper_undo_possibility=ROUP_ENABLE_UNDO, oper_auto_run_possibility=RARP_ENABLE_AUTO_RUN, native_name=>Оплата, oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.043004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: SCT_MPS_REGISTRATOR, m_operation: SCT_MPS_FINALIZE_FOR_PAY_OP}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NOT_NEED_APPLY, oper_undo_possibility=ROUP_DISABLE_UNDO, oper_auto_run_possibility=RARP_ENABLE_AUTO_RUN, native_name=>Отмена, oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.043004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: SCT_PETROL_REGISTRATOR, m_operation: SCT_FLEET_PREAUTH_OP}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NOT_NEED_APPLY, oper_undo_possibility=ROUP_ENABLE_UNDO, oper_auto_run_possibility=RARP_ENABLE_AUTO_RUN, native_name=>Предавторизация, oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.043004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: SCT_MPS_REGISTRATOR, m_operation: SCT_MPS_REFUND_OP}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NOT_NEED_APPLY, oper_undo_possibility=ROUP_DISABLE_UNDO, oper_auto_run_possibility=RARP_ENABLE_AUTO_RUN, native_name=>Отмена, oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.043004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: SCT_PETROL_REGISTRATOR, m_operation: SCT_FLEET_FINALIZE_FOR_PAY_OP}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NOT_NEED_APPLY, oper_undo_possibility=ROUP_DISABLE_UNDO, oper_auto_run_possibility=RARP_ENABLE_AUTO_RUN, native_name=>Отмена, oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.043004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: SCT_LOYALTY_REGISTRATOR, m_operation: SCT_LOYALTY_CHARGE_AFTER_FUELING_OP}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NOT_NEED_APPLY, oper_undo_possibility=ROUP_DISABLE_UNDO, oper_auto_run_possibility=RARP_ENABLE_AUTO_RUN, native_name=>Начисление бонусов, oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.043004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: SCT_PETROL_REGISTRATOR, m_operation: SCT_FLEET_REFUND_OP}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NOT_NEED_APPLY, oper_undo_possibility=ROUP_DISABLE_UNDO, oper_auto_run_possibility=RARP_ENABLE_AUTO_RUN, native_name=>Отмена, oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.043004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: SCT_LOYALTY_REGISTRATOR, m_operation: SCT_LOYALTY_CHARGE_OP}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NOT_NEED_APPLY, oper_undo_possibility=ROUP_DISABLE_UNDO, oper_auto_run_possibility=RARP_ENABLE_AUTO_RUN, native_name=>Начисление бонусов, oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.043004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: SCT_LOYALTY_REGISTRATOR, m_operation: SCT_LOYALTY_RECHARGE_OP}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NOT_NEED_APPLY, oper_undo_possibility=ROUP_ENABLE_UNDO, oper_auto_run_possibility=RARP_ENABLE_AUTO_RUN, native_name=>Начисление бонусов, oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.043004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: SCT_LOYALTY_REGISTRATOR, m_operation: SCT_LOYALTY_BACK_OP}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NOT_NEED_APPLY, oper_undo_possibility=ROUP_DISABLE_UNDO, oper_auto_run_possibility=RARP_ENABLE_AUTO_RUN, native_name=>Отмена начисления бонусов, oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.043004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: SCT_LOYALTY_REGISTRATOR, m_operation: SCT_PAY_WITH_LOYALTY_OP}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NOT_NEED_APPLY, oper_undo_possibility=ROUP_ENABLE_UNDO, oper_auto_run_possibility=RARP_ENABLE_AUTO_RUN, native_name=>Оплата, oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.043004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: SCT_LOYALTY_REGISTRATOR, m_operation: SCT_REPAY_WITH_LOYALTY_OP}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NOT_NEED_APPLY, oper_undo_possibility=ROUP_ENABLE_UNDO, oper_auto_run_possibility=RARP_ENABLE_AUTO_RUN, native_name=>Оплата, oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.043004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: TRK_REGISTRATOR, m_operation: TRK_RECOVER_EMPTY_OP}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NOT_NEED_APPLY, oper_undo_possibility=ROUP_DISABLE_UNDO, oper_auto_run_possibility=RARP_ENABLE_AUTO_RUN, native_name=>Обработка сбоя неналива, oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.043004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: SCT_LOYALTY_REGISTRATOR, m_operation: SCT_REFUND_LOYALTY_OP}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NOT_NEED_APPLY, oper_undo_possibility=ROUP_DISABLE_UNDO, oper_auto_run_possibility=RARP_ENABLE_AUTO_RUN, native_name=>Отмена, oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.043004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: SCT_LOYALTY_REGISTRATOR, m_operation: SCT_CALC_VIP_OP}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NOT_NEED_APPLY, oper_undo_possibility=ROUP_DISABLE_UNDO, oper_auto_run_possibility=RARP_ENABLE_AUTO_RUN, native_name=>Начисление скидки, oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.043004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: SCT_LOYALTY_REGISTRATOR, m_operation: SCT_RECALC_VIP_OP}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NOT_NEED_APPLY, oper_undo_possibility=ROUP_DISABLE_UNDO, oper_auto_run_possibility=RARP_ENABLE_AUTO_RUN, native_name=>Начисление скидки, oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.043004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: SCT_LOYALTY_REGISTRATOR, m_operation: SCT_VIP_BACK_OP}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NOT_NEED_APPLY, oper_undo_possibility=ROUP_DISABLE_UNDO, oper_auto_run_possibility=RARP_ENABLE_AUTO_RUN, native_name=>Отмена начисления скидки, oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.043004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: SCT_LOYALTY_REGISTRATOR, m_operation: SCT_VIP_BACK_BEFORE_FUELING_OP}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NOT_NEED_APPLY, oper_undo_possibility=ROUP_ENABLE_UNDO, oper_auto_run_possibility=RARP_ENABLE_AUTO_RUN, native_name=>Отмена начисления скидки, oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.043004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: SCT_LOYALTY_REGISTRATOR, m_operation: SCT_RECALC_FINAL_VIP}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NOT_NEED_APPLY, oper_undo_possibility=ROUP_ENABLE_UNDO, oper_auto_run_possibility=RARP_ENABLE_AUTO_RUN, native_name=>Финальный расчет скидка в бак, oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.043004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: SCT_LOYALTY_REGISTRATOR, m_operation: SCT_DISCOUNT_WITH_LOYALTY_BACK_OP}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NOT_NEED_APPLY, oper_undo_possibility=ROUP_ENABLE_UNDO, oper_auto_run_possibility=RARP_ENABLE_AUTO_RUN, native_name=>Отмена скидки за бонусы, oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.043004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: SCT_MPS_REGISTRATOR, m_operation: SCT_MPS_CANCEL_BEFORE_FUELING_OP}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NOT_NEED_APPLY, oper_undo_possibility=ROUP_ENABLE_UNDO, oper_auto_run_possibility=RARP_ENABLE_AUTO_RUN, native_name=>Отмена, oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.043004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: INPAS_REGISTRATOR, m_operation: INPAS_MPS_PREAUTH_OP}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NOT_NEED_APPLY, oper_undo_possibility=ROUP_DISABLE_UNDO, oper_auto_run_possibility=RARP_ENABLE_AUTO_RUN, native_name=>Предавторизация, oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.043004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: SCT_LOYALTY_REGISTRATOR, m_operation: SCT_DISCOUNT_WITH_LOYALTY_BACK_BEFORE_FUELING_OP}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NOT_NEED_APPLY, oper_undo_possibility=ROUP_ENABLE_UNDO, oper_auto_run_possibility=RARP_ENABLE_AUTO_RUN, native_name=>Отмена скидки за бонусы, oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.043004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: INPAS_REGISTRATOR, m_operation: INPAS_MPS_PREAUTH_AS_PAY_OP}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NOT_NEED_APPLY, oper_undo_possibility=ROUP_DISABLE_UNDO, oper_auto_run_possibility=RARP_ENABLE_AUTO_RUN, native_name=>Оплата, oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.043004 I db Th{5772} [mcs/mcs_registrator.cpp:712] static_prepare() :RegOper: { m_type: INPAS_REGISTRATOR, m_operation: INPAS_MPS_FINALIZE_OP}: => RegistratorOperationTraits={ ROUS_IN_USE, oper_apply_necessity=ROAN_NOT_NEED_APPLY, oper_undo_possibility=ROUP_DISABLE_UNDO, oper_auto_run_possibility=RARP_ENABLE_AUTO_RUN, native_name=>Расчет, oper_undo_load=>ROLROAU_BEFORE_STATE, replace_object_after_undo=>ROROAU_NEAREST_REDO}<=

2020-02-06 10:20:16.070004 I sale Th{5772} [mcs_types/loyalty_info.cpp:52] add() added li=% LoyaltyInfo={ provider=LOYALTY_MCC, type=LT_NONE}

2020-02-06 10:20:16.097004 I sale Th{5772} [mcs/sale_modifiers_manager.cpp:257] init()  ++++++++ BEGIN TUNING LOYALTY COMBINERS   +++++++++ props=mcs::LoyaltyCfgProps={ deny_marked=1, deny_mrc=1}
2020-02-06 10:20:16.109004 I sale Th{5772} [mcs_types/loyalty_info.cpp:52] add() added li=% LoyaltyInfo={ provider=LOYALTY_MCC, type=LT_GPAY}

2020-02-06 10:20:16.123004 I sale Th{5772} [mcs/sale_modifiers_manager.cpp:104] g_make_modifier() adv_camp_id=19 g_disable_block_auto_adv_camps()=1 g_can_mix_campaigns()=1
2020-02-06 10:20:16.139004 I sale Th{5772} [mcs_types/loyalty_info.cpp:52] add() added li=% LoyaltyInfo={ provider=LOYALTY_MCC, type=LT_AUTO_ADD}

2020-02-06 10:20:16.139004 D sale Th{5772} [mcs_types/loyalty_info.cpp:56] merge()  this=LoyaltyInfoSet={
                                 } m=LoyaltyInfoSet={
                                  LoyaltyInfo={ provider=LOYALTY_MCC, type=LT_AUTO_ADD}
                                 
                                 }
2020-02-06 10:20:16.139004 D sale Th{5772} [mcs_types/loyalty_info.cpp:56] merge()  this=LoyaltyInfoSet={
                                  LoyaltyInfo={ provider=LOYALTY_MCC, type=LT_AUTO_ADD}
                                 
                                 } m=LoyaltyInfoSet={
                                 }
2020-02-06 10:20:16.139004 I sale Th{5772} [mcs_types/loyalty_info.cpp:52] add() added li=% LoyaltyInfo={ provider=LOYALTY_MCC, type=LT_AUTO_ADD}

2020-02-06 10:20:16.139004 I sale Th{5772} [mcs/sale_modifiers_manager.cpp:104] g_make_modifier() adv_camp_id=19 g_disable_block_auto_adv_camps()=1 g_can_mix_campaigns()=1
2020-02-06 10:20:16.139004 I sale Th{5772} [mcs_types/loyalty_info.cpp:52] add() added li=% LoyaltyInfo={ provider=LOYALTY_MCC_CARD, type=LT_MCC_DISCOUNT}

2020-02-06 10:20:16.139004 D sale Th{5772} [mcs_types/loyalty_info.cpp:56] merge()  this=LoyaltyInfoSet={
                                  LoyaltyInfo={ provider=LOYALTY_MCC_CARD, type=LT_MCC_DISCOUNT}
                                 
                                 } m=LoyaltyInfoSet={
                                  LoyaltyInfo={ provider=LOYALTY_MCC, type=LT_AUTO_ADD}
                                 
                                 }
2020-02-06 10:20:16.139004 I sale Th{5772} [mcs_types/loyalty_info.cpp:52] add() added li=% LoyaltyInfo={ provider=LOYALTY_MCC_CARD, type=LT_MCC_DISCOUNT}

2020-02-06 10:20:16.139004 I sale Th{5772} [mcs_types/loyalty_info.cpp:52] add() added li=% LoyaltyInfo={ provider=LOYALTY_MCC, type=LT_AUTO_ADD}

2020-02-06 10:20:16.139004 I sale Th{5772} [mcs_types/loyalty_info.cpp:52] add() added li=% LoyaltyInfo={ provider=LOYALTY_SCANTECH, type=LT_BONUS}

2020-02-06 10:20:16.139004 I sale Th{5772} [mcs_types/loyalty_info.cpp:52] add() added li=% LoyaltyInfo={ provider=LOYALTY_SCANTECH, type=LT_VIP}

2020-02-06 10:20:16.139004 I sale Th{5772} [mcs_types/loyalty_info.cpp:52] add() added li=% LoyaltyInfo={ provider=LOYALTY_SCANTECH, type=LT_VIP_TO_TANK}

2020-02-06 10:20:16.139004 I sale Th{5772} [mcs_types/loyalty_info.cpp:52] add() added li=% LoyaltyInfo={ provider=LOYALTY_SCANTECH, type=LT_BONUS_AS_DISCOUNT}

2020-02-06 10:20:16.139004 I sale Th{5772} [mcs_types/loyalty_info.cpp:52] add() added li=% LoyaltyInfo={ provider=LOYALTY_SCANTECH, type=LT_COBRAND}

2020-02-06 10:20:16.139004 D sale Th{5772} [mcs/sale_modifiers_manager.cpp:73] g_tune_drop_loyalty() wdrp==WDL_APPLY_MC_LOYALTY==
2020-02-06 10:20:16.140004 I sale Th{5772} [mcs_types/loyalty_info.cpp:52] add() added li=% LoyaltyInfo={ provider=LOYALTY_MCC, type=LT_AUTO_OPT}

2020-02-06 10:20:16.140004 D sale Th{5772} [mcs_types/loyalty_info.cpp:56] merge()  this=LoyaltyInfoSet={
                                  LoyaltyInfo={ provider=LOYALTY_MCC, type=LT_AUTO_OPT}
                                 
                                 } m=LoyaltyInfoSet={
                                 }
2020-02-06 10:20:16.148004 I sale Th{5772} [mcs/sale_modifiers_manager.cpp:677] init()  voucher discount params have been setted:VoucherDiscountText={wo_discount=, voucher_discount=, voucher_discount_round=, voucher_barcode_prefix=Сумма ваучера:, voucher_info=ВАУЧЕР ДЛЯ ОПЛАТЫ ТОПЛИВА, voucher_enabled=1, generate_new_voucher_for_pure_voucher_sale=0, generate_new_voucher_for_mixt_voucher_sale=1, rpd_for_fail_before_1st_receipt=RPD_PAPER_TAPE(0), voucher_repay_fiscalize=VRF_CASH_ONLY(1), out_of_sale_activation=OSVA_ALL(2)}
2020-02-06 10:20:16.148004 I sale Th{5772} [mcs_types/loyalty_info.cpp:52] add() added li=% LoyaltyInfo={ provider=LOYALTY_MCC, type=LT_AUTO_OPT}

2020-02-06 10:20:16.148004 I sale Th{5772} [mcs_types/loyalty_info.cpp:52] add() added li=% LoyaltyInfo={ provider=LOYALTY_SCANTECH, type=LT_BONUS}

2020-02-06 10:20:16.148004 I sale Th{5772} [mcs_types/loyalty_info.cpp:52] add() added li=% LoyaltyInfo={ provider=LOYALTY_SCANTECH, type=LT_BONUS_AS_DISCOUNT}

2020-02-06 10:20:16.148004 I sale Th{5772} [mcs_types/loyalty_info.cpp:52] add() added li=% LoyaltyInfo={ provider=LOYALTY_SCANTECH, type=LT_COBRAND}

2020-02-06 10:20:16.148004 I sale Th{5772} [mcs/sale_modifiers_manager.cpp:791] init()  ++++++++ END TUNING LOYALTY COMBINERS =====
                                 SaleModifiersCombiners={m_auto_add=LoyaltyInfoSet={
                                  LoyaltyInfo={ provider=LOYALTY_MCC, type=LT_AUTO_ADD}
                                 
                                 }
                                  m_add_auto_despite_loyalties=1
                                  m_when_drop_term_loyalty=WDL_APPLY_MC_LOYALTY
                                 [
                                 [LoyaltyInfoSet={
                                  LoyaltyInfo={ provider=LOYALTY_MCC, type=LT_AUTO_ADD}
                                 
                                 }|==>SmcNoneTermLoyalty={ m_cfg=0x0000000000000000
                                  allow_bonus_charge()=0
                                  allow_bonus_as_discount()=0
                                  raw cfg params:NULL
                                 SaleModifiersCombiner={
                                  AdvCampaignModifier { id=19 reverse_order=1}
                                 
                                 }}],
                                 [LoyaltyInfoSet={
                                  LoyaltyInfo={ provider=LOYALTY_MCC, type=LT_AUTO_OPT}
                                 
                                 }|==>SmcNoneTermLoyalty={ m_cfg=0x0000000000000000
                                  allow_bonus_charge()=0
                                  allow_bonus_as_discount()=0
                                  raw cfg params:NULL
                                 SaleModifiersCombiner={
                                 OptCashVoucherModifierP{OptCashVoucherModifier{DiscountProgram id=35 reverse_order=3 ,
                                  m_max_total_discount=0.99}
                                 }
                                 
                                 }}],
                                 [LoyaltyInfoSet={
                                  LoyaltyInfo={ provider=LOYALTY_MCC, type=LT_GPAY}
                                 
                                 }|==>SmcGpayLoyalty={SaleModifiersCombiner={
                                 },mdp=3.00}],
                                 [LoyaltyInfoSet={
                                  LoyaltyInfo={ provider=LOYALTY_MCC, type=LT_NONE}
                                 
                                 }|==>SmcNoneLoyalty={SaleModifiersCombiner={
                                 }}],
                                 [LoyaltyInfoSet={
                                  LoyaltyInfo={ provider=LOYALTY_MCC, type=LT_AUTO_ADD}
                                 ,
                                  LoyaltyInfo={ provider=LOYALTY_SCANTECH, type=LT_BONUS}
                                 
                                 }|==>SmcRoundSctNfBonDsc={SmcNoneTermLoyalty={ m_cfg=0x000055EA79001CC0
                                  allow_bonus_charge()=1
                                  allow_bonus_as_discount()=0
                                  raw cfg params:{
                                 allow_bonus_charge=1,
                                 allow_bonus_as_discount=BONUS_AS_DISCOUNT_FORCE,
                                 allow_bonus_charge_after_bonus_as_discount=0
                                 }
                                 SaleModifiersCombiner={
                                  AdvCampaignModifier { id=19 reverse_order=1}
                                 
                                 }}}],
                                 [LoyaltyInfoSet={
                                  LoyaltyInfo={ provider=LOYALTY_MCC, type=LT_AUTO_ADD}
                                 ,
                                  LoyaltyInfo={ provider=LOYALTY_SCANTECH, type=LT_VIP}
                                 
                                 }|==>SmcRoundSctNfBonDsc={SmcNoneTermLoyalty={ m_cfg=0x000055EA79001CC0
                                  allow_bonus_charge()=1
                                  allow_bonus_as_discount()=0
                                  raw cfg params:{
                                 allow_bonus_charge=1,
                                 allow_bonus_as_discount=BONUS_AS_DISCOUNT_FORCE,
                                 allow_bonus_charge_after_bonus_as_discount=0
                                 }
                                 SaleModifiersCombiner={
                                  AdvCampaignModifier { id=19 reverse_order=1}
                                 
                                 }}}],
                                 [LoyaltyInfoSet={
                                  LoyaltyInfo={ provider=LOYALTY_MCC, type=LT_AUTO_ADD}
                                 ,
                                  LoyaltyInfo={ provider=LOYALTY_SCANTECH, type=LT_COBRAND}
                                 
                                 }|==>SmcRoundSctNfBonDsc={SmcNoneTermLoyalty={ m_cfg=0x000055EA79001CC0
                                  allow_bonus_charge()=1
                                  allow_bonus_as_discount()=0
                                  raw cfg params:{
                                 allow_bonus_charge=1,
                                 allow_bonus_as_discount=BONUS_AS_DISCOUNT_FORCE,
                                 allow_bonus_charge_after_bonus_as_discount=0
                                 }
                                 SaleModifiersCombiner={
                                  AdvCampaignModifier { id=19 reverse_order=1}
                                 
                                 }}}],
                                 [LoyaltyInfoSet={
                                  LoyaltyInfo={ provider=LOYALTY_MCC, type=LT_AUTO_ADD}
                                 ,
                                  LoyaltyInfo={ provider=LOYALTY_SCANTECH, type=LT_VIP_TO_TANK}
                                 
                                 }|==>SmcRoundSctNfBonDsc={SmcNoneTermLoyalty={ m_cfg=0x000055EA79001CC0
                                  allow_bonus_charge()=1
                                  allow_bonus_as_discount()=0
                                  raw cfg params:{
                                 allow_bonus_charge=1,
                                 allow_bonus_as_discount=BONUS_AS_DISCOUNT_FORCE,
                                 allow_bonus_charge_after_bonus_as_discount=0
                                 }
                                 SaleModifiersCombiner={
                                  AdvCampaignModifier { id=19 reverse_order=1}
                                 
                                 }}}],
                                 [LoyaltyInfoSet={
                                  LoyaltyInfo={ provider=LOYALTY_MCC, type=LT_AUTO_ADD}
                                 ,
                                  LoyaltyInfo={ provider=LOYALTY_SCANTECH, type=LT_BONUS_AS_DISCOUNT}
                                 
                                 }|==>SmcRoundSctNfBonDsc={SmcNoneTermLoyalty={ m_cfg=0x000055EA79001CC0
                                  allow_bonus_charge()=1
                                  allow_bonus_as_discount()=0
                                  raw cfg params:{
                                 allow_bonus_charge=1,
                                 allow_bonus_as_discount=BONUS_AS_DISCOUNT_FORCE,
                                 allow_bonus_charge_after_bonus_as_discount=0
                                 }
                                 SaleModifiersCombiner={
                                  AdvCampaignModifier { id=19 reverse_order=1}
                                 
                                 }}}],
                                 [LoyaltyInfoSet={
                                  LoyaltyInfo={ provider=LOYALTY_MCC, type=LT_AUTO_ADD}
                                 ,
                                  LoyaltyInfo={ provider=LOYALTY_MCC_CARD, type=LT_MCC_DISCOUNT}
                                 
                                 }|==>SmcNoneTermLoyalty={ m_cfg=0x0000000000000000
                                  allow_bonus_charge()=0
                                  allow_bonus_as_discount()=0
                                  raw cfg params:NULL
                                 SaleModifiersCombiner={
                                  AdvCampaignModifier { id=19 reverse_order=1}
                                 
                                 }}],
                                 [LoyaltyInfoSet={
                                  LoyaltyInfo={ provider=LOYALTY_MCC, type=LT_AUTO_OPT}
                                 ,
                                  LoyaltyInfo={ provider=LOYALTY_SCANTECH, type=LT_BONUS}
                                 
                                 }|==>SmcRoundSctNfBonDsc={SmcNoneTermLoyalty={ m_cfg=0x0000000000000000
                                  allow_bonus_charge()=0
                                  allow_bonus_as_discount()=0
                                  raw cfg params:NULL
                                 SaleModifiersCombiner={
                                 OptCashVoucherModifierP{OptCashVoucherModifier{DiscountProgram id=35 reverse_order=3 ,
                                  m_max_total_discount=0.99}
                                 }
                                 
                                 }}}],
                                 [LoyaltyInfoSet={
                                  LoyaltyInfo={ provider=LOYALTY_MCC, type=LT_AUTO_OPT}
                                 ,
                                  LoyaltyInfo={ provider=LOYALTY_SCANTECH, type=LT_COBRAND}
                                 
                                 }|==>SmcRoundSctNfBonDsc={SmcNoneTermLoyalty={ m_cfg=0x0000000000000000
                                  allow_bonus_charge()=0
                                  allow_bonus_as_discount()=0
                                  raw cfg params:NULL
                                 SaleModifiersCombiner={
                                 OptCashVoucherModifierP{OptCashVoucherModifier{DiscountProgram id=35 reverse_order=3 ,
                                  m_max_total_discount=0.99}
                                 }
                                 
                                 }}}],
                                 [LoyaltyInfoSet={
                                  LoyaltyInfo={ provider=LOYALTY_MCC, type=LT_AUTO_OPT}
                                 ,
                                  LoyaltyInfo={ provider=LOYALTY_SCANTECH, type=LT_BONUS_AS_DISCOUNT}
                                 
                                 }|==>SmcRoundSctNfBonDsc={SmcNoneTermLoyalty={ m_cfg=0x0000000000000000
                                  allow_bonus_charge()=0
                                  allow_bonus_as_discount()=0
                                  raw cfg params:NULL
                                 SaleModifiersCombiner={
                                 OptCashVoucherModifierP{OptCashVoucherModifier{DiscountProgram id=35 reverse_order=3 ,
                                  m_max_total_discount=0.99}
                                 }
                                 
                                 }}}]
                                 ]
                                 }======= +++++++++ 
2020-02-06 10:20:16.148004 I system Th{5772} [mcs/mcs_mixt_scenario.cpp:39] static_prepare() preapring...
2020-02-06 10:20:16.149004 D system Th{5772} [mcs/the_scenario_table.cpp:47] append()  append rt=NKT_REGISTRATOR= ro=NKT_REFUND_OP= vrt=VIRTUAL_REGISTRATOR= ro=NKT_REFUND_OP=
2020-02-06 10:20:16.149004 D system Th{5772} [mcs/the_scenario_table.cpp:47] append()  append rt=MPS_REGISTRATOR= ro=MPS_REFUND_OP= vrt=VIRTUAL_REGISTRATOR= ro=MPS_REFUND_OP=
2020-02-06 10:20:16.149004 D system Th{5772} [mcs/the_scenario_table.cpp:47] append()  append rt=PETROL_REGISTRATOR= ro=PETROL_REFUND_OP= vrt=VIRTUAL_REGISTRATOR= ro=PETROL_REFUND_OP=
2020-02-06 10:20:16.149004 D system Th{5772} [mcs/the_scenario_table.cpp:47] append()  append rt=SCT_MPS_REGISTRATOR= ro=SCT_MPS_REFUND_OP= vrt=VIRTUAL_REGISTRATOR= ro=SCT_MPS_REFUND_OP=
2020-02-06 10:20:16.149004 D system Th{5772} [mcs/the_scenario_table.cpp:47] append()  append rt=INPAS_REGISTRATOR= ro=INPAS_MPS_REFUND_OP= vrt=VIRTUAL_REGISTRATOR= ro=INPAS_MPS_REFUND_OP=
2020-02-06 10:20:16.149004 D system Th{5772} [mcs/the_scenario_table.cpp:47] append()  append rt=SCT_PETROL_REGISTRATOR= ro=SCT_FLEET_REFUND_OP= vrt=VIRTUAL_REGISTRATOR= ro=SCT_FLEET_REFUND_OP=
2020-02-06 10:20:16.149004 D system Th{5772} [mcs/the_scenario_table.cpp:47] append()  append rt=SCT_LOYALTY_REGISTRATOR= ro=SCT_LOYALTY_BACK_OP= vrt=VIRTUAL_REGISTRATOR= ro=SCT_LOYALTY_BACK_OP=
2020-02-06 10:20:16.149004 D system Th{5772} [mcs/the_scenario_table.cpp:47] append()  append rt=SCT_LOYALTY_REGISTRATOR= ro=SCT_LOYALTY_RECHARGE_OP= vrt=VIRTUAL_REGISTRATOR= ro=SCT_LOYALTY_RECHARGE_OP=
2020-02-06 10:20:16.149004 D system Th{5772} [mcs/the_scenario_table.cpp:47] append()  append rt=SCT_LOYALTY_REGISTRATOR= ro=SCT_REFUND_LOYALTY_OP= vrt=VIRTUAL_REGISTRATOR= ro=SCT_REFUND_LOYALTY_OP=
2020-02-06 10:20:16.149004 D system Th{5772} [mcs/the_scenario_table.cpp:47] append()  append rt=SCT_LOYALTY_REGISTRATOR= ro=SCT_REPAY_WITH_LOYALTY_OP= vrt=VIRTUAL_REGISTRATOR= ro=SCT_REPAY_WITH_LOYALTY_OP=
2020-02-06 10:20:16.149004 D system Th{5772} [mcs/the_scenario_table.cpp:47] append()  append rt=SCT_LOYALTY_REGISTRATOR= ro=SCT_VIP_BACK_OP= vrt=VIRTUAL_REGISTRATOR= ro=SCT_VIP_BACK_OP=
2020-02-06 10:20:16.149004 D system Th{5772} [mcs/the_scenario_table.cpp:47] append()  append rt=SCT_LOYALTY_REGISTRATOR= ro=SCT_RECALC_VIP_OP= vrt=VIRTUAL_REGISTRATOR= ro=SCT_RECALC_VIP_OP=
2020-02-06 10:20:16.149004 D system Th{5772} [mcs/the_scenario_table.cpp:47] append()  append rt=SCT_LOYALTY_REGISTRATOR= ro=SCT_REDISCOUNT_WITH_LOYALTY_OP= vrt=VIRTUAL_REGISTRATOR= ro=SCT_REDISCOUNT_WITH_LOYALTY_OP=
2020-02-06 10:20:16.149004 D system Th{5772} [mcs/the_scenario_table.cpp:47] append()  append rt=SCT_LOYALTY_REGISTRATOR= ro=SCT_DISCOUNT_WITH_LOYALTY_BACK_OP= vrt=VIRTUAL_REGISTRATOR= ro=SCT_DISCOUNT_WITH_LOYALTY_BACK_OP=
2020-02-06 10:20:16.149004 D system Th{5772} [mcs/the_scenario_table.cpp:47] append()  append rt=ECR_REGISTRATOR= ro=ECR_PRINT_FINALIZE_TICKET_OP= vrt=VIRTUAL_REGISTRATOR= ro=ECR_PRINT_FINALIZE_TICKET_OP=
2020-02-06 10:20:16.149004 D system Th{5772} [mcs/the_scenario_table.cpp:47] append()  append rt=GUI_REGISTRATOR= ro=GUI_SOLVE_FAIL_FINALIZE_OP= vrt=VIRTUAL_REGISTRATOR= ro=GUI_SOLVE_FAIL_FINALIZE_OP=
2020-02-06 10:20:16.149004 D system Th{5772} [mcs/the_scenario_table.cpp:47] append()  append rt=GUI_REGISTRATOR= ro=GUI_SOLVE_FAIL_REFUND_OP= vrt=VIRTUAL_REGISTRATOR= ro=GUI_SOLVE_FAIL_REFUND_OP=
2020-02-06 10:20:16.149004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_REFUND_CHEQUE_OP
2020-02-06 10:20:16.149004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.149004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.149004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=SCT_LOYALTY_REGISTRATOR ro=SCT_RECALC_VIP_OP
2020-02-06 10:20:16.149004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_REFUND_CHEQUE_OP
2020-02-06 10:20:16.149004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.149004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.149004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=SCT_LOYALTY_REGISTRATOR ro=SCT_RECALC_VIP_OP
2020-02-06 10:20:16.149004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_REFUND_CHEQUE_OP
2020-02-06 10:20:16.149004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.149004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.149004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=SCT_LOYALTY_REGISTRATOR ro=SCT_RECALC_VIP_OP
2020-02-06 10:20:16.149004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=GUI_REGISTRATOR ro=GUI_SOLVE_FAIL_FINALIZE_OP
2020-02-06 10:20:16.149004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_REFUND_CHEQUE_OP
2020-02-06 10:20:16.149004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.149004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.149004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=SCT_LOYALTY_REGISTRATOR ro=SCT_VIP_BACK_OP
2020-02-06 10:20:16.149004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=GUI_REGISTRATOR ro=GUI_SOLVE_FAIL_FINALIZE_OP
2020-02-06 10:20:16.149004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.149004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=SCT_MPS_REGISTRATOR ro=SCT_MPS_REFUND_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=SCT_MPS_REGISTRATOR ro=SCT_MPS_REFUND_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=SCT_MPS_REGISTRATOR ro=SCT_MPS_REFUND_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=GUI_REGISTRATOR ro=GUI_SOLVE_FAIL_REFUND_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=SCT_MPS_REGISTRATOR ro=SCT_MPS_REFUND_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=SCT_LOYALTY_REGISTRATOR ro=SCT_VIP_BACK_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_REFUND_CHEQUE_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=SCT_LOYALTY_REGISTRATOR ro=SCT_REDISCOUNT_WITH_LOYALTY_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_REFUND_CHEQUE_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=SCT_LOYALTY_REGISTRATOR ro=SCT_REDISCOUNT_WITH_LOYALTY_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_REFUND_CHEQUE_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=SCT_LOYALTY_REGISTRATOR ro=SCT_REDISCOUNT_WITH_LOYALTY_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=GUI_REGISTRATOR ro=GUI_SOLVE_FAIL_FINALIZE_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_REFUND_CHEQUE_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=SCT_LOYALTY_REGISTRATOR ro=SCT_DISCOUNT_WITH_LOYALTY_BACK_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=GUI_REGISTRATOR ro=GUI_SOLVE_FAIL_FINALIZE_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=SCT_MPS_REGISTRATOR ro=SCT_MPS_REFUND_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=SCT_MPS_REGISTRATOR ro=SCT_MPS_REFUND_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=SCT_MPS_REGISTRATOR ro=SCT_MPS_REFUND_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=GUI_REGISTRATOR ro=GUI_SOLVE_FAIL_REFUND_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=SCT_MPS_REGISTRATOR ro=SCT_MPS_REFUND_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=SCT_LOYALTY_REGISTRATOR ro=SCT_DISCOUNT_WITH_LOYALTY_BACK_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_REFUND_CHEQUE_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=SCT_LOYALTY_REGISTRATOR ro=SCT_LOYALTY_RECHARGE_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_REFUND_CHEQUE_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=SCT_LOYALTY_REGISTRATOR ro=SCT_LOYALTY_RECHARGE_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_REFUND_CHEQUE_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=SCT_LOYALTY_REGISTRATOR ro=SCT_LOYALTY_RECHARGE_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=GUI_REGISTRATOR ro=GUI_SOLVE_FAIL_FINALIZE_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_REFUND_CHEQUE_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=SCT_LOYALTY_REGISTRATOR ro=SCT_LOYALTY_BACK_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=GUI_REGISTRATOR ro=GUI_SOLVE_FAIL_FINALIZE_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=SCT_MPS_REGISTRATOR ro=SCT_MPS_REFUND_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=SCT_MPS_REGISTRATOR ro=SCT_MPS_REFUND_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=SCT_MPS_REGISTRATOR ro=SCT_MPS_REFUND_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=GUI_REGISTRATOR ro=GUI_SOLVE_FAIL_REFUND_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=SCT_MPS_REGISTRATOR ro=SCT_MPS_REFUND_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=SCT_LOYALTY_REGISTRATOR ro=SCT_LOYALTY_BACK_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_REFUND_CHEQUE_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=SCT_LOYALTY_REGISTRATOR ro=SCT_RECALC_VIP_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_REFUND_CHEQUE_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=SCT_LOYALTY_REGISTRATOR ro=SCT_RECALC_VIP_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_REFUND_CHEQUE_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=SCT_LOYALTY_REGISTRATOR ro=SCT_RECALC_VIP_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=GUI_REGISTRATOR ro=GUI_SOLVE_FAIL_FINALIZE_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_REFUND_CHEQUE_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=SCT_LOYALTY_REGISTRATOR ro=SCT_VIP_BACK_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=GUI_REGISTRATOR ro=GUI_SOLVE_FAIL_FINALIZE_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=INPAS_REGISTRATOR ro=INPAS_MPS_REFUND_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=INPAS_REGISTRATOR ro=INPAS_MPS_REFUND_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=INPAS_REGISTRATOR ro=INPAS_MPS_REFUND_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=GUI_REGISTRATOR ro=GUI_SOLVE_FAIL_REFUND_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=INPAS_REGISTRATOR ro=INPAS_MPS_REFUND_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=SCT_LOYALTY_REGISTRATOR ro=SCT_VIP_BACK_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_REFUND_CHEQUE_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.150004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=SCT_LOYALTY_REGISTRATOR ro=SCT_REDISCOUNT_WITH_LOYALTY_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_REFUND_CHEQUE_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=SCT_LOYALTY_REGISTRATOR ro=SCT_REDISCOUNT_WITH_LOYALTY_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_REFUND_CHEQUE_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=SCT_LOYALTY_REGISTRATOR ro=SCT_REDISCOUNT_WITH_LOYALTY_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=GUI_REGISTRATOR ro=GUI_SOLVE_FAIL_FINALIZE_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_REFUND_CHEQUE_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=SCT_LOYALTY_REGISTRATOR ro=SCT_DISCOUNT_WITH_LOYALTY_BACK_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=GUI_REGISTRATOR ro=GUI_SOLVE_FAIL_FINALIZE_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=INPAS_REGISTRATOR ro=INPAS_MPS_REFUND_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=INPAS_REGISTRATOR ro=INPAS_MPS_REFUND_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=INPAS_REGISTRATOR ro=INPAS_MPS_REFUND_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=GUI_REGISTRATOR ro=GUI_SOLVE_FAIL_REFUND_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=INPAS_REGISTRATOR ro=INPAS_MPS_REFUND_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=SCT_LOYALTY_REGISTRATOR ro=SCT_DISCOUNT_WITH_LOYALTY_BACK_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_REFUND_CHEQUE_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=SCT_LOYALTY_REGISTRATOR ro=SCT_LOYALTY_RECHARGE_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_REFUND_CHEQUE_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=SCT_LOYALTY_REGISTRATOR ro=SCT_LOYALTY_RECHARGE_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_REFUND_CHEQUE_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=SCT_LOYALTY_REGISTRATOR ro=SCT_LOYALTY_RECHARGE_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=GUI_REGISTRATOR ro=GUI_SOLVE_FAIL_FINALIZE_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_REFUND_CHEQUE_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=SCT_LOYALTY_REGISTRATOR ro=SCT_LOYALTY_BACK_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=GUI_REGISTRATOR ro=GUI_SOLVE_FAIL_FINALIZE_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=INPAS_REGISTRATOR ro=INPAS_MPS_REFUND_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=INPAS_REGISTRATOR ro=INPAS_MPS_REFUND_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=INPAS_REGISTRATOR ro=INPAS_MPS_REFUND_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=GUI_REGISTRATOR ro=GUI_SOLVE_FAIL_REFUND_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=INPAS_REGISTRATOR ro=INPAS_MPS_REFUND_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=SCT_LOYALTY_REGISTRATOR ro=SCT_LOYALTY_BACK_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=SCT_MPS_REGISTRATOR ro=SCT_MPS_REFUND_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=INPAS_REGISTRATOR ro=INPAS_MPS_REFUND_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=SCT_PETROL_REGISTRATOR ro=SCT_FLEET_REFUND_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_REFUND_CHEQUE_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=SCT_LOYALTY_REGISTRATOR ro=SCT_REPAY_WITH_LOYALTY_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_REFUND_CHEQUE_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=SCT_LOYALTY_REGISTRATOR ro=SCT_REPAY_WITH_LOYALTY_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_REFUND_CHEQUE_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=SCT_LOYALTY_REGISTRATOR ro=SCT_REPAY_WITH_LOYALTY_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=GUI_REGISTRATOR ro=GUI_SOLVE_FAIL_FINALIZE_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_REFUND_CHEQUE_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=SCT_LOYALTY_REGISTRATOR ro=SCT_REFUND_LOYALTY_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=GUI_REGISTRATOR ro=GUI_SOLVE_FAIL_FINALIZE_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_REFUND_CHEQUE_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_REFUND_CHEQUE_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_REFUND_CHEQUE_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=SCT_LOYALTY_REGISTRATOR ro=SCT_REFUND_LOYALTY_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_REFUND_CHEQUE_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=SCT_LOYALTY_REGISTRATOR ro=SCT_LOYALTY_RECHARGE_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_REFUND_CHEQUE_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=SCT_LOYALTY_REGISTRATOR ro=SCT_LOYALTY_RECHARGE_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_REFUND_CHEQUE_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=SCT_LOYALTY_REGISTRATOR ro=SCT_LOYALTY_RECHARGE_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=GUI_REGISTRATOR ro=GUI_SOLVE_FAIL_FINALIZE_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_REFUND_CHEQUE_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=SCT_LOYALTY_REGISTRATOR ro=SCT_LOYALTY_BACK_OP
2020-02-06 10:20:16.151004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=GUI_REGISTRATOR ro=GUI_SOLVE_FAIL_FINALIZE_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_REFUND_CHEQUE_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_REFUND_CHEQUE_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_REFUND_CHEQUE_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=SCT_LOYALTY_REGISTRATOR ro=SCT_LOYALTY_BACK_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_REFUND_CHEQUE_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=SCT_LOYALTY_REGISTRATOR ro=SCT_RECALC_VIP_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_REFUND_CHEQUE_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=SCT_LOYALTY_REGISTRATOR ro=SCT_RECALC_VIP_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_REFUND_CHEQUE_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=SCT_LOYALTY_REGISTRATOR ro=SCT_RECALC_VIP_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=GUI_REGISTRATOR ro=GUI_SOLVE_FAIL_FINALIZE_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_REFUND_CHEQUE_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=SCT_LOYALTY_REGISTRATOR ro=SCT_VIP_BACK_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=GUI_REGISTRATOR ro=GUI_SOLVE_FAIL_FINALIZE_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_REFUND_CHEQUE_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_REFUND_CHEQUE_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_REFUND_CHEQUE_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=SCT_LOYALTY_REGISTRATOR ro=SCT_VIP_BACK_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_REFUND_CHEQUE_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=SCT_LOYALTY_REGISTRATOR ro=SCT_REDISCOUNT_WITH_LOYALTY_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_REFUND_CHEQUE_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=SCT_LOYALTY_REGISTRATOR ro=SCT_REDISCOUNT_WITH_LOYALTY_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_REFUND_CHEQUE_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=SCT_LOYALTY_REGISTRATOR ro=SCT_REDISCOUNT_WITH_LOYALTY_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=GUI_REGISTRATOR ro=GUI_SOLVE_FAIL_FINALIZE_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_REFUND_CHEQUE_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=SCT_LOYALTY_REGISTRATOR ro=SCT_DISCOUNT_WITH_LOYALTY_BACK_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=GUI_REGISTRATOR ro=GUI_SOLVE_FAIL_FINALIZE_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_REFUND_CHEQUE_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FINALIZE_TICKET_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_REFUND_CHEQUE_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_REFUND_CHEQUE_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=SCT_LOYALTY_REGISTRATOR ro=SCT_DISCOUNT_WITH_LOYALTY_BACK_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_REFUND_CHEQUE_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_REFUND_CHEQUE_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_REFUND_CHEQUE_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_REFUND_CHEQUE_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=NKT_REGISTRATOR ro=NKT_REFUND_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=MPS_REGISTRATOR ro=MPS_REFUND_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_REFUND_CHEQUE_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=PETROL_REGISTRATOR ro=PETROL_REFUND_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=GUI_REGISTRATOR ro=GUI_SALE_UPDATE_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_REFUND_CHEQUE_OP
2020-02-06 10:20:16.152004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FACT_CHEQUE_OP
2020-02-06 10:20:16.152004 D system Th{5772} [mcs/the_scenario_table.cpp:47] append()  append rt=NKT_REGISTRATOR= ro=NKT_UPDATE_AFTER_FUELING_OP= vrt=VIRTUAL_REGISTRATOR= ro=NKT_UPDATE_AFTER_FUELING_OP=
2020-02-06 10:20:16.152004 D system Th{5772} [mcs/the_scenario_table.cpp:47] append()  append rt=NKT_REGISTRATOR= ro=NKT_PAYMENT_OP= vrt=VIRTUAL_REGISTRATOR= ro=NKT_PAYMENT_OP=
2020-02-06 10:20:16.152004 D system Th{5772} [mcs/the_scenario_table.cpp:47] append()  append rt=NKT_REGISTRATOR= ro=NKT_FINALIZE_OP= vrt=VIRTUAL_REGISTRATOR= ro=NKT_FINALIZE_OP=
2020-02-06 10:20:16.152004 D system Th{5772} [mcs/the_scenario_table.cpp:47] append()  append rt=PETROL_REGISTRATOR= ro=PETROL_PAYMENT_OP= vrt=VIRTUAL_REGISTRATOR= ro=PETROL_PAYMENT_OP=
2020-02-06 10:20:16.152004 D system Th{5772} [mcs/the_scenario_table.cpp:47] append()  append rt=PETROL_REGISTRATOR= ro=PETROL_FINALIZE_OP= vrt=VIRTUAL_REGISTRATOR= ro=PETROL_FINALIZE_OP=
2020-02-06 10:20:16.152004 D system Th{5772} [mcs/the_scenario_table.cpp:47] append()  append rt=MPS_REGISTRATOR= ro=MPS_PAYMENT_OP= vrt=VIRTUAL_REGISTRATOR= ro=MPS_PAYMENT_OP=
2020-02-06 10:20:16.152004 D system Th{5772} [mcs/the_scenario_table.cpp:47] append()  append rt=MPS_REGISTRATOR= ro=MPS_FINALIZE_FOR_PAY_OP= vrt=VIRTUAL_REGISTRATOR= ro=MPS_FINALIZE_FOR_PAY_OP=
2020-02-06 10:20:16.152004 D system Th{5772} [mcs/the_scenario_table.cpp:47] append()  append rt=SCT_MPS_REGISTRATOR= ro=SCT_MPS_PAYMENT_OP= vrt=VIRTUAL_REGISTRATOR= ro=SCT_MPS_PAYMENT_OP=
2020-02-06 10:20:16.152004 D system Th{5772} [mcs/the_scenario_table.cpp:47] append()  append rt=INPAS_REGISTRATOR= ro=INPAS_MPS_PAYMENT_OP= vrt=VIRTUAL_REGISTRATOR= ro=INPAS_MPS_PAYMENT_OP=
2020-02-06 10:20:16.152004 D system Th{5772} [mcs/the_scenario_table.cpp:47] append()  append rt=SCT_PETROL_REGISTRATOR= ro=SCT_FLEET_PAYMENT_OP= vrt=VIRTUAL_REGISTRATOR= ro=SCT_FLEET_PAYMENT_OP=
2020-02-06 10:20:16.152004 D system Th{5772} [mcs/the_scenario_table.cpp:47] append()  append rt=SCT_LOYALTY_REGISTRATOR= ro=SCT_LOYALTY_CHARGE_OP= vrt=VIRTUAL_REGISTRATOR= ro=SCT_LOYALTY_CHARGE_OP=
2020-02-06 10:20:16.152004 D system Th{5772} [mcs/the_scenario_table.cpp:47] append()  append rt=SCT_LOYALTY_REGISTRATOR= ro=SCT_PAY_WITH_LOYALTY_OP= vrt=VIRTUAL_REGISTRATOR= ro=SCT_PAY_WITH_LOYALTY_OP=
2020-02-06 10:20:16.152004 D system Th{5772} [mcs/the_scenario_table.cpp:47] append()  append rt=SCT_LOYALTY_REGISTRATOR= ro=SCT_CALC_VIP_OP= vrt=VIRTUAL_REGISTRATOR= ro=SCT_CALC_VIP_OP=
2020-02-06 10:20:16.152004 D system Th{5772} [mcs/the_scenario_table.cpp:47] append()  append rt=SCT_LOYALTY_REGISTRATOR= ro=SCT_VIP_BACK_BEFORE_FUELING_OP= vrt=VIRTUAL_REGISTRATOR= ro=SCT_VIP_BACK_BEFORE_FUELING_OP=
2020-02-06 10:20:16.152004 D system Th{5772} [mcs/the_scenario_table.cpp:47] append()  append rt=SCT_LOYALTY_REGISTRATOR= ro=SCT_DISCOUNT_WITH_LOYALTY_OP= vrt=VIRTUAL_REGISTRATOR= ro=SCT_DISCOUNT_WITH_LOYALTY_OP=
2020-02-06 10:20:16.152004 D system Th{5772} [mcs/the_scenario_table.cpp:47] append()  append rt=SCT_LOYALTY_REGISTRATOR= ro=SCT_DISCOUNT_WITH_LOYALTY_BACK_BEFORE_FUELING_OP= vrt=VIRTUAL_REGISTRATOR= ro=SCT_DISCOUNT_WITH_LOYALTY_BACK_BEFORE_FUELING_OP=
2020-02-06 10:20:16.152004 D system Th{5772} [mcs/the_scenario_table.cpp:47] append()  append rt=GUI_REGISTRATOR= ro=GUI_CONFIRM_BONUS_AS_DISCOUNT_OP= vrt=VIRTUAL_REGISTRATOR= ro=GUI_CONFIRM_BONUS_AS_DISCOUNT_OP=
2020-02-06 10:20:16.152004 D system Th{5772} [mcs/the_scenario_table.cpp:47] append()  append rt=GUI_REGISTRATOR= ro=GUI_CONFIRM_VIP_OP= vrt=VIRTUAL_REGISTRATOR= ro=GUI_CONFIRM_VIP_OP=
2020-02-06 10:20:16.152004 D system Th{5772} [mcs/the_scenario_table.cpp:47] append()  append rt=ECR_REGISTRATOR= ro=ECR_PRINT_PAY_TICKET_OP= vrt=VIRTUAL_REGISTRATOR= ro=ECR_PRINT_PAY_TICKET_OP=
2020-02-06 10:20:16.152004 D system Th{5772} [mcs/the_scenario_table.cpp:47] append()  append rt=GUI_REGISTRATOR= ro=GUI_DROP_LOYALTY_OP= vrt=VIRTUAL_REGISTRATOR= ro=GUI_DROP_LOYALTY_OP=
2020-02-06 10:20:16.152004 D system Th{5772} [mcs/the_scenario_table.cpp:47] append()  append rt=GUI_REGISTRATOR= ro=GUI_SCT_PAY_FAIL_DIALOG_OP= vrt=VIRTUAL_REGISTRATOR= ro=GUI_SCT_PAY_FAIL_DIALOG_OP=
2020-02-06 10:20:16.152004 D system Th{5772} [mcs/the_scenario_table.cpp:47] append()  append rt=GUI_REGISTRATOR= ro=GUI_POSTPAY_SALE_UPDATE_OP= vrt=VIRTUAL_REGISTRATOR= ro=GUI_POSTPAY_SALE_UPDATE_OP=
2020-02-06 10:20:16.152004 D system Th{5772} [mcs/the_scenario_table.cpp:47] append()  append rt=GUI_REGISTRATOR= ro=GUI_POSTPAY_SALE_APPROVE_OP= vrt=VIRTUAL_REGISTRATOR= ro=GUI_POSTPAY_SALE_APPROVE_OP=
2020-02-06 10:20:16.152004 D system Th{5772} [mcs/the_scenario_table.cpp:47] append()  append rt=GUI_REGISTRATOR= ro=GUI_SALE_FORK_OP= vrt=VIRTUAL_REGISTRATOR= ro=GUI_SALE_FORK_OP=
2020-02-06 10:20:16.152004 D system Th{5772} [mcs/the_scenario_table.cpp:47] append()  append rt=GUI_REGISTRATOR= ro=GUI_SOLVE_NCT_PAY_REJECT_OP= vrt=VIRTUAL_REGISTRATOR= ro=GUI_SOLVE_NCT_PAY_REJECT_OP=
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=GUI_REGISTRATOR ro=GUI_SCT_PAY_FAIL_DIALOG_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FACT_CHEQUE_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_AND_BACK_TO_DEBET_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FACT_CHEQUE_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_TICKET_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=SCT_LOYALTY_REGISTRATOR ro=SCT_VIP_BACK_BEFORE_FUELING_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FACT_CHEQUE_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_AND_BACK_TO_DEBET_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FACT_CHEQUE_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_TICKET_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FACT_CHEQUE_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_AND_BACK_TO_DEBET_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FACT_CHEQUE_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_TICKET_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=SCT_MPS_REGISTRATOR ro=SCT_MPS_PAYMENT_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=GUI_REGISTRATOR ro=GUI_SCT_PAY_FAIL_DIALOG_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_TICKET_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=SCT_LOYALTY_REGISTRATOR ro=SCT_CALC_VIP_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=GUI_REGISTRATOR ro=GUI_SCT_PAY_FAIL_DIALOG_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FACT_CHEQUE_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_AND_BACK_TO_DEBET_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FACT_CHEQUE_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_TICKET_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=SCT_LOYALTY_REGISTRATOR ro=SCT_VIP_BACK_BEFORE_FUELING_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=GUI_REGISTRATOR ro=GUI_SCT_PAY_FAIL_DIALOG_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FACT_CHEQUE_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_AND_BACK_TO_DEBET_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FACT_CHEQUE_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_TICKET_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FACT_CHEQUE_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_AND_BACK_TO_DEBET_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FACT_CHEQUE_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_TICKET_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FACT_CHEQUE_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_AND_BACK_TO_DEBET_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FACT_CHEQUE_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_TICKET_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=SCT_MPS_REGISTRATOR ro=SCT_MPS_PAYMENT_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=SCT_LOYALTY_REGISTRATOR ro=SCT_CALC_VIP_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=GUI_REGISTRATOR ro=GUI_SCT_PAY_FAIL_DIALOG_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FACT_CHEQUE_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_AND_BACK_TO_DEBET_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FACT_CHEQUE_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_TICKET_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=SCT_LOYALTY_REGISTRATOR ro=SCT_VIP_BACK_BEFORE_FUELING_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FACT_CHEQUE_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_AND_BACK_TO_DEBET_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FACT_CHEQUE_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_TICKET_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FACT_CHEQUE_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_AND_BACK_TO_DEBET_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FACT_CHEQUE_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_TICKET_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=INPAS_REGISTRATOR ro=INPAS_MPS_PAYMENT_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=GUI_REGISTRATOR ro=GUI_SCT_PAY_FAIL_DIALOG_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_TICKET_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=SCT_LOYALTY_REGISTRATOR ro=SCT_CALC_VIP_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=GUI_REGISTRATOR ro=GUI_SCT_PAY_FAIL_DIALOG_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FACT_CHEQUE_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_AND_BACK_TO_DEBET_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FACT_CHEQUE_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_TICKET_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=SCT_LOYALTY_REGISTRATOR ro=SCT_VIP_BACK_BEFORE_FUELING_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=GUI_REGISTRATOR ro=GUI_SCT_PAY_FAIL_DIALOG_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FACT_CHEQUE_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_AND_BACK_TO_DEBET_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FACT_CHEQUE_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_TICKET_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FACT_CHEQUE_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_AND_BACK_TO_DEBET_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FACT_CHEQUE_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_TICKET_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FACT_CHEQUE_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_AND_BACK_TO_DEBET_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FACT_CHEQUE_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_TICKET_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=INPAS_REGISTRATOR ro=INPAS_MPS_PAYMENT_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_FAIL_PAY_TICKET_OP
2020-02-06 10:20:16.153004 D sale Th{5772} [mcs/mcs_registrator.cpp:716] get_operation_traits() rt=ECR_REGISTRATOR ro=ECR_PRINT_PAY_FINALIZE_SUSPEND_TICKET_OP
